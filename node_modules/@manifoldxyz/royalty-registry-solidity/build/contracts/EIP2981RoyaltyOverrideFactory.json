{
  "contractName": "EIP2981RoyaltyOverrideFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newEIP2981RoyaltyOverride",
          "type": "address"
        }
      ],
      "name": "EIP2981RoyaltyOverrideCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "originAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createOverride",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newEIP2981RoyaltyOverride\",\"type\":\"address\"}],\"name\":\"EIP2981RoyaltyOverrideCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"createOverride\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"originAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Clone Factory for EIP2981 reference override implementation\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/overrides/RoyaltyOverrideFactory.sol\":\"EIP2981RoyaltyOverrideFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x9ffedb33e192f8821cbaead72596c79ea87fb28a73f8d3a9f5004449799f8e1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4d3a7c2729f266c54345044baf1080fb4a85208059cacea28c95622af4371db\",\"dweb:/ipfs/QmcHCX8reksSoQWjjYRcVoEHckz8AQ7CHKiKfzocpQq3Lg\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x68861bcc80cacbd498efde75aab6c74a486cc48262660d326c8d7530d9752097\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5beb2713aca05976562500789329e8c41320d00bd68ea9247856ec73894c3e3f\",\"dweb:/ipfs/QmQKwkpofsZYAzMZs7uNL7Qq58zVBuhoZCGpD6bJdUwyqy\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x3f0f878c796dfc7feba6d3c4e3e526c14c7deae8b7bfc71088e3f38fab0d77b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://69bf7d357ce97852f4fb71045919b1bb2c0ad0c820e3f06b9dd4451b2dc5a343\",\"dweb:/ipfs/QmWt96ZviufDu2qqS7Ln6UCJjfLyoFKbo6YKn54ao3o94z\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0b0d548f6381370d394f7a434f994dc678b3ef3e755de106109d61343a685ea7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a3d42f1333d4224b7e6b7914e7ef5ee6d86586a3529bd1da15cbeece0d25b3\",\"dweb:/ipfs/QmXmFqePuCWzBcz9KyBepE7joHMg8jSjcmd5iayyG7jm3y\"]},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x1cc0efb01cbf008b768fd7b334786a6e358809198bb7e67f1c530af4957c6a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af407aa35f7602a9047a27803bfd98c372479474f77f7aaf833166bdd952f2fd\",\"dweb:/ipfs/QmZgo1P3RM4Gn5CJKkNRn3tQDHotWPw9H7p7vC1hm4XkZv\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9772845c886f87a3aab315f8d6b68aa599027c20f441b131cd4afaf65b588900\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad2f29a9c17a4f746416c9e254e17671f43c409dbfa6e4d7d76c3e4a83212d31\",\"dweb:/ipfs/QmTqU65L6iu6yqmXKzcNLPioR8etzKPWycpDJCm17ifVdS\"]},\"project:/contracts/overrides/IRoyaltyOverride.sol\":{\"keccak256\":\"0xb7f47d4711c6eb42dc5874ad916713ffb6e8754ad568cdb5e9b0c5fcb028c698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e812aa71ced173c79c2f2b324b76cb2cac37b18f3b10cc8142f24a1e013a8434\",\"dweb:/ipfs/QmTh1M42TKPPbMCGWVv7eHVbdop9K4PM2WXsdnTL9PKd7Y\"]},\"project:/contracts/overrides/RoyaltyOverrideCloneable.sol\":{\"keccak256\":\"0xfbdc97e0bd0cbea6be92b70be33f70767f3232a2b71532a6b95361df785b1dd4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://227a98c940a58028ea0550559c182ceadbfcec8d9fd9a6cfec45a20ac020d9a9\",\"dweb:/ipfs/Qma2SXmurgVgNkcaYesmgronqqfESVufEV7gXRppT6dkuH\"]},\"project:/contracts/overrides/RoyaltyOverrideCore.sol\":{\"keccak256\":\"0xfda6bb019fbae9b5a2fd0007e3b25b80dbc6abd78d121ced1dc6bb8935894491\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33891c964ebf42268b07d263bb4483c60711d30c68f010392c5d7f540479b3aa\",\"dweb:/ipfs/QmUD2uXT8mJLjaX5X3MMxUZgP8hoCjJfo9hAX8YDYyYTsm\"]},\"project:/contracts/overrides/RoyaltyOverrideFactory.sol\":{\"keccak256\":\"0x212759cba566b53365cab1339d391c7edf475bf15e95b94a6bd8b239724840a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://446f609878a1b6dd031f0b69410eea3fa813ed8d327e16e64cb19bb70d5c2b33\",\"dweb:/ipfs/QmTDW5AQcSDGmfGzW76k3beqHLUJnZKp92pv9da1Fz7rtW\"]},\"project:/contracts/specs/IEIP2981.sol\":{\"keccak256\":\"0xa150218faf74c7d01e3d9aa712845a2bb519e7fc2ec854e2241c53e4cce163ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff1b82e48fee1aece0fda4b3c0ce248cca13f3bc1e023035a172a467ad3be07\",\"dweb:/ipfs/QmTBtTg12Qq7AkY34srF1sLbLwvBQKohaTeB1KkyGx7KYk\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516104cd3803806104cd8339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600081519050610087816100f1565b92915050565b6000602082840312156100a3576100a26100ec565b5b60006100b184828501610078565b91505092915050565b60006100c5826100cc565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100fa816100ba565b811461010557600080fd5b50565b6103b6806101176000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634994fa9a1461003b578063e517fedd14610059575b600080fd5b610043610077565b60405161005091906102d9565b60405180910390f35b6100616101ae565b60405161006e91906102d9565b60405180910390f35b6000806100a360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166101d2565b90508073ffffffffffffffffffffffffffffffffffffffff16638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156100ed57600080fd5b505af1158015610101573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663f2fde38b336040518263ffffffff1660e01b815260040161013e91906102d9565b600060405180830381600087803b15801561015857600080fd5b505af115801561016c573d6000803e3d6000fd5b505050507f6ace5835f14486bead350c58a6ce67b18fec46c58b809b749b08541cf74580258160405161019f91906102d9565b60405180910390a18091505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f0915050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156102a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610299906102f4565b60405180910390fd5b919050565b6102b081610325565b82525050565b60006102c3601683610314565b91506102ce82610357565b602082019050919050565b60006020820190506102ee60008301846102a7565b92915050565b6000602082019050818103600083015261030d816102b6565b9050919050565b600082825260208201905092915050565b600061033082610337565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f455243313136373a20637265617465206661696c65640000000000000000000060008201525056fea2646970667358221220cf8af52f4d1a75ee855459719649870acea3c170a16c2dd9048c1c8834b3dd8164736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80634994fa9a1461003b578063e517fedd14610059575b600080fd5b610043610077565b60405161005091906102d9565b60405180910390f35b6100616101ae565b60405161006e91906102d9565b60405180910390f35b6000806100a360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166101d2565b90508073ffffffffffffffffffffffffffffffffffffffff16638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156100ed57600080fd5b505af1158015610101573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663f2fde38b336040518263ffffffff1660e01b815260040161013e91906102d9565b600060405180830381600087803b15801561015857600080fd5b505af115801561016c573d6000803e3d6000fd5b505050507f6ace5835f14486bead350c58a6ce67b18fec46c58b809b749b08541cf74580258160405161019f91906102d9565b60405180910390a18091505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f0915050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156102a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610299906102f4565b60405180910390fd5b919050565b6102b081610325565b82525050565b60006102c3601683610314565b91506102ce82610357565b602082019050919050565b60006020820190506102ee60008301846102a7565b92915050565b6000602082019050818103600083015261030d816102b6565b9050919050565b600082825260208201905092915050565b600061033082610337565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f455243313136373a20637265617465206661696c65640000000000000000000060008201525056fea2646970667358221220cf8af52f4d1a75ee855459719649870acea3c170a16c2dd9048c1c8834b3dd8164736f6c63430008070033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1199:56",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:56",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:56"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:56"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:56"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:56"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:56"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:56",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:56",
                "type": ""
              }
            ],
            "src": "7:143:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "233:274:56",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:83:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "281:77:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:79:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:79:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "254:7:56"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "263:9:56"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "250:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "250:23:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "275:2:56",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "246:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "246:32:56"
                  },
                  "nodeType": "YulIf",
                  "src": "243:119:56"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "372:128:56",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "387:15:56",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "401:1:56",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "391:6:56",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "416:74:56",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "462:9:56"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "473:6:56"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "458:3:56"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "458:22:56"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "482:7:56"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "426:31:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "426:64:56"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "416:6:56"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "203:9:56",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "214:7:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "226:6:56",
                "type": ""
              }
            ],
            "src": "156:351:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "553:35:56",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "563:19:56",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "579:2:56",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "573:5:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "573:9:56"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "563:6:56"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "546:6:56",
                "type": ""
              }
            ],
            "src": "513:75:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "639:51:56",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "649:35:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "678:5:56"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "660:17:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "660:24:56"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "649:7:56"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "621:5:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "631:7:56",
                "type": ""
              }
            ],
            "src": "594:96:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "741:81:56",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "751:65:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "766:5:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "773:42:56",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "762:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "762:54:56"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "751:7:56"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "723:5:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "733:7:56",
                "type": ""
              }
            ],
            "src": "696:126:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "917:28:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "934:1:56",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "937:1:56",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "927:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "927:12:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "927:12:56"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "828:117:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1040:28:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1057:1:56",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1060:1:56",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1050:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1050:12:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1050:12:56"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "951:117:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1117:79:56",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1174:16:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1183:1:56",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1186:1:56",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1176:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1176:12:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1176:12:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1140:5:56"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1165:5:56"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1147:17:56"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1147:24:56"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1137:2:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1137:35:56"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1130:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1130:43:56"
                  },
                  "nodeType": "YulIf",
                  "src": "1127:63:56"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1110:5:56",
                "type": ""
              }
            ],
            "src": "1074:122:56"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 56,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1740:56",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "72:53:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "89:3:56"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "112:5:56"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "94:17:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "94:24:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "82:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:37:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "82:37:56"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "60:5:56",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "67:3:56",
                "type": ""
              }
            ],
            "src": "7:118:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "277:220:56",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "287:74:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "353:3:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "358:2:56",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "294:58:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "294:67:56"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "287:3:56"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "459:3:56"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
                      "nodeType": "YulIdentifier",
                      "src": "370:88:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "370:93:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "370:93:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "472:19:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "483:3:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "488:2:56",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "479:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "479:12:56"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "472:3:56"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "265:3:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "273:3:56",
                "type": ""
              }
            ],
            "src": "131:366:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "601:124:56",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "611:26:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "623:9:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "634:2:56",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "619:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "619:18:56"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "611:4:56"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "691:6:56"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "704:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "715:1:56",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "700:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "700:17:56"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "647:43:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "647:71:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "647:71:56"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "573:9:56",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "585:6:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "596:4:56",
                "type": ""
              }
            ],
            "src": "503:222:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "902:248:56",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "912:26:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "924:9:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "935:2:56",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "920:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:18:56"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "912:4:56"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "959:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "970:1:56",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "955:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "955:17:56"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "978:4:56"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "984:9:56"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "974:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "974:20:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "948:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "948:47:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "948:47:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1004:139:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1138:4:56"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1012:124:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1012:131:56"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1004:4:56"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "882:9:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "897:4:56",
                "type": ""
              }
            ],
            "src": "731:419:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1252:73:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1269:3:56"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1274:6:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1262:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1262:19:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1262:19:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1290:29:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1309:3:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1314:4:56",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1305:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1305:14:56"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1290:11:56"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1224:3:56",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1229:6:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1240:11:56",
                "type": ""
              }
            ],
            "src": "1156:169:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1376:51:56",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1386:35:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1415:5:56"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1397:17:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1397:24:56"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1386:7:56"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1358:5:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1368:7:56",
                "type": ""
              }
            ],
            "src": "1331:96:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1478:81:56",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1488:65:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1503:5:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1510:42:56",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1499:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1499:54:56"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1488:7:56"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1460:5:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1470:7:56",
                "type": ""
              }
            ],
            "src": "1433:126:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1671:66:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1693:6:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1701:1:56",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1689:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1689:14:56"
                      },
                      {
                        "hexValue": "455243313136373a20637265617465206661696c6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1705:24:56",
                        "type": "",
                        "value": "ERC1167: create failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1682:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1682:48:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1682:48:56"
                }
              ]
            },
            "name": "store_literal_in_memory_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1663:6:56",
                "type": ""
              }
            ],
            "src": "1565:172:56"
          }
        ]
      },
      "contents": "{\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function store_literal_in_memory_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1167: create failed\")\n\n    }\n\n}\n",
      "id": 56,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "249:532:43:-:0;;;401:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;453:6;437:13;;:22;;;;;;;;;;;;;;;;;;401:63;249:532;;7:143:56;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;249:532:43:-;;;;;;;",
  "deployedSourceMap": "249:532:43:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;468:311;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;293:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;468:311;510:7;527:13;543:27;556:13;;;;;;;;;;543:12;:27::i;:::-;527:43;;610:5;578:49;;;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;669:5;637:56;;;694:10;637:68;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;718:36;748:5;718:36;;;;;;:::i;:::-;;;;;;;;769:5;762:12;;;468:311;:::o;293:28::-;;;;;;;;;;;;:::o;958:515:11:-;1015:16;1083:4;1077:11;1113:66;1108:3;1101:79;1226:14;1220:4;1216:25;1209:4;1204:3;1200:14;1193:49;1278:66;1271:4;1266:3;1262:14;1255:90;1385:4;1380:3;1377:1;1370:20;1358:32;;1052:348;1437:1;1417:22;;:8;:22;;;;1409:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;958:515;;;:::o;7:118:56:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;7:118;;:::o;131:366::-;273:3;294:67;358:2;353:3;294:67;:::i;:::-;287:74;;370:93;459:3;370:93;:::i;:::-;488:2;483:3;479:12;472:19;;131:366;;;:::o;503:222::-;596:4;634:2;623:9;619:18;611:26;;647:71;715:1;704:9;700:17;691:6;647:71;:::i;:::-;503:222;;;;:::o;731:419::-;897:4;935:2;924:9;920:18;912:26;;984:9;978:4;974:20;970:1;959:9;955:17;948:47;1012:131;1138:4;1012:131;:::i;:::-;1004:139;;731:419;;;:::o;1156:169::-;1240:11;1274:6;1269:3;1262:19;1314:4;1309:3;1305:14;1290:29;;1156:169;;;;:::o;1331:96::-;1368:7;1397:24;1415:5;1397:24;:::i;:::-;1386:35;;1331:96;;;:::o;1433:126::-;1470:7;1510:42;1503:5;1499:54;1488:65;;1433:126;;;:::o;1565:172::-;1705:24;1701:1;1693:6;1689:14;1682:48;1565:172;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/// @author: manifold.xyz\n\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\nimport \"./RoyaltyOverrideCloneable.sol\";\n\n/**\n * Clone Factory for EIP2981 reference override implementation\n */\ncontract EIP2981RoyaltyOverrideFactory {\n\n  address public originAddress;\n\n  event EIP2981RoyaltyOverrideCreated(address newEIP2981RoyaltyOverride);\n\n  constructor(address origin) {\n      originAddress = origin;\n  }\n\n  function createOverride() public returns (address) {\n      address clone = Clones.clone(originAddress);\n      EIP2981RoyaltyOverrideCloneable(clone).initialize();\n      EIP2981RoyaltyOverrideCloneable(clone).transferOwnership(msg.sender);\n      emit EIP2981RoyaltyOverrideCreated(clone);\n      return clone;\n  }\n}",
  "sourcePath": "/home/chung/git/manifoldxyz/royalty-registry-solidity/contracts/overrides/RoyaltyOverrideFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/overrides/RoyaltyOverrideFactory.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        563
      ],
      "Clones": [
        1324
      ],
      "ContextUpgradeable": [
        607
      ],
      "EIP2981RoyaltyOverrideCloneable": [
        8123
      ],
      "EIP2981RoyaltyOverrideCore": [
        8422
      ],
      "EIP2981RoyaltyOverrideFactory": [
        8477
      ],
      "ERC165": [
        4543
      ],
      "EnumerableSet": [
        5356
      ],
      "IEIP2981": [
        8538
      ],
      "IEIP2981RoyaltyOverride": [
        8032
      ],
      "IERC165": [
        4757
      ],
      "Initializable": [
        318
      ],
      "OwnableUpgradeable": [
        244
      ]
    },
    "id": 8478,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8424,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:43"
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
        "file": "@openzeppelin/contracts/proxy/Clones.sol",
        "id": 8425,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8478,
        "sourceUnit": 1325,
        "src": "85:50:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/overrides/RoyaltyOverrideCloneable.sol",
        "file": "./RoyaltyOverrideCloneable.sol",
        "id": 8426,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8478,
        "sourceUnit": 8124,
        "src": "136:40:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 8427,
          "nodeType": "StructuredDocumentation",
          "src": "178:70:43",
          "text": " Clone Factory for EIP2981 reference override implementation"
        },
        "fullyImplemented": true,
        "id": 8477,
        "linearizedBaseContracts": [
          8477
        ],
        "name": "EIP2981RoyaltyOverrideFactory",
        "nameLocation": "258:29:43",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "e517fedd",
            "id": 8429,
            "mutability": "mutable",
            "name": "originAddress",
            "nameLocation": "308:13:43",
            "nodeType": "VariableDeclaration",
            "scope": 8477,
            "src": "293:28:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8428,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "293:7:43",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 8433,
            "name": "EIP2981RoyaltyOverrideCreated",
            "nameLocation": "332:29:43",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8431,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newEIP2981RoyaltyOverride",
                  "nameLocation": "370:25:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8433,
                  "src": "362:33:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "362:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "361:35:43"
            },
            "src": "326:71:43"
          },
          {
            "body": {
              "id": 8442,
              "nodeType": "Block",
              "src": "429:35:43",
              "statements": [
                {
                  "expression": {
                    "id": 8440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8438,
                      "name": "originAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8429,
                      "src": "437:13:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8439,
                      "name": "origin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8435,
                      "src": "453:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "437:22:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8441,
                  "nodeType": "ExpressionStatement",
                  "src": "437:22:43"
                }
              ]
            },
            "id": 8443,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8435,
                  "mutability": "mutable",
                  "name": "origin",
                  "nameLocation": "421:6:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8443,
                  "src": "413:14:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "413:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "412:16:43"
            },
            "returnParameters": {
              "id": 8437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "429:0:43"
            },
            "scope": 8477,
            "src": "401:63:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8475,
              "nodeType": "Block",
              "src": "519:260:43",
              "statements": [
                {
                  "assignments": [
                    8449
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8449,
                      "mutability": "mutable",
                      "name": "clone",
                      "nameLocation": "535:5:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 8475,
                      "src": "527:13:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8448,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "527:7:43",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8454,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8452,
                        "name": "originAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8429,
                        "src": "556:13:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 8450,
                        "name": "Clones",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1324,
                        "src": "543:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Clones_$1324_$",
                          "typeString": "type(library Clones)"
                        }
                      },
                      "id": 8451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "clone",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1267,
                      "src": "543:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) returns (address)"
                      }
                    },
                    "id": 8453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "543:27:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "527:43:43"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 8456,
                            "name": "clone",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8449,
                            "src": "610:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8455,
                          "name": "EIP2981RoyaltyOverrideCloneable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8123,
                          "src": "578:31:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_EIP2981RoyaltyOverrideCloneable_$8123_$",
                            "typeString": "type(contract EIP2981RoyaltyOverrideCloneable)"
                          }
                        },
                        "id": 8457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "578:38:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EIP2981RoyaltyOverrideCloneable_$8123",
                          "typeString": "contract EIP2981RoyaltyOverrideCloneable"
                        }
                      },
                      "id": 8458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8091,
                      "src": "578:49:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 8459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "578:51:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8460,
                  "nodeType": "ExpressionStatement",
                  "src": "578:51:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8465,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "694:3:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "694:10:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 8462,
                            "name": "clone",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8449,
                            "src": "669:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8461,
                          "name": "EIP2981RoyaltyOverrideCloneable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8123,
                          "src": "637:31:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_EIP2981RoyaltyOverrideCloneable_$8123_$",
                            "typeString": "type(contract EIP2981RoyaltyOverrideCloneable)"
                          }
                        },
                        "id": 8463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "637:38:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EIP2981RoyaltyOverrideCloneable_$8123",
                          "typeString": "contract EIP2981RoyaltyOverrideCloneable"
                        }
                      },
                      "id": 8464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 219,
                      "src": "637:56:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 8467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "637:68:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8468,
                  "nodeType": "ExpressionStatement",
                  "src": "637:68:43"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8470,
                        "name": "clone",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8449,
                        "src": "748:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8469,
                      "name": "EIP2981RoyaltyOverrideCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8433,
                      "src": "718:29:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "718:36:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8472,
                  "nodeType": "EmitStatement",
                  "src": "713:41:43"
                },
                {
                  "expression": {
                    "id": 8473,
                    "name": "clone",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8449,
                    "src": "769:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 8447,
                  "id": 8474,
                  "nodeType": "Return",
                  "src": "762:12:43"
                }
              ]
            },
            "functionSelector": "4994fa9a",
            "id": 8476,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createOverride",
            "nameLocation": "477:14:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8444,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "491:2:43"
            },
            "returnParameters": {
              "id": 8447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8446,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8476,
                  "src": "510:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8445,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "509:9:43"
            },
            "scope": 8477,
            "src": "468:311:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8478,
        "src": "249:532:43",
        "usedErrors": []
      }
    ],
    "src": "33:748:43"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/overrides/RoyaltyOverrideFactory.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        563
      ],
      "Clones": [
        1324
      ],
      "ContextUpgradeable": [
        607
      ],
      "EIP2981RoyaltyOverrideCloneable": [
        8123
      ],
      "EIP2981RoyaltyOverrideCore": [
        8422
      ],
      "EIP2981RoyaltyOverrideFactory": [
        8477
      ],
      "ERC165": [
        4543
      ],
      "EnumerableSet": [
        5356
      ],
      "IEIP2981": [
        8538
      ],
      "IEIP2981RoyaltyOverride": [
        8032
      ],
      "IERC165": [
        4757
      ],
      "Initializable": [
        318
      ],
      "OwnableUpgradeable": [
        244
      ]
    },
    "id": 8478,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8424,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:43"
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
        "file": "@openzeppelin/contracts/proxy/Clones.sol",
        "id": 8425,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8478,
        "sourceUnit": 1325,
        "src": "85:50:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/overrides/RoyaltyOverrideCloneable.sol",
        "file": "./RoyaltyOverrideCloneable.sol",
        "id": 8426,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8478,
        "sourceUnit": 8124,
        "src": "136:40:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 8427,
          "nodeType": "StructuredDocumentation",
          "src": "178:70:43",
          "text": " Clone Factory for EIP2981 reference override implementation"
        },
        "fullyImplemented": true,
        "id": 8477,
        "linearizedBaseContracts": [
          8477
        ],
        "name": "EIP2981RoyaltyOverrideFactory",
        "nameLocation": "258:29:43",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "e517fedd",
            "id": 8429,
            "mutability": "mutable",
            "name": "originAddress",
            "nameLocation": "308:13:43",
            "nodeType": "VariableDeclaration",
            "scope": 8477,
            "src": "293:28:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8428,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "293:7:43",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 8433,
            "name": "EIP2981RoyaltyOverrideCreated",
            "nameLocation": "332:29:43",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8431,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newEIP2981RoyaltyOverride",
                  "nameLocation": "370:25:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8433,
                  "src": "362:33:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "362:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "361:35:43"
            },
            "src": "326:71:43"
          },
          {
            "body": {
              "id": 8442,
              "nodeType": "Block",
              "src": "429:35:43",
              "statements": [
                {
                  "expression": {
                    "id": 8440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8438,
                      "name": "originAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8429,
                      "src": "437:13:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8439,
                      "name": "origin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8435,
                      "src": "453:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "437:22:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8441,
                  "nodeType": "ExpressionStatement",
                  "src": "437:22:43"
                }
              ]
            },
            "id": 8443,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8435,
                  "mutability": "mutable",
                  "name": "origin",
                  "nameLocation": "421:6:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8443,
                  "src": "413:14:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "413:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "412:16:43"
            },
            "returnParameters": {
              "id": 8437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "429:0:43"
            },
            "scope": 8477,
            "src": "401:63:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8475,
              "nodeType": "Block",
              "src": "519:260:43",
              "statements": [
                {
                  "assignments": [
                    8449
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8449,
                      "mutability": "mutable",
                      "name": "clone",
                      "nameLocation": "535:5:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 8475,
                      "src": "527:13:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8448,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "527:7:43",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8454,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8452,
                        "name": "originAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8429,
                        "src": "556:13:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 8450,
                        "name": "Clones",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1324,
                        "src": "543:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Clones_$1324_$",
                          "typeString": "type(library Clones)"
                        }
                      },
                      "id": 8451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "clone",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1267,
                      "src": "543:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) returns (address)"
                      }
                    },
                    "id": 8453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "543:27:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "527:43:43"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 8456,
                            "name": "clone",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8449,
                            "src": "610:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8455,
                          "name": "EIP2981RoyaltyOverrideCloneable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8123,
                          "src": "578:31:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_EIP2981RoyaltyOverrideCloneable_$8123_$",
                            "typeString": "type(contract EIP2981RoyaltyOverrideCloneable)"
                          }
                        },
                        "id": 8457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "578:38:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EIP2981RoyaltyOverrideCloneable_$8123",
                          "typeString": "contract EIP2981RoyaltyOverrideCloneable"
                        }
                      },
                      "id": 8458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8091,
                      "src": "578:49:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 8459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "578:51:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8460,
                  "nodeType": "ExpressionStatement",
                  "src": "578:51:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8465,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "694:3:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "694:10:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 8462,
                            "name": "clone",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8449,
                            "src": "669:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8461,
                          "name": "EIP2981RoyaltyOverrideCloneable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8123,
                          "src": "637:31:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_EIP2981RoyaltyOverrideCloneable_$8123_$",
                            "typeString": "type(contract EIP2981RoyaltyOverrideCloneable)"
                          }
                        },
                        "id": 8463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "637:38:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EIP2981RoyaltyOverrideCloneable_$8123",
                          "typeString": "contract EIP2981RoyaltyOverrideCloneable"
                        }
                      },
                      "id": 8464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 219,
                      "src": "637:56:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 8467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "637:68:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8468,
                  "nodeType": "ExpressionStatement",
                  "src": "637:68:43"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8470,
                        "name": "clone",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8449,
                        "src": "748:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8469,
                      "name": "EIP2981RoyaltyOverrideCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8433,
                      "src": "718:29:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "718:36:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8472,
                  "nodeType": "EmitStatement",
                  "src": "713:41:43"
                },
                {
                  "expression": {
                    "id": 8473,
                    "name": "clone",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8449,
                    "src": "769:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 8447,
                  "id": 8474,
                  "nodeType": "Return",
                  "src": "762:12:43"
                }
              ]
            },
            "functionSelector": "4994fa9a",
            "id": 8476,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createOverride",
            "nameLocation": "477:14:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8444,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "491:2:43"
            },
            "returnParameters": {
              "id": 8447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8446,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8476,
                  "src": "510:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8445,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "509:9:43"
            },
            "scope": 8477,
            "src": "468:311:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8478,
        "src": "249:532:43",
        "usedErrors": []
      }
    ],
    "src": "33:748:43"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-02-27T17:51:02.538Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Clone Factory for EIP2981 reference override implementation",
    "version": 1
  }
}