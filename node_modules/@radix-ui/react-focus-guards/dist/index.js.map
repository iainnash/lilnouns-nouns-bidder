{"mappings":"IAYgCA,EAAMC,KAAND,KAAMC,mBACpCC,OAAOC,KAAKF,GAAQG,SAAQ,SAASC,GACvB,YAARA,GAA6B,eAARA,GAIzBH,OAAOI,eAAeN,EAAMK,EAAK,CAC/BE,YAAY,EACZC,IAAK,WACH,OAAOP,EAAOI,SAKbL,GCvBT,IAAIS,EAAQ,EAEZ,SAASC,EAAYC,GAEnB,OADAC,IACOD,EAAME,SAOf,SAASD,IACPE,EAAMC,WAAU,KAAM,IAAAC,EAAAC,EACpB,MAAMC,EAAaC,SAASC,iBAAiB,4BAK7C,OAJAD,SAASE,KAAKC,sBAAsB,aAApC,QAAAN,EAAkDE,EAAW,UAA7D,IAAAF,EAAAA,EAAmEO,KACnEJ,SAASE,KAAKC,sBAAsB,YAApC,QAAAL,EAAiDC,EAAW,UAA5D,IAAAD,EAAAA,EAAkEM,KAClEd,IAEO,KACS,IAAVA,GACFU,SAASC,iBAAiB,4BAA4BhB,SAASoB,GAASA,EAAKC,WAE/EhB,OAED,IAGL,SAASc,IACP,MAAMG,EAAUP,SAASQ,cAAc,QAIvC,OAHAD,EAAQE,aAAa,yBAA0B,IAC/CF,EAAQG,SAAW,EACnBH,EAAQI,MAAMC,QAAU,mEACjBL,iDAGT,MAAMM,EAAOtB","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./packages/react/focus-guards/src/FocusGuards.tsx"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$reexport(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","import * as React from 'react';\n\n/** Number of components which have requested interest to have focus guards */\nlet count = 0;\n\nfunction FocusGuards(props: any) {\n  useFocusGuards();\n  return props.children;\n}\n\n/**\n * Injects a pair of focus guards at the edges of the whole DOM tree\n * to ensure `focusin` & `focusout` events can be caught consistently.\n */\nfunction useFocusGuards() {\n  React.useEffect(() => {\n    const edgeGuards = document.querySelectorAll('[data-radix-focus-guard]');\n    document.body.insertAdjacentElement('afterbegin', edgeGuards[0] ?? createFocusGuard());\n    document.body.insertAdjacentElement('beforeend', edgeGuards[1] ?? createFocusGuard());\n    count++;\n\n    return () => {\n      if (count === 1) {\n        document.querySelectorAll('[data-radix-focus-guard]').forEach((node) => node.remove());\n      }\n      count--;\n    };\n  }, []);\n}\n\nfunction createFocusGuard() {\n  const element = document.createElement('span');\n  element.setAttribute('data-radix-focus-guard', '');\n  element.tabIndex = 0;\n  element.style.cssText = 'outline: none; opacity: 0; position: fixed; pointer-events: none';\n  return element;\n}\n\nconst Root = FocusGuards;\n\nexport {\n  FocusGuards,\n  //\n  Root,\n  //\n  useFocusGuards,\n};\n"],"names":["dest","source","Object","keys","forEach","key","defineProperty","enumerable","get","count","FocusGuards","props","useFocusGuards","children","React","useEffect","_edgeGuards$","_edgeGuards$2","edgeGuards","document","querySelectorAll","body","insertAdjacentElement","createFocusGuard","node","remove","element","createElement","setAttribute","tabIndex","style","cssText","Root"],"version":3,"file":"index.js.map"}