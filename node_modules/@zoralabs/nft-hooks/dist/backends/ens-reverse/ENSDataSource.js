"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ENSDataSource = void 0;
const tslib_1 = require("tslib");
const dataloader_1 = tslib_1.__importDefault(require("dataloader"));
const urls_1 = require("../../constants/urls");
const EnsReverseFetcher_1 = require("./EnsReverseFetcher");
class ENSDataSource {
    constructor(networkId, timeout = 2, rpcUrl = undefined) {
        this.fetchEnsNames = async (addresses) => {
            const results = await (0, EnsReverseFetcher_1.reverseResolveEnsAddresses)(addresses, this.networkId, this.endpoint, this.timeout);
            return addresses.map((address) => address in results
                ? { name: results[address], address: address }
                : Error('Cannot find'));
        };
        this.loadEnsFromAddresses = async (addresses) => {
            const results = await this.ensLoader.loadMany(addresses);
            return results.reduce((last, result) => {
                if (!(result instanceof Error)) {
                    last[result.address] = result;
                }
                return last;
            }, {});
        };
        if (!rpcUrl) {
            rpcUrl = urls_1.RPC_URL_BY_NETWORK[networkId];
        }
        this.networkId = networkId;
        this.endpoint = rpcUrl;
        this.ensLoader = new dataloader_1.default(this.fetchEnsNames);
        this.timeout = timeout;
    }
}
exports.ENSDataSource = ENSDataSource;
