import { GenericMediaInterface, MediaContentType } from './GenericMediaInterface';
export declare class GenericMediaData implements GenericMediaInterface {
    timeout: number;
    constructor(timeout?: number);
    /**
     * Fetch method to query metadata from IPFS. Not cached
     *
     * @function fetchIPFSMetadataCached
     * @public
     * @param url Metadata Source
     * @returns IPFS Metadata Fetch
     * @throws RequestError
     */
    fetchMetadata: (uri: string) => Promise<any>;
    /**
     * Fetch NFT content or retun URI if content shouild not be fetched
     * @param url NFT Content URL
     * @param contentType string mime type to fetch
     * @returns Promise<MediaContentType> Media content information or URL
     */
    fetchContent: (url: string, contentType: string) => Promise<MediaContentType>;
    /**
     * Fetch Content MIME type from content URI
     *
     * @param url IPFS Content URI
     * @returns mime type as a string
     * @throws RequestError
     */
    fetchContentMimeType: (url: string) => Promise<string>;
}
