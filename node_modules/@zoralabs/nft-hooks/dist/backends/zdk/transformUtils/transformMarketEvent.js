"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.transformMarketEvent = void 0;
const queries_sdk_1 = require("@zoralabs/zdk/dist/queries/queries-sdk");
const extractPrice_1 = require("../utils/extractPrice");
const types_1 = require("../../../types");
const dateToISO_1 = require("../utils/dateToISO");
function transformMarketEvent(e) {
    if (!(e.eventType === queries_sdk_1.EventType.V1MarketEvent &&
        e.properties.__typename === 'V1MarketEvent')) {
        return undefined;
    }
    // FIXME: what to do when unable to map to FIXED_PRICE_EVENT_TYPES?
    let event = undefined;
    switch (e.properties.v1MarketEventType) {
        case queries_sdk_1.V1MarketEventType.V1MarketAskCreated:
            event = types_1.FIXED_PRICE_EVENT_TYPES.FIXED_PRICE_CREATED;
            break;
        case queries_sdk_1.V1MarketEventType.V1MarketAskRemoved:
            event = types_1.FIXED_PRICE_EVENT_TYPES.FIXED_PRICE_CANCELLED;
            break;
        case queries_sdk_1.V1MarketEventType.V1MarketAskRemoved:
            event = types_1.FIXED_PRICE_EVENT_TYPES.FIXED_PRICE_CANCELLED;
            break;
    }
    if (!event) {
        return;
    }
    return {
        // FIXME: address === sender???
        sender: e.properties.address,
        ...(0, extractPrice_1.extractPrice)(e),
        marketAddress: e.properties.collectionAddress,
        event,
        eventType: types_1.TOKEN_TRANSFER_EVENT_CONTEXT_TYPES.TOKEN_MARKET_EVENT,
        side: types_1.FIXED_SIDE_TYPES.ASK,
        blockInfo: {
            timestamp: e.transactionInfo.blockTimestamp,
            blockNumber: e.transactionInfo.blockNumber,
        },
        at: {
            timestamp: (0, dateToISO_1.dateToISO)(e.transactionInfo.blockTimestamp),
            blockNumber: e.transactionInfo.blockNumber,
            transactionHash: e.transactionInfo.transactionHash || undefined,
        },
        raw: {
            source: types_1.FIXED_PRICE_MARKET_SOURCES.ZORA_ASK_V1,
            data: e,
        },
    };
}
exports.transformMarketEvent = transformMarketEvent;
