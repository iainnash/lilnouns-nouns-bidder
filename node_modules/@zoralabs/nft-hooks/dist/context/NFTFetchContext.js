"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NFTFetchConfiguration = exports.NFTFetchContext = exports.defaultFetchAgent = void 0;
const tslib_1 = require("tslib");
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = tslib_1.__importStar(require("react"));
const MediaFetchAgent_1 = require("../fetcher/MediaFetchAgent");
const networks_1 = require("../constants/networks");
const strategies_1 = require("../strategies");
const defaultNetwork = networks_1.Networks.MAINNET;
exports.defaultFetchAgent = {
    strategy: new strategies_1.ZoraV2IndexerStrategy(defaultNetwork),
    fetcher: new MediaFetchAgent_1.MediaFetchAgent(defaultNetwork),
};
exports.NFTFetchContext = react_1.default.createContext(exports.defaultFetchAgent);
const NFTFetchConfiguration = ({ strategy: userStrategy, children, networkId, }) => {
    const strategy = (0, react_1.useMemo)(() => {
        if (userStrategy) {
            return userStrategy;
        }
        return new strategies_1.ZoraV2IndexerStrategy(networkId);
    }, [userStrategy]);
    const fetcher = (0, react_1.useMemo)(() => {
        return new MediaFetchAgent_1.MediaFetchAgent(networkId);
    }, [networkId]);
    return ((0, jsx_runtime_1.jsx)(exports.NFTFetchContext.Provider, { value: { strategy, fetcher }, children: children }));
};
exports.NFTFetchConfiguration = NFTFetchConfiguration;
