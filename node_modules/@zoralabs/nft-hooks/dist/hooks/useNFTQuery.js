"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useNFTQuery = void 0;
const tslib_1 = require("tslib");
const react_1 = require("react");
const swr_1 = tslib_1.__importDefault(require("swr"));
const NFTFetchContext_1 = require("../context/NFTFetchContext");
/**
 * Fetches on-chain NFT data and pricing for a given general NFT Query
 *
 * @param query Query parameter to get list of NFTs for
 * @param options Options for SWR flags
 * @returns useNFTQueryType results including data and error for resulting NFTs
 */
function useNFTQuery(query, options) {
    const dataContext = (0, react_1.useContext)(NFTFetchContext_1.NFTFetchContext);
    const strategy = dataContext.strategy;
    // Run query
    const { data, error } = (0, swr_1.default)(query ? ['queryNFTs', JSON.stringify(query)] : null, (_, queryString) => strategy.queryNFTs(JSON.parse(queryString)), options);
    return {
        data,
        error,
    };
}
exports.useNFTQuery = useNFTQuery;
