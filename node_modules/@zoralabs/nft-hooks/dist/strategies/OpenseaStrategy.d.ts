import { NFTQuery } from '../types/NFTQuery';
import { OpenseaInterface, GraphAuctionInterface } from '../backends';
import { NetworkIDs } from '../constants/networks';
import { NFTStrategy } from './NFTStrategy';
export declare class OpenseaStrategy extends NFTStrategy {
    openseaBackend: OpenseaInterface;
    auctionBackend: GraphAuctionInterface;
    constructor(networkId: NetworkIDs);
    fetchNFT: (contract: string, id: string) => Promise<import("..").NFTObject>;
    hasSecondaryData: () => boolean;
    fetchSecondaryData: (contract: string, id: string) => Promise<import("..").NFTObject>;
    queryNFTs: (query: NFTQuery) => Promise<import("../types/NFTQuery").NFTQueryResult>;
}
