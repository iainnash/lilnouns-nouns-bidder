{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_erc20TransferHelper",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_erc721TransferHelper",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_royaltyEngine",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_protocolFeeSettings",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_weth",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "price",
              "type": "uint96"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct AsksCoreErc20.Ask",
          "name": "ask",
          "type": "tuple"
        }
      ],
      "name": "AskCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "price",
              "type": "uint96"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct AsksCoreErc20.Ask",
          "name": "ask",
          "type": "tuple"
        }
      ],
      "name": "AskCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "price",
              "type": "uint96"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct AsksCoreErc20.Ask",
          "name": "ask",
          "type": "tuple"
        }
      ],
      "name": "AskFilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "price",
              "type": "uint96"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct AsksCoreErc20.Ask",
          "name": "ask",
          "type": "tuple"
        }
      ],
      "name": "AskPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyPayout",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_payoutCurrency",
          "type": "address"
        }
      ],
      "name": "_handleRoyaltyEnginePayout",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "askForNFT",
      "outputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "price",
          "type": "uint96"
        },
        {
          "internalType": "address",
          "name": "currency",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "cancelAsk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "createAsk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "erc20TransferHelper",
      "outputs": [
        {
          "internalType": "contract ERC20TransferHelper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "erc721TransferHelper",
      "outputs": [
        {
          "internalType": "contract ERC721TransferHelper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "fillAsk",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registrar",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "setAskPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyEngine",
          "type": "address"
        }
      ],
      "name": "setRoyaltyEngineAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x61012060405260016000553480156200001757600080fd5b5060405162002c7e38038062002c7e8339810160408190526200003a9162000255565b6040518060400160405280601081526020016f041736b7320436f7265204552432d32360841b815250838383876001600160a01b031663e3e606f06040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000a5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000cb9190620002d5565b6001600160a01b0316632b20e3976040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000109573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200012f9190620002d5565b6001600160a01b038a811660805291821660a052600180546001600160a01b0319169483169490941790935590811660e0521660c05280516200017a90600290602084019062000196565b5050506001600160a01b03909216610100525062000339915050565b828054620001a490620002fc565b90600052602060002090601f016020900481019282620001c8576000855562000213565b82601f10620001e357805160ff191683800117855562000213565b8280016001018555821562000213579182015b8281111562000213578251825591602001919060010190620001f6565b506200022192915062000225565b5090565b5b8082111562000221576000815560010162000226565b6001600160a01b03811681146200025257600080fd5b50565b600080600080600060a086880312156200026e57600080fd5b85516200027b816200023c565b60208701519095506200028e816200023c565b6040870151909450620002a1816200023c565b6060870151909350620002b4816200023c565b6080870151909250620002c7816200023c565b809150509295509295909350565b600060208284031215620002e857600080fd5b8151620002f5816200023c565b9392505050565b600181811c908216806200031157607f821691505b602082108114156200033357634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e051610100516128dd620003a16000396000818161033c01526114bc015260008181611cf00152611d9c015260008181610135015261102401526000818161173401526117cc01526000818161029401526119e501526128dd6000f3fe6080604052600436106100c75760003560e01c80638f9d325111610074578063b249bb301161004e578063b249bb30146102f7578063d860634314610317578063f7cd1d9b1461032a57600080fd5b80638f9d3251146102825780639128c22c146102b6578063b2007533146102d757600080fd5b80632b9f663e116100a55780632b9f663e1461017c57806340b807461461019e578063418f0656146101be57600080fd5b806301ffc9a7146100cc57806306fdde03146101015780632b20e39714610123575b600080fd5b3480156100d857600080fd5b506100ec6100e73660046122df565b61035e565b60405190151581526020015b60405180910390f35b34801561010d57600080fd5b506101166103f7565b6040516100f8919061234d565b34801561012f57600080fd5b506101577f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f8565b34801561018857600080fd5b5061019c6101973660046123c3565b610485565b005b3480156101aa57600080fd5b5061019c6101b936600461240d565b6107f3565b3480156101ca57600080fd5b5061023e6101d936600461240d565b60036020908152600092835260408084209091529082529020805460019091015473ffffffffffffffffffffffffffffffffffffffff808316927401000000000000000000000000000000000000000090046bffffffffffffffffffffffff16911683565b6040805173ffffffffffffffffffffffffffffffffffffffff94851681526bffffffffffffffffffffffff90931660208401529216918101919091526060016100f8565b34801561028e57600080fd5b506101577f000000000000000000000000000000000000000000000000000000000000000081565b6102c96102c43660046123c3565b610ac4565b6040519081526020016100f8565b3480156102e357600080fd5b5061019c6102f23660046123c3565b610d69565b34801561030357600080fd5b5061019c610312366004612439565b61100c565b61019c6103253660046123c3565b6111ce565b34801561033657600080fd5b506101577f000000000000000000000000000000000000000000000000000000000000000081565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f014777080000000000000000000000000000000000000000000000000000000014806103f157507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6002805461040490612456565b80601f016020809104026020016040519081016040528092919081815260200182805461043090612456565b801561047d5780601f106104525761010080835404028352916020019161047d565b820191906000526020600020905b81548152906001019060200180831161046057829003601f168201915b505050505081565b6000546001146104f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600260009081556040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff861690636352211e90602401602060405180830381865afa158015610568573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058c91906124aa565b90503373ffffffffffffffffffffffffffffffffffffffff8216148061064357506040517fe985e9c500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015233602483015286169063e985e9c590604401602060405180830381865afa15801561061f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064391906124c7565b6106a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4f4e4c595f544f4b454e5f4f574e45525f4f525f4f50455241544f520000000060448201526064016104ed565b6bffffffffffffffffffffffff83111561071f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f494e56414c49445f41534b5f505249434500000000000000000000000000000060448201526064016104ed565b73ffffffffffffffffffffffffffffffffffffffff858116600081815260036020908152604080832089845290915290819020848416740100000000000000000000000000000000000000006bffffffffffffffffffffffff8916021781556001810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016948716949094179093555186927fa5bd647f34fcbc80ec242a9c943441939ba9c241c90515e6c49bd8c3207a3147916107df91906124e9565b60405180910390a350506001600055505050565b60005460011461085f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016104ed565b6002600090815573ffffffffffffffffffffffffffffffffffffffff838116825260036020908152604080842085855282529283902083516060810185528154808516808352740100000000000000000000000000000000000000009091046bffffffffffffffffffffffff169382019390935260019091015490921692820192909252903314806109aa57506040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff841690636352211e90602401602060405180830381865afa158015610957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097b91906124aa565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610a10576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4f4e4c595f53454c4c45525f4f525f544f4b454e5f4f574e455200000000000060448201526064016104ed565b818373ffffffffffffffffffffffffffffffffffffffff167ffa3f57ecc148dff66af5b7988fd23bb7d42b7c6cf1ac1f4c611980667d88800783604051610a579190612524565b60405180910390a35073ffffffffffffffffffffffffffffffffffffffff9091166000908152600360209081526040808320938352929052908120818155600190810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690559055565b6000333014610b55576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f5f68616e646c65526f79616c7479456e67696e655061796f7574206f6e6c792060448201527f73656c662063616c6c61626c650000000000000000000000000000000000000060648201526084016104ed565b6001546040517ff533b80200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301526024820187905260448201869052600092839291169063f533b802906064016000604051808303816000875af1158015610bd9573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610c1f919081019061267a565b8151919350915080610c3657859350505050610d61565b85600080805b84811015610d5757868181518110610c5657610c5661273f565b60200260200101519250858181518110610c7257610c7261273f565b6020026020010151915081841015610ce6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f696e736f6c76656e74000000000000000000000000000000000000000000000060448201526064016104ed565b610cf483838b61c3506115d5565b6040805173ffffffffffffffffffffffffffffffffffffffff8581168252602082018590528d92908f16917f866e6ef8682ddf5f1025e64dfdb45527077f7be70fa9ef680b7ffd8cf4ab9c50910160405180910390a39281900392600101610c3c565b5091955050505050505b949350505050565b600054600114610dd5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016104ed565b6002600090815573ffffffffffffffffffffffffffffffffffffffff858116825260036020908152604080842087855290915290912080549091163314610e78576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4f4e4c595f53454c4c455200000000000000000000000000000000000000000060448201526064016104ed565b80547401000000000000000000000000000000000000000090046bffffffffffffffffffffffff168314610f5e576bffffffffffffffffffffffff831115610f1c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f494e56414c49445f41534b5f505249434500000000000000000000000000000060448201526064016104ed565b805473ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000006bffffffffffffffffffffffff8516021781555b600181015473ffffffffffffffffffffffffffffffffffffffff838116911614610fc5576001810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84161790555b838573ffffffffffffffffffffffffffffffffffffffff167f0c294c0a739f71ec000739c4763bc46f863f09ca23f26cd9b293094e13e1be1e836040516107df91906124e9565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146110d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f736574526f79616c7479456e67696e6541646472657373206f6e6c792072656760448201527f697374726172000000000000000000000000000000000000000000000000000060648201526084016104ed565b6110fb817fcb23f81600000000000000000000000000000000000000000000000000000000611825565b611187576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f736574526f79616c7479456e67696e6541646472657373206d757374206d617460448201527f63682049526f79616c7479456e67696e65563120696e7465726661636500000060648201526084016104ed565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005460011461123a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016104ed565b6002600090815573ffffffffffffffffffffffffffffffffffffffff858116825260036020908152604080842087855282529283902083516060810185528154808516808352740100000000000000000000000000000000000000009091046bffffffffffffffffffffffff1693820193909352600190910154909216928201929092529080611326576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f494e4143544956455f41534b000000000000000000000000000000000000000060448201526064016104ed565b60208201516bffffffffffffffffffffffff168481146113a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f4d5553545f4d415443485f50524943450000000000000000000000000000000060448201526064016104ed565b604083015173ffffffffffffffffffffffffffffffffffffffff85811690821614611429576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4d5553545f4d415443485f43555252454e43590000000000000000000000000060448201526064016104ed565b6114338282611848565b600061144589898585620493e0611b9b565b5090506114528183611ca1565b905061146284828461c3506115d5565b6040517f15dacbea00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a811660048301528581166024830152336044830152606482018a90527f000000000000000000000000000000000000000000000000000000000000000016906315dacbea90608401600060405180830381600087803b15801561150057600080fd5b505af1158015611514573d6000803e3d6000fd5b50505050878973ffffffffffffffffffffffffffffffffffffffff167f4f241d819b27a0bbc6cc9667ecdfc0bb171d27659515e844c3442b203848d142338860405161156192919061276e565b60405180910390a350505073ffffffffffffffffffffffffffffffffffffffff9095166000908152600360209081526040808320968352959052938420848155600190810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590935550505050565b8215806115f6575073ffffffffffffffffffffffffffffffffffffffff8416155b156116005761181f565b73ffffffffffffffffffffffffffffffffffffffff82166117fe57824710156116ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5f68616e646c654f7574676f696e675472616e7366657220696e736f6c76656e60448201527f740000000000000000000000000000000000000000000000000000000000000060648201526084016104ed565b60008115806116b957505a82115b6116c357816116c5565b5a5b905060008573ffffffffffffffffffffffffffffffffffffffff16858390604051600060405180830381858888f193505050503d8060008114611724576040519150601f19603f3d011682016040523d82523d6000602084013e611729565b606091505b50509050806117f7577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0866040518263ffffffff1660e01b81526004016000604051808303818588803b15801561179a57600080fd5b505af11580156117ae573d6000803e3d6000fd5b506117f793505073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016915088905087611e3f565b505061181f565b61181f73ffffffffffffffffffffffffffffffffffffffff83168585611e3f565b50505050565b600061183083611ed1565b801561184157506118418383611f35565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff81166118f757813410156118f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f5f68616e646c65496e636f6d696e675472616e73666572206d73672076616c7560448201527f65206c657373207468616e20657870656374656420616d6f756e74000000000060648201526084016104ed565b5050565b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152819060009073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015611966573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061198a91906127d3565b6040517fd9fc4b6100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152336024830152306044830152606482018790529192507f00000000000000000000000000000000000000000000000000000000000000009091169063d9fc4b6190608401600060405180830381600087803b158015611a2b57600080fd5b505af1158015611a3f573d6000803e3d6000fd5b50506040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000925073ffffffffffffffffffffffffffffffffffffffff851691506370a0823190602401602060405180830381865afa158015611ab0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad491906127d3565b905080611ae1868461281b565b14611b94576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604c60248201527f5f68616e646c65496e636f6d696e675472616e7366657220746f6b656e20747260448201527f616e736665722063616c6c20646964206e6f74207472616e736665722065787060648201527f656374656420616d6f756e740000000000000000000000000000000000000000608482015260a4016104ed565b5050505050565b60008080831580611bab57505a84115b611bb55783611bb7565b5a5b6040517f9128c22c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808b166004830152602482018a905260448201899052871660648201529091503090639128c22c90839060840160206040518083038160008887f193505050508015611c79575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252611c76918101906127d3565b60015b611c8a578560009250925050611c97565b925060019150611c979050565b9550959350505050565b6040517f61b485f600000000000000000000000000000000000000000000000000000000815230600482015260248101839052600090819073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906361b485f690604401602060405180830381865afa158015611d37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d5b91906127d3565b905080611d6b57839150506103f1565b6040517f86ab6fb90000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906386ab6fb9906024016040805180830381865afa158015611df7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e1b9190612833565b915050611e2c81838661c3506115d5565b611e368286612874565b95945050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052611ecc908490612071565b505050565b6000611efd827f01ffc9a700000000000000000000000000000000000000000000000000000000611f35565b80156103f15750611f2e827fffffffff00000000000000000000000000000000000000000000000000000000611f35565b1592915050565b604080517fffffffff00000000000000000000000000000000000000000000000000000000831660248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f01ffc9a7000000000000000000000000000000000000000000000000000000001790529051600091908290819073ffffffffffffffffffffffffffffffffffffffff87169061753090611fef90869061288b565b6000604051808303818686fa925050503d806000811461202b576040519150601f19603f3d011682016040523d82523d6000602084013e612030565b606091505b509150915060208151101561204b57600093505050506103f1565b81801561206757508080602001905181019061206791906124c7565b9695505050505050565b60006120d3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661217d9092919063ffffffff16565b805190915015611ecc57808060200190518101906120f191906124c7565b611ecc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016104ed565b6060610d6184846000858573ffffffffffffffffffffffffffffffffffffffff85163b612206576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104ed565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161222f919061288b565b60006040518083038185875af1925050503d806000811461226c576040519150601f19603f3d011682016040523d82523d6000602084013e612271565b606091505b509150915061228182828661228c565b979650505050505050565b6060831561229b575081611841565b8251156122ab5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ed919061234d565b6000602082840312156122f157600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461184157600080fd5b60005b8381101561233c578181015183820152602001612324565b8381111561181f5750506000910152565b602081526000825180602084015261236c816040850160208701612321565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b73ffffffffffffffffffffffffffffffffffffffff811681146123c057600080fd5b50565b600080600080608085870312156123d957600080fd5b84356123e48161239e565b9350602085013592506040850135915060608501356124028161239e565b939692955090935050565b6000806040838503121561242057600080fd5b823561242b8161239e565b946020939093013593505050565b60006020828403121561244b57600080fd5b81356118418161239e565b600181811c9082168061246a57607f821691505b602082108114156124a4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000602082840312156124bc57600080fd5b81516118418161239e565b6000602082840312156124d957600080fd5b8151801515811461184157600080fd5b815473ffffffffffffffffffffffffffffffffffffffff808216835260a09190911c60208301526001830154166040820152606081016103f1565b606081016103f18284805173ffffffffffffffffffffffffffffffffffffffff90811683526020808301516bffffffffffffffffffffffff169084015260409182015116910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156125e3576125e361256d565b604052919050565b600067ffffffffffffffff8211156126055761260561256d565b5060051b60200190565b600082601f83011261262057600080fd5b81516020612635612630836125eb565b61259c565b82815260059290921b8401810191818101908684111561265457600080fd5b8286015b8481101561266f5780518352918301918301612658565b509695505050505050565b6000806040838503121561268d57600080fd5b825167ffffffffffffffff808211156126a557600080fd5b818501915085601f8301126126b957600080fd5b815160206126c9612630836125eb565b82815260059290921b840181019181810190898411156126e857600080fd5b948201945b8386101561270f5785516127008161239e565b825294820194908201906126ed565b9188015191965090935050508082111561272857600080fd5b506127358582860161260f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff83168152608081016118416020830184805173ffffffffffffffffffffffffffffffffffffffff90811683526020808301516bffffffffffffffffffffffff169084015260409182015116910152565b6000602082840312156127e557600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561282e5761282e6127ec565b500190565b6000806040838503121561284657600080fd5b825161ffff8116811461285857600080fd5b60208401519092506128698161239e565b809150509250929050565b600082821015612886576128866127ec565b500390565b6000825161289d818460208701612321565b919091019291505056fea2646970667358221220c528a3dccc5ed0ea3b74715fb3fe7ea698b4454c485197c91c8b84f16f18bf7664736f6c634300080a0033",
    "sourceMap": "797:15589:8:-:0;;;461:1:98;426:36;;1576:516:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;376:62:4;;;;;;;;;;;;;-1:-1:-1;;;376:62:4;;;1847:14:8;1863:20;1885:5;1913:21;-1:-1:-1;;;;;1892:47:8;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1892:59:8;;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;690:63:3;;;;;552:26:6;;;;;1931:13:2::1;:48:::0;;-1:-1:-1;;;;;;1931:48:2::1;::::0;;::::1;::::0;;;::::1;::::0;;;1989:67;;::::1;;::::0;2066:29:::1;;::::0;419:12:4;;;;:4;;-1:-1:-1;419:12:4;;;;:::i;:::-;-1:-1:-1;;;;;;;;2019:66:8;;::::3;;::::0;-1:-1:-1;797:15589:8;;-1:-1:-1;;797:15589:8;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;797:15589:8;;;-1:-1:-1;797:15589:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:99;-1:-1:-1;;;;;89:31:99;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:789::-;256:6;264;272;280;288;341:3;329:9;320:7;316:23;312:33;309:53;;;358:1;355;348:12;309:53;390:9;384:16;409:31;434:5;409:31;:::i;:::-;509:2;494:18;;488:25;459:5;;-1:-1:-1;522:33:99;488:25;522:33;:::i;:::-;626:2;611:18;;605:25;574:7;;-1:-1:-1;639:33:99;605:25;639:33;:::i;:::-;743:2;728:18;;722:25;691:7;;-1:-1:-1;756:33:99;722:25;756:33;:::i;:::-;860:3;845:19;;839:26;808:7;;-1:-1:-1;874:33:99;839:26;874:33;:::i;:::-;926:7;916:17;;;150:789;;;;;;;;:::o;944:276::-;1039:6;1092:2;1080:9;1071:7;1067:23;1063:32;1060:52;;;1108:1;1105;1098:12;1060:52;1140:9;1134:16;1159:31;1184:5;1159:31;:::i;:::-;1209:5;944:276;-1:-1:-1;;;944:276:99:o;1481:380::-;1560:1;1556:12;;;;1603;;;1624:61;;1678:4;1670:6;1666:17;1656:27;;1624:61;1731:2;1723:6;1720:14;1700:18;1697:38;1694:161;;;1777:10;1772:3;1768:20;1765:1;1758:31;1812:4;1809:1;1802:15;1840:4;1837:1;1830:15;1694:161;;1481:380;;;:::o;:::-;797:15589:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100c75760003560e01c80638f9d325111610074578063b249bb301161004e578063b249bb30146102f7578063d860634314610317578063f7cd1d9b1461032a57600080fd5b80638f9d3251146102825780639128c22c146102b6578063b2007533146102d757600080fd5b80632b9f663e116100a55780632b9f663e1461017c57806340b807461461019e578063418f0656146101be57600080fd5b806301ffc9a7146100cc57806306fdde03146101015780632b20e39714610123575b600080fd5b3480156100d857600080fd5b506100ec6100e73660046122df565b61035e565b60405190151581526020015b60405180910390f35b34801561010d57600080fd5b506101166103f7565b6040516100f8919061234d565b34801561012f57600080fd5b506101577f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f8565b34801561018857600080fd5b5061019c6101973660046123c3565b610485565b005b3480156101aa57600080fd5b5061019c6101b936600461240d565b6107f3565b3480156101ca57600080fd5b5061023e6101d936600461240d565b60036020908152600092835260408084209091529082529020805460019091015473ffffffffffffffffffffffffffffffffffffffff808316927401000000000000000000000000000000000000000090046bffffffffffffffffffffffff16911683565b6040805173ffffffffffffffffffffffffffffffffffffffff94851681526bffffffffffffffffffffffff90931660208401529216918101919091526060016100f8565b34801561028e57600080fd5b506101577f000000000000000000000000000000000000000000000000000000000000000081565b6102c96102c43660046123c3565b610ac4565b6040519081526020016100f8565b3480156102e357600080fd5b5061019c6102f23660046123c3565b610d69565b34801561030357600080fd5b5061019c610312366004612439565b61100c565b61019c6103253660046123c3565b6111ce565b34801561033657600080fd5b506101577f000000000000000000000000000000000000000000000000000000000000000081565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f014777080000000000000000000000000000000000000000000000000000000014806103f157507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6002805461040490612456565b80601f016020809104026020016040519081016040528092919081815260200182805461043090612456565b801561047d5780601f106104525761010080835404028352916020019161047d565b820191906000526020600020905b81548152906001019060200180831161046057829003601f168201915b505050505081565b6000546001146104f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600260009081556040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff861690636352211e90602401602060405180830381865afa158015610568573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058c91906124aa565b90503373ffffffffffffffffffffffffffffffffffffffff8216148061064357506040517fe985e9c500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015233602483015286169063e985e9c590604401602060405180830381865afa15801561061f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064391906124c7565b6106a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4f4e4c595f544f4b454e5f4f574e45525f4f525f4f50455241544f520000000060448201526064016104ed565b6bffffffffffffffffffffffff83111561071f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f494e56414c49445f41534b5f505249434500000000000000000000000000000060448201526064016104ed565b73ffffffffffffffffffffffffffffffffffffffff858116600081815260036020908152604080832089845290915290819020848416740100000000000000000000000000000000000000006bffffffffffffffffffffffff8916021781556001810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016948716949094179093555186927fa5bd647f34fcbc80ec242a9c943441939ba9c241c90515e6c49bd8c3207a3147916107df91906124e9565b60405180910390a350506001600055505050565b60005460011461085f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016104ed565b6002600090815573ffffffffffffffffffffffffffffffffffffffff838116825260036020908152604080842085855282529283902083516060810185528154808516808352740100000000000000000000000000000000000000009091046bffffffffffffffffffffffff169382019390935260019091015490921692820192909252903314806109aa57506040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff841690636352211e90602401602060405180830381865afa158015610957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097b91906124aa565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610a10576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4f4e4c595f53454c4c45525f4f525f544f4b454e5f4f574e455200000000000060448201526064016104ed565b818373ffffffffffffffffffffffffffffffffffffffff167ffa3f57ecc148dff66af5b7988fd23bb7d42b7c6cf1ac1f4c611980667d88800783604051610a579190612524565b60405180910390a35073ffffffffffffffffffffffffffffffffffffffff9091166000908152600360209081526040808320938352929052908120818155600190810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690559055565b6000333014610b55576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f5f68616e646c65526f79616c7479456e67696e655061796f7574206f6e6c792060448201527f73656c662063616c6c61626c650000000000000000000000000000000000000060648201526084016104ed565b6001546040517ff533b80200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301526024820187905260448201869052600092839291169063f533b802906064016000604051808303816000875af1158015610bd9573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610c1f919081019061267a565b8151919350915080610c3657859350505050610d61565b85600080805b84811015610d5757868181518110610c5657610c5661273f565b60200260200101519250858181518110610c7257610c7261273f565b6020026020010151915081841015610ce6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f696e736f6c76656e74000000000000000000000000000000000000000000000060448201526064016104ed565b610cf483838b61c3506115d5565b6040805173ffffffffffffffffffffffffffffffffffffffff8581168252602082018590528d92908f16917f866e6ef8682ddf5f1025e64dfdb45527077f7be70fa9ef680b7ffd8cf4ab9c50910160405180910390a39281900392600101610c3c565b5091955050505050505b949350505050565b600054600114610dd5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016104ed565b6002600090815573ffffffffffffffffffffffffffffffffffffffff858116825260036020908152604080842087855290915290912080549091163314610e78576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4f4e4c595f53454c4c455200000000000000000000000000000000000000000060448201526064016104ed565b80547401000000000000000000000000000000000000000090046bffffffffffffffffffffffff168314610f5e576bffffffffffffffffffffffff831115610f1c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f494e56414c49445f41534b5f505249434500000000000000000000000000000060448201526064016104ed565b805473ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000006bffffffffffffffffffffffff8516021781555b600181015473ffffffffffffffffffffffffffffffffffffffff838116911614610fc5576001810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84161790555b838573ffffffffffffffffffffffffffffffffffffffff167f0c294c0a739f71ec000739c4763bc46f863f09ca23f26cd9b293094e13e1be1e836040516107df91906124e9565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146110d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f736574526f79616c7479456e67696e6541646472657373206f6e6c792072656760448201527f697374726172000000000000000000000000000000000000000000000000000060648201526084016104ed565b6110fb817fcb23f81600000000000000000000000000000000000000000000000000000000611825565b611187576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f736574526f79616c7479456e67696e6541646472657373206d757374206d617460448201527f63682049526f79616c7479456e67696e65563120696e7465726661636500000060648201526084016104ed565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005460011461123a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016104ed565b6002600090815573ffffffffffffffffffffffffffffffffffffffff858116825260036020908152604080842087855282529283902083516060810185528154808516808352740100000000000000000000000000000000000000009091046bffffffffffffffffffffffff1693820193909352600190910154909216928201929092529080611326576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f494e4143544956455f41534b000000000000000000000000000000000000000060448201526064016104ed565b60208201516bffffffffffffffffffffffff168481146113a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f4d5553545f4d415443485f50524943450000000000000000000000000000000060448201526064016104ed565b604083015173ffffffffffffffffffffffffffffffffffffffff85811690821614611429576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4d5553545f4d415443485f43555252454e43590000000000000000000000000060448201526064016104ed565b6114338282611848565b600061144589898585620493e0611b9b565b5090506114528183611ca1565b905061146284828461c3506115d5565b6040517f15dacbea00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a811660048301528581166024830152336044830152606482018a90527f000000000000000000000000000000000000000000000000000000000000000016906315dacbea90608401600060405180830381600087803b15801561150057600080fd5b505af1158015611514573d6000803e3d6000fd5b50505050878973ffffffffffffffffffffffffffffffffffffffff167f4f241d819b27a0bbc6cc9667ecdfc0bb171d27659515e844c3442b203848d142338860405161156192919061276e565b60405180910390a350505073ffffffffffffffffffffffffffffffffffffffff9095166000908152600360209081526040808320968352959052938420848155600190810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590935550505050565b8215806115f6575073ffffffffffffffffffffffffffffffffffffffff8416155b156116005761181f565b73ffffffffffffffffffffffffffffffffffffffff82166117fe57824710156116ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5f68616e646c654f7574676f696e675472616e7366657220696e736f6c76656e60448201527f740000000000000000000000000000000000000000000000000000000000000060648201526084016104ed565b60008115806116b957505a82115b6116c357816116c5565b5a5b905060008573ffffffffffffffffffffffffffffffffffffffff16858390604051600060405180830381858888f193505050503d8060008114611724576040519150601f19603f3d011682016040523d82523d6000602084013e611729565b606091505b50509050806117f7577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0866040518263ffffffff1660e01b81526004016000604051808303818588803b15801561179a57600080fd5b505af11580156117ae573d6000803e3d6000fd5b506117f793505073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016915088905087611e3f565b505061181f565b61181f73ffffffffffffffffffffffffffffffffffffffff83168585611e3f565b50505050565b600061183083611ed1565b801561184157506118418383611f35565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff81166118f757813410156118f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f5f68616e646c65496e636f6d696e675472616e73666572206d73672076616c7560448201527f65206c657373207468616e20657870656374656420616d6f756e74000000000060648201526084016104ed565b5050565b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152819060009073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015611966573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061198a91906127d3565b6040517fd9fc4b6100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152336024830152306044830152606482018790529192507f00000000000000000000000000000000000000000000000000000000000000009091169063d9fc4b6190608401600060405180830381600087803b158015611a2b57600080fd5b505af1158015611a3f573d6000803e3d6000fd5b50506040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000925073ffffffffffffffffffffffffffffffffffffffff851691506370a0823190602401602060405180830381865afa158015611ab0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad491906127d3565b905080611ae1868461281b565b14611b94576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604c60248201527f5f68616e646c65496e636f6d696e675472616e7366657220746f6b656e20747260448201527f616e736665722063616c6c20646964206e6f74207472616e736665722065787060648201527f656374656420616d6f756e740000000000000000000000000000000000000000608482015260a4016104ed565b5050505050565b60008080831580611bab57505a84115b611bb55783611bb7565b5a5b6040517f9128c22c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808b166004830152602482018a905260448201899052871660648201529091503090639128c22c90839060840160206040518083038160008887f193505050508015611c79575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252611c76918101906127d3565b60015b611c8a578560009250925050611c97565b925060019150611c979050565b9550959350505050565b6040517f61b485f600000000000000000000000000000000000000000000000000000000815230600482015260248101839052600090819073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906361b485f690604401602060405180830381865afa158015611d37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d5b91906127d3565b905080611d6b57839150506103f1565b6040517f86ab6fb90000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906386ab6fb9906024016040805180830381865afa158015611df7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e1b9190612833565b915050611e2c81838661c3506115d5565b611e368286612874565b95945050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052611ecc908490612071565b505050565b6000611efd827f01ffc9a700000000000000000000000000000000000000000000000000000000611f35565b80156103f15750611f2e827fffffffff00000000000000000000000000000000000000000000000000000000611f35565b1592915050565b604080517fffffffff00000000000000000000000000000000000000000000000000000000831660248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f01ffc9a7000000000000000000000000000000000000000000000000000000001790529051600091908290819073ffffffffffffffffffffffffffffffffffffffff87169061753090611fef90869061288b565b6000604051808303818686fa925050503d806000811461202b576040519150601f19603f3d011682016040523d82523d6000602084013e612030565b606091505b509150915060208151101561204b57600093505050506103f1565b81801561206757508080602001905181019061206791906124c7565b9695505050505050565b60006120d3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661217d9092919063ffffffff16565b805190915015611ecc57808060200190518101906120f191906124c7565b611ecc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016104ed565b6060610d6184846000858573ffffffffffffffffffffffffffffffffffffffff85163b612206576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104ed565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161222f919061288b565b60006040518083038185875af1925050503d806000811461226c576040519150601f19603f3d011682016040523d82523d6000602084013e612271565b606091505b509150915061228182828661228c565b979650505050505050565b6060831561229b575081611841565b8251156122ab5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ed919061234d565b6000602082840312156122f157600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461184157600080fd5b60005b8381101561233c578181015183820152602001612324565b8381111561181f5750506000910152565b602081526000825180602084015261236c816040850160208701612321565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b73ffffffffffffffffffffffffffffffffffffffff811681146123c057600080fd5b50565b600080600080608085870312156123d957600080fd5b84356123e48161239e565b9350602085013592506040850135915060608501356124028161239e565b939692955090935050565b6000806040838503121561242057600080fd5b823561242b8161239e565b946020939093013593505050565b60006020828403121561244b57600080fd5b81356118418161239e565b600181811c9082168061246a57607f821691505b602082108114156124a4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000602082840312156124bc57600080fd5b81516118418161239e565b6000602082840312156124d957600080fd5b8151801515811461184157600080fd5b815473ffffffffffffffffffffffffffffffffffffffff808216835260a09190911c60208301526001830154166040820152606081016103f1565b606081016103f18284805173ffffffffffffffffffffffffffffffffffffffff90811683526020808301516bffffffffffffffffffffffff169084015260409182015116910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156125e3576125e361256d565b604052919050565b600067ffffffffffffffff8211156126055761260561256d565b5060051b60200190565b600082601f83011261262057600080fd5b81516020612635612630836125eb565b61259c565b82815260059290921b8401810191818101908684111561265457600080fd5b8286015b8481101561266f5780518352918301918301612658565b509695505050505050565b6000806040838503121561268d57600080fd5b825167ffffffffffffffff808211156126a557600080fd5b818501915085601f8301126126b957600080fd5b815160206126c9612630836125eb565b82815260059290921b840181019181810190898411156126e857600080fd5b948201945b8386101561270f5785516127008161239e565b825294820194908201906126ed565b9188015191965090935050508082111561272857600080fd5b506127358582860161260f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff83168152608081016118416020830184805173ffffffffffffffffffffffffffffffffffffffff90811683526020808301516bffffffffffffffffffffffff169084015260409182015116910152565b6000602082840312156127e557600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561282e5761282e6127ec565b500190565b6000806040838503121561284657600080fd5b825161ffff8116811461285857600080fd5b60208401519092506128698161239e565b809150509250929050565b600082821015612886576128866127ec565b500390565b6000825161289d818460208701612321565b919091019291505056fea2646970667358221220c528a3dccc5ed0ea3b74715fb3fe7ea698b4454c485197c91c8b84f16f18bf7664736f6c634300080a0033",
    "sourceMap": "797:15589:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2336:179;;;;;;;;;;-1:-1:-1;2336:179:8;;;;;:::i;:::-;;:::i;:::-;;;516:14:99;;509:22;491:41;;479:2;464:18;2336:179:8;;;;;;;;265:18:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;792:34:2:-;;;;;;;;;;;;;;;;;;1429:42:99;1417:55;;;1399:74;;1387:2;1372:18;792:34:2;1253:226:99;4781:1017:8;;;;;;;;;;-1:-1:-1;4781:1017:8;;;;;:::i;:::-;;:::i;:::-;;10611:553;;;;;;;;;;-1:-1:-1;10611:553:8;;;;;:::i;:::-;;:::i;3165:60::-;;;;;;;;;;-1:-1:-1;3165:60:8;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2703:42:99;2772:15;;;2754:34;;2836:26;2824:39;;;2819:2;2804:18;;2797:67;2900:15;;2880:18;;;2873:43;;;;2681:2;2666:18;3165:60:8;2493:429:99;575:56:3;;;;;;;;;;;;;;;5751:1742:2;;;;;;:::i;:::-;;:::i;:::-;;;3333:25:99;;;3321:2;3306:18;5751:1742:2;3187:177:99;8277:883:8;;;;;;;;;;-1:-1:-1;8277:883:8;;;;;:::i;:::-;;:::i;2472:414:2:-;;;;;;;;;;-1:-1:-1;2472:414:2;;;;;:::i;:::-;;:::i;14459:1925:8:-;;;;;;:::i;:::-;;:::i;1172:58::-;;;;;;;;;;;;;;;2336:179;2407:4;2430:48;;;2446:32;2430:48;;:78;;-1:-1:-1;2482:26:8;;;;;2430:78;2423:85;2336:179;-1:-1:-1;;2336:179:8:o;265:18:4:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4781:1017:8:-;511:16:98;;531:1;511:21;503:44;;;;;;;4526:2:99;503:44:98;;;4508:21:99;4565:2;4545:18;;;4538:30;4604:12;4584:18;;;4577:40;4634:18;;503:44:98;;;;;;;;;577:1;558:16;:20;;;5016:41:8::1;::::0;;;;::::1;::::0;::::1;3333:25:99::0;;;5016:31:8::1;::::0;::::1;::::0;::::1;::::0;3306:18:99;;5016:41:8::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4995:62:::0;-1:-1:-1;5142:10:8::1;:24;::::0;::::1;;::::0;:92:::1;;-1:-1:-1::0;5170:64:8::1;::::0;;;;:40:::1;5172:15:99::0;;;5170:64:8::1;::::0;::::1;5154:34:99::0;5223:10:8::1;5204:18:99::0;;;5197:43;5170:40:8;::::1;::::0;::::1;::::0;5066:18:99;;5170:64:8::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5134:133;;;::::0;::::1;::::0;;5735:2:99;5134:133:8::1;::::0;::::1;5717:21:99::0;5774:2;5754:18;;;5747:30;5813;5793:18;;;5786:58;5861:18;;5134:133:8::1;5533:352:99::0;5134:133:8::1;5430:16;5420:26:::0;::::1;;5412:56;;;::::0;::::1;::::0;;6092:2:99;5412:56:8::1;::::0;::::1;6074:21:99::0;6131:2;6111:18;;;6104:30;6170:19;6150:18;;;6143:47;6207:18;;5412:56:8::1;5890:341:99::0;5412:56:8::1;5513:25;::::0;;::::1;;::::0;;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;;:55;;::::1;5578:58:::0;::::1;::::0;::::1;;;::::0;;5513:55;5646:44;::::1;:56:::0;;5513:55;5646:56:::1;::::0;;::::1;::::0;;;::::1;::::0;;;5718:73;5513:35;;5718:73:::1;::::0;::::1;::::0;5513:35;5718:73:::1;:::i;:::-;;;;;;;;-1:-1:-1::0;;620:1:98;601:16;:20;-1:-1:-1;;;4781:1017:8:o;10611:553::-;511:16:98;;531:1;511:21;503:44;;;;;;;4526:2:99;503:44:98;;;4508:21:99;4565:2;4545:18;;;4538:30;4604:12;4584:18;;;4577:40;4634:18;;503:44:98;4324:334:99;503:44:98;577:1;558:16;:20;;;10768:25:8::1;::::0;;::::1;::::0;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;10751:52;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;;;;;;::::1;;;::::0;;::::1;::::0;;;;;;;::::1;::::0;;;::::1;::::0;;;;;;;;10893:10:::1;:24;::::0;:83:::1;;-1:-1:-1::0;10935:41:8::1;::::0;;;;::::1;::::0;::::1;3333:25:99::0;;;10935:31:8::1;::::0;::::1;::::0;::::1;::::0;3306:18:99;;10935:41:8::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10921:55;;:10;:55;;;10893:83;10885:122;;;::::0;::::1;::::0;;7005:2:99;10885:122:8::1;::::0;::::1;6987:21:99::0;7044:2;7024:18;;;7017:30;7083:28;7063:18;;;7056:56;7129:18;;10885:122:8::1;6803:350:99::0;10885:122:8::1;11051:8;11035:14;11023:42;;;11061:3;11023:42;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;11122:25:8::1;::::0;;::::1;;::::0;;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;11115:42;;;;;;::::1;::::0;;;::::1;::::0;;601:20:98;;10611:553:8:o;5751:1742:2:-;5935:7;6007:10;6029:4;6007:27;5999:85;;;;;;;7916:2:99;5999:85:2;;;7898:21:99;7955:2;7935:18;;;7928:30;7994:34;7974:18;;;7967:62;8065:15;8045:18;;;8038:43;8098:19;;5999:85:2;7714:409:99;5999:85:2;6228:13;;:59;;;;;:13;8348:55:99;;;6228:59:2;;;8330:74:99;8420:18;;;8413:34;;;8463:18;;;8456:34;;;6163:35:2;;;;6228:13;;;:24;;8303:18:99;;6228:59:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6364:17;;6162:125;;-1:-1:-1;6162:125:2;-1:-1:-1;6460:18:2;6456:38;;6487:7;6480:14;;;;;;;6456:38;6567:7;6541:23;;;6736:718;6760:13;6756:1;:17;6736:718;;;6849:10;6860:1;6849:13;;;;;;;;:::i;:::-;;;;;;;6837:25;;6885:7;6893:1;6885:10;;;;;;;;:::i;:::-;;;;;;;6876:19;;7011:6;6992:15;:25;;6984:47;;;;;;;11518:2:99;6984:47:2;;;11500:21:99;11557:1;11537:18;;;11530:29;11595:11;11575:18;;;11568:39;11624:18;;6984:47:2;11316:332:99;6984:47:2;7087:66;7111:9;7122:6;7130:15;7147:5;7087:23;:66::i;:::-;7173:58;;;;11845:55:99;;;11827:74;;11932:2;11917:18;;11910:34;;;7203:8:2;;7173:58;;;;;;11800:18:99;7173:58:2;;;;;;;7383:25;;;;;7426:3;;6736:718;;;-1:-1:-1;7471:15:2;;-1:-1:-1;;;;;;5751:1742:2;;;;;;;:::o;8277:883:8:-;511:16:98;;531:1;511:21;503:44;;;;;;;4526:2:99;503:44:98;;;4508:21:99;4565:2;4545:18;;;4538:30;4604:12;4584:18;;;4577:40;4634:18;;503:44:98;4324:334:99;503:44:98;577:1;558:16;:20;;;8510:25:8::1;::::0;;::::1;::::0;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;8617:10;;8510:35;;8617:10:::1;8603;:24;8595:48;;;::::0;::::1;::::0;;12157:2:99;8595:48:8::1;::::0;::::1;12139:21:99::0;12196:2;12176:18;;;12169:30;12235:13;12215:18;;;12208:41;12266:18;;8595:48:8::1;11955:335:99::0;8595:48:8::1;8702:9:::0;;;;::::1;;;8692:19:::0;::::1;8688:239;;8802:16;8792:26:::0;::::1;;8784:56;;;::::0;::::1;::::0;;6092:2:99;8784:56:8::1;::::0;::::1;6074:21:99::0;6131:2;6111:18;;;6104:30;6170:19;6150:18;;;6143:47;6207:18;;8784:56:8::1;5890:341:99::0;8784:56:8::1;8890:26:::0;;;::::1;::::0;::::1;::::0;::::1;;;::::0;;8688:239:::1;8991:12;::::0;::::1;::::0;::::1;8978:25:::0;;::::1;8991:12:::0;::::1;8978:25;8974:118;;9057:12;::::0;::::1;:24:::0;;;::::1;;::::0;::::1;;::::0;;8974:118:::1;9139:8;9123:14;9107:46;;;9149:3;9107:46;;;;;;:::i;2472:414:2:-:0;2554:10;:23;2568:9;2554:23;;2546:74;;;;;;;12745:2:99;2546:74:2;;;12727:21:99;12784:2;12764:18;;;12757:30;12823:34;12803:18;;;12796:62;12894:8;12874:18;;;12867:36;12920:19;;2546:74:2;12543:402:99;2546:74:2;2651:83;2683:14;2699:34;2651:31;:83::i;:::-;2630:191;;;;;;;13152:2:99;2630:191:2;;;13134:21:99;13191:2;13171:18;;;13164:30;13230:34;13210:18;;;13203:62;13301:31;13281:18;;;13274:59;13350:19;;2630:191:2;12950:425:99;2630:191:2;2831:13;:48;;;;;;;;;;;;;;;2472:414::o;14459:1925:8:-;511:16:98;;531:1;511:21;503:44;;;;;;;4526:2:99;503:44:98;;;4508:21:99;4565:2;4545:18;;;4538:30;4604:12;4584:18;;;4577:40;4634:18;;503:44:98;4324:334:99;503:44:98;577:1;558:16;:20;;;14695:25:8::1;::::0;;::::1;::::0;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;14678:52;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;;;;;;::::1;;;::::0;;::::1;::::0;;;;;;;::::1;::::0;;;::::1;::::0;;;;;;;;;14843:45:::1;;;::::0;::::1;::::0;;13582:2:99;14843:45:8::1;::::0;::::1;13564:21:99::0;13621:2;13601:18;;;13594:30;13660:14;13640:18;;;13633:42;13692:18;;14843:45:8::1;13380:336:99::0;14843:45:8::1;14942:9;::::0;::::1;::::0;14926:25:::1;;15030:15:::0;;::::1;15022:44;;;::::0;::::1;::::0;;13923:2:99;15022:44:8::1;::::0;::::1;13905:21:99::0;13962:2;13942:18;;;13935:30;14001:18;13981;;;13974:46;14037:18;;15022:44:8::1;13721:340:99::0;15022:44:8::1;15126:12;::::0;::::1;::::0;15223:21:::1;::::0;;::::1;::::0;;::::1;;15215:53;;;::::0;::::1;::::0;;14268:2:99;15215:53:8::1;::::0;::::1;14250:21:99::0;14307:2;14287:18;;;14280:30;14346:21;14326:18;;;14319:49;14385:18;;15215:53:8::1;14066:343:99::0;15215:53:8::1;15520:40;15544:5;15551:8;15520:23;:40::i;:::-;15625:23;15654:71;15675:14;15691:8;15701:5;15708:8;15718:6;15654:20;:71::i;:::-;15624:101;;;15802:51;15827:15;15844:8;15802:24;:51::i;:::-;15784:69;;15919:65;15943:6;15951:15;15968:8;15978:5;15919:23;:65::i;:::-;16138:79;::::0;;;;:33:::1;14724:15:99::0;;;16138:79:8::1;::::0;::::1;14706:34:99::0;14776:15;;;14756:18;;;14749:43;16196:10:8::1;14808:18:99::0;;;14801:43;14860:18;;;14853:34;;;16138:20:8::1;:33;::::0;::::1;::::0;14617:19:99;;16138:79:8::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;16259:8;16243:14;16233:52;;;16269:10;16281:3;16233:52;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;16342:25:8::1;::::0;;::::1;;::::0;;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;16335:42;;;;;;::::1;::::0;;;::::1;::::0;;601:20:98;;;-1:-1:-1;;;;14459:1925:8:o;1039:1016:6:-;1203:12;;;:35;;-1:-1:-1;1219:19:6;;;;1203:35;1199:72;;;1254:7;;1199:72;1315:23;;;1311:738;;1387:7;1362:21;:32;;1354:78;;;;;;;15460:2:99;1354:78:6;;;15442:21:99;15499:2;15479:18;;;15472:30;15538:34;15518:18;;;15511:62;15609:3;15589:18;;;15582:31;15630:19;;1354:78:6;15258:397:99;1354:78:6;1564:11;1579:14;;;:39;;;1609:9;1597;:21;1579:39;1578:65;;1634:9;1578:65;;;1622:9;1578:65;1564:79;;1658:12;1676:5;:10;;1694:7;1708:3;1676:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1657:59;;;1822:7;1817:145;;1849:4;:12;;;1869:7;1849:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1897:50:6;;-1:-1:-1;;1897:34:6;1912:4;1897:34;;-1:-1:-1;1932:5:6;;-1:-1:-1;1939:7:6;1897:34;:50::i;:::-;1340:632;;1311:738;;;1992:46;:30;;;2023:5;2030:7;1992:30;:46::i;:::-;1039:1016;;;;:::o;1318:274:96:-;1405:4;1512:23;1527:7;1512:14;:23::i;:::-;:73;;;;;1539:46;1564:7;1573:11;1539:24;:46::i;:::-;1505:80;1318:274;-1:-1:-1;;;1318:274:96:o;1007:933:3:-;1099:23;;;1095:839;;1159:7;1146:9;:20;;1138:92;;;;;;;16072:2:99;1138:92:3;;;16054:21:99;16111:2;16091:18;;;16084:30;16150:34;16130:18;;;16123:62;16221:29;16201:18;;;16194:57;16268:19;;1138:92:3;15870:423:99;1138:92:3;1007:933;;:::o;1095:839::-;1587:30;;;;;1611:4;1587:30;;;1399:74:99;1539:9:3;;1517:12;;1587:15;;;;;;1372:18:99;;1587:30:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1631:83;;;;;:36;14724:15:99;;;1631:83:3;;;14706:34:99;1679:10:3;14756:18:99;;;14749:43;1699:4:3;14808:18:99;;;14801:43;14860:18;;;14853:34;;;1563:54:3;;-1:-1:-1;1631:19:3;:36;;;;;;14617:19:99;;1631:83:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1751:30:3;;;;;1775:4;1751:30;;;1399:74:99;1728:20:3;;-1:-1:-1;1751:15:3;;;;-1:-1:-1;1751:15:3;;1372:18:99;;1751:30:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1728:53;-1:-1:-1;1728:53:3;1803:23;1819:7;1803:13;:23;:::i;:::-;:39;1795:128;;;;;;;17011:2:99;1795:128:3;;;16993:21:99;17050:2;17030:18;;;17023:30;17089:34;17069:18;;;17062:62;17160:34;17140:18;;;17133:62;17232:14;17211:19;;;17204:43;17264:19;;1795:128:3;16809:480:99;1795:128:3;1247:687;;;1007:933;;:::o;4289:888:2:-;4486:7;;;4640:14;;;:39;;;4670:9;4658;:21;4640:39;4639:65;;4695:9;4639:65;;;4683:9;4639:65;4802:93;;;;;17535:42:99;17604:15;;;4802:93:2;;;17586:34:99;17636:18;;;17629:34;;;17679:18;;;17672:34;;;17742:15;;17722:18;;;17715:43;4625:79:2;;-1:-1:-1;4802:4:2;;:31;;4625:79;;17497:19:99;;4802:93:2;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4802:93:2;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;4798:373;;5145:7;5154:5;5137:23;;;;;;;4798:373;5020:14;-1:-1:-1;5036:4:2;;-1:-1:-1;5012:29:2;;-1:-1:-1;5012:29:2;4289:888;;;;;;;;;:::o;3119:632::-;3289:56;;;;;3330:4;3289:56;;;11827:74:99;11917:18;;;11910:34;;;3213:7:2;;;;3289:32;:19;:32;;;;11800:18:99;;3289:56:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3267:78;-1:-1:-1;3404:16:2;3400:36;;3429:7;3422:14;;;;;3400:36;3503:51;;;;;3548:4;3503:51;;;1399:74:99;3479:20:2;;3503:19;:36;;;;;1372:18:99;;3503:51:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3476:78;;;3596:74;3620:12;3634:11;3647:15;3664:5;3596:23;:74::i;:::-;3723:21;3733:11;3723:7;:21;:::i;:::-;3716:28;3119:632;-1:-1:-1;;;;;3119:632:2:o;701:205:86:-;840:58;;;11857:42:99;11845:55;;840:58:86;;;11827:74:99;11917:18;;;;11910:34;;;840:58:86;;;;;;;;;;11800:18:99;;;;840:58:86;;;;;;;;;;863:23;840:58;;;813:86;;833:5;;813:19;:86::i;:::-;701:205;;;:::o;689:411:96:-;753:4;960:60;985:7;994:25;960:24;:60::i;:::-;:133;;;;-1:-1:-1;1037:56:96;1062:7;1071:21;1037:24;:56::i;:::-;1036:57;941:152;689:411;-1:-1:-1;;689:411:96:o;4208:409::-;4346:71;;;18488:66:99;18476:79;;4346:71:96;;;;18458:98:99;;;;4346:71:96;;;;;;;;;;18431:18:99;;;;4346:71:96;;;;;;;;;4369:34;4346:71;;;4465:45;;4301:4;;4346:71;4301:4;;;;4465:18;;;;4489:5;;4465:45;;4346:71;;4465:45;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4427:83;;;;4540:2;4524:6;:13;:18;4520:36;;;4551:5;4544:12;;;;;;;4520:36;4573:7;:37;;;;;4595:6;4584:26;;;;;;;;;;;;:::i;:::-;4566:44;4208:409;-1:-1:-1;;;;;;4208:409:96:o;3207:706:86:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;3652:27;;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:86;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;;;;19048:2:99;3811:85:86;;;19030:21:99;19087:2;19067:18;;;19060:30;19126:34;19106:18;;;19099:62;19197:12;19177:18;;;19170:40;19227:19;;3811:85:86;18846:406:99;3861:223:92;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;3994;1465:19;;;;5228:60;;;;;;;19866:2:99;5228:60:92;;;19848:21:99;19905:2;19885:18;;;19878:30;19944:31;19924:18;;;19917:59;19993:18;;5228:60:92;19664:353:99;5228:60:92;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:92:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:92;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;;;;;;;;;;:::i;14:332:99:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;543:258;615:1;625:113;639:6;636:1;633:13;625:113;;;715:11;;;709:18;696:11;;;689:39;661:2;654:10;625:113;;;756:6;753:1;750:13;747:48;;;-1:-1:-1;;791:1:99;773:16;;766:27;543:258::o;806:442::-;955:2;944:9;937:21;918:4;987:6;981:13;1030:6;1025:2;1014:9;1010:18;1003:34;1046:66;1105:6;1100:2;1089:9;1085:18;1080:2;1072:6;1068:15;1046:66;:::i;:::-;1164:2;1152:15;1169:66;1148:88;1133:104;;;;1239:2;1129:113;;806:442;-1:-1:-1;;806:442:99:o;1484:154::-;1570:42;1563:5;1559:54;1552:5;1549:65;1539:93;;1628:1;1625;1618:12;1539:93;1484:154;:::o;1643:525::-;1729:6;1737;1745;1753;1806:3;1794:9;1785:7;1781:23;1777:33;1774:53;;;1823:1;1820;1813:12;1774:53;1862:9;1849:23;1881:31;1906:5;1881:31;:::i;:::-;1931:5;-1:-1:-1;1983:2:99;1968:18;;1955:32;;-1:-1:-1;2034:2:99;2019:18;;2006:32;;-1:-1:-1;2090:2:99;2075:18;;2062:32;2103:33;2062:32;2103:33;:::i;:::-;1643:525;;;;-1:-1:-1;1643:525:99;;-1:-1:-1;;1643:525:99:o;2173:315::-;2241:6;2249;2302:2;2290:9;2281:7;2277:23;2273:32;2270:52;;;2318:1;2315;2308:12;2270:52;2357:9;2344:23;2376:31;2401:5;2376:31;:::i;:::-;2426:5;2478:2;2463:18;;;;2450:32;;-1:-1:-1;;;2173:315:99:o;3369:247::-;3428:6;3481:2;3469:9;3460:7;3456:23;3452:32;3449:52;;;3497:1;3494;3487:12;3449:52;3536:9;3523:23;3555:31;3580:5;3555:31;:::i;3882:437::-;3961:1;3957:12;;;;4004;;;4025:61;;4079:4;4071:6;4067:17;4057:27;;4025:61;4132:2;4124:6;4121:14;4101:18;4098:38;4095:218;;;4169:77;4166:1;4159:88;4270:4;4267:1;4260:15;4298:4;4295:1;4288:15;4095:218;;3882:437;;;:::o;4663:251::-;4733:6;4786:2;4774:9;4765:7;4761:23;4757:32;4754:52;;;4802:1;4799;4792:12;4754:52;4834:9;4828:16;4853:31;4878:5;4853:31;:::i;5251:277::-;5318:6;5371:2;5359:9;5350:7;5346:23;5342:32;5339:52;;;5387:1;5384;5377:12;5339:52;5419:9;5413:16;5472:5;5465:13;5458:21;5451:5;5448:32;5438:60;;5494:1;5491;5484:12;6559:239;6318:12;;6349:42;6412:18;;;6400:31;;6467:3;6463:19;;;;6456:4;6447:14;;6440:43;6536:4;6525:16;;6519:23;6515:32;6508:4;6499:14;;6492:56;6732:2;6717:18;;6744:48;6236:318;7475:234;7651:2;7636:18;;7663:40;7640:9;7685:6;7292:12;;7225:42;7288:21;;;7276:34;;7363:4;7352:16;;;7346:23;7371:26;7342:56;7326:14;;;7319:80;7452:4;7441:16;;;7435:23;7431:32;7415:14;;7408:56;7158:312;8501:184;8553:77;8550:1;8543:88;8650:4;8647:1;8640:15;8674:4;8671:1;8664:15;8690:334;8761:2;8755:9;8817:2;8807:13;;8822:66;8803:86;8791:99;;8920:18;8905:34;;8941:22;;;8902:62;8899:88;;;8967:18;;:::i;:::-;9003:2;8996:22;8690:334;;-1:-1:-1;8690:334:99:o;9029:191::-;9097:4;9130:18;9122:6;9119:30;9116:56;;;9152:18;;:::i;:::-;-1:-1:-1;9197:1:99;9193:14;9209:4;9189:25;;9029:191::o;9225:667::-;9290:5;9343:3;9336:4;9328:6;9324:17;9320:27;9310:55;;9361:1;9358;9351:12;9310:55;9390:6;9384:13;9416:4;9440:68;9456:51;9504:2;9456:51;:::i;:::-;9440:68;:::i;:::-;9542:15;;;9628:1;9624:10;;;;9612:23;;9608:32;;;9573:12;;;;9652:15;;;9649:35;;;9680:1;9677;9670:12;9649:35;9716:2;9708:6;9704:15;9728:135;9744:6;9739:3;9736:15;9728:135;;;9810:10;;9798:23;;9841:12;;;;9761;;9728:135;;;-1:-1:-1;9881:5:99;9225:667;-1:-1:-1;;;;;;9225:667:99:o;9897:1225::-;10034:6;10042;10095:2;10083:9;10074:7;10070:23;10066:32;10063:52;;;10111:1;10108;10101:12;10063:52;10144:9;10138:16;10173:18;10214:2;10206:6;10203:14;10200:34;;;10230:1;10227;10220:12;10200:34;10268:6;10257:9;10253:22;10243:32;;10313:7;10306:4;10302:2;10298:13;10294:27;10284:55;;10335:1;10332;10325:12;10284:55;10364:2;10358:9;10386:4;10410:68;10426:51;10474:2;10426:51;:::i;10410:68::-;10512:15;;;10594:1;10590:10;;;;10582:19;;10578:28;;;10543:12;;;;10618:19;;;10615:39;;;10650:1;10647;10640:12;10615:39;10674:11;;;;10694:210;10710:6;10705:3;10702:15;10694:210;;;10783:3;10777:10;10800:31;10825:5;10800:31;:::i;:::-;10844:18;;10727:12;;;;10882;;;;10694:210;;;10959:18;;;10953:25;10923:5;;-1:-1:-1;10953:25:99;;-1:-1:-1;;;10990:16:99;;;10987:36;;;11019:1;11016;11009:12;10987:36;;11042:74;11108:7;11097:8;11086:9;11082:24;11042:74;:::i;:::-;11032:84;;;9897:1225;;;;;:::o;11127:184::-;11179:77;11176:1;11169:88;11276:4;11273:1;11266:15;11300:4;11297:1;11290:15;14898:355;15145:42;15133:55;;15115:74;;15102:3;15087:19;;15198:49;15243:2;15228:18;;15220:6;7292:12;;7225:42;7288:21;;;7276:34;;7363:4;7352:16;;;7346:23;7371:26;7342:56;7326:14;;;7319:80;7452:4;7441:16;;;7435:23;7431:32;7415:14;;7408:56;7158:312;16298:184;16368:6;16421:2;16409:9;16400:7;16396:23;16392:32;16389:52;;;16437:1;16434;16427:12;16389:52;-1:-1:-1;16460:16:99;;16298:184;-1:-1:-1;16298:184:99:o;16487:::-;16539:77;16536:1;16529:88;16636:4;16633:1;16626:15;16660:4;16657:1;16650:15;16676:128;16716:3;16747:1;16743:6;16740:1;16737:13;16734:39;;;16753:18;;:::i;:::-;-1:-1:-1;16789:9:99;;16676:128::o;17769:410::-;17847:6;17855;17908:2;17896:9;17887:7;17883:23;17879:32;17876:52;;;17924:1;17921;17914:12;17876:52;17956:9;17950:16;18006:6;17999:5;17995:18;17988:5;17985:29;17975:57;;18028:1;18025;18018:12;17975:57;18101:2;18086:18;;18080:25;18051:5;;-1:-1:-1;18114:33:99;18080:25;18114:33;:::i;:::-;18166:7;18156:17;;;17769:410;;;;;:::o;18184:125::-;18224:4;18252:1;18249;18246:8;18243:34;;;18257:18;;:::i;:::-;-1:-1:-1;18294:9:99;;18184:125::o;18567:274::-;18696:3;18734:6;18728:13;18750:53;18796:6;18791:3;18784:4;18776:6;18772:17;18750:53;:::i;:::-;18819:16;;;;;18567:274;-1:-1:-1;;18567:274:99:o",
    "linkReferences": {},
    "immutableReferences": {
      "1085": [
        {
          "start": 660,
          "length": 32
        },
        {
          "start": 6629,
          "length": 32
        }
      ],
      "1222": [
        {
          "start": 5940,
          "length": 32
        },
        {
          "start": 6092,
          "length": 32
        }
      ],
      "1390": [
        {
          "start": 828,
          "length": 32
        },
        {
          "start": 5308,
          "length": 32
        }
      ],
      "762": [
        {
          "start": 309,
          "length": 32
        },
        {
          "start": 4132,
          "length": 32
        }
      ],
      "766": [
        {
          "start": 7408,
          "length": 32
        },
        {
          "start": 7580,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "_handleRoyaltyEnginePayout(address,uint256,uint256,address)": "9128c22c",
    "askForNFT(address,uint256)": "418f0656",
    "cancelAsk(address,uint256)": "40b80746",
    "createAsk(address,uint256,uint256,address)": "2b9f663e",
    "erc20TransferHelper()": "8f9d3251",
    "erc721TransferHelper()": "f7cd1d9b",
    "fillAsk(address,uint256,uint256,address)": "d8606343",
    "name()": "06fdde03",
    "registrar()": "2b20e397",
    "setAskPrice(address,uint256,uint256,address)": "b2007533",
    "setRoyaltyEngineAddress(address)": "b249bb30",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "ast": {
    "absolutePath": "contracts/modules/Asks/Core/ERC20/AsksCoreErc20.sol",
    "id": 1846,
    "exportedSymbols": {
      "AsksCoreErc20": [
        1845
      ],
      "ERC721TransferHelper": [
        49952
      ],
      "FeePayoutSupportV1": [
        1068
      ],
      "IAsksCoreErc20": [
        1893
      ],
      "IERC721": [
        55158
      ],
      "IncomingTransferSupportV1": [
        1173
      ],
      "ModuleNamingSupportV1": [
        1191
      ],
      "ReentrancyGuard": [
        56014
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:16351:8",
    "nodes": [
      {
        "id": 1363,
        "nodeType": "PragmaDirective",
        "src": "36:23:8",
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 1365,
        "nodeType": "ImportDirective",
        "src": "61:84:8",
        "absolutePath": "node_modules/@rari-capital/solmate/src/utils/ReentrancyGuard.sol",
        "file": "@rari-capital/solmate/src/utils/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1846,
        "sourceUnit": 56015,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1364,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "69:15:8",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1367,
        "nodeType": "ImportDirective",
        "src": "146:73:8",
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1846,
        "sourceUnit": 55159,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1366,
              "name": "IERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "154:7:8",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1369,
        "nodeType": "ImportDirective",
        "src": "221:90:8",
        "absolutePath": "contracts/transferHelpers/ERC721TransferHelper.sol",
        "file": "../../../../transferHelpers/ERC721TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1846,
        "sourceUnit": 49953,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1368,
              "name": "ERC721TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "229:20:8",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1371,
        "nodeType": "ImportDirective",
        "src": "312:118:8",
        "absolutePath": "contracts/common/IncomingTransferSupport/V1/IncomingTransferSupportV1.sol",
        "file": "../../../../common/IncomingTransferSupport/V1/IncomingTransferSupportV1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1846,
        "sourceUnit": 1174,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1370,
              "name": "IncomingTransferSupportV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "320:25:8",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1373,
        "nodeType": "ImportDirective",
        "src": "431:94:8",
        "absolutePath": "contracts/common/FeePayoutSupport/FeePayoutSupportV1.sol",
        "file": "../../../../common/FeePayoutSupport/FeePayoutSupportV1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1846,
        "sourceUnit": 1069,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1372,
              "name": "FeePayoutSupportV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "439:18:8",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1375,
        "nodeType": "ImportDirective",
        "src": "526:103:8",
        "absolutePath": "contracts/common/ModuleNamingSupport/ModuleNamingSupportV1.sol",
        "file": "../../../../common/ModuleNamingSupport/ModuleNamingSupportV1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1846,
        "sourceUnit": 1192,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1374,
              "name": "ModuleNamingSupportV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "534:21:8",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1377,
        "nodeType": "ImportDirective",
        "src": "630:52:8",
        "absolutePath": "contracts/modules/Asks/Core/ERC20/IAsksCoreErc20.sol",
        "file": "./IAsksCoreErc20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1846,
        "sourceUnit": 1894,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1376,
              "name": "IAsksCoreErc20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "638:14:8",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1845,
        "nodeType": "ContractDefinition",
        "src": "797:15589:8",
        "nodes": [
          {
            "id": 1390,
            "nodeType": "VariableDeclaration",
            "src": "1172:58:8",
            "constant": false,
            "documentation": {
              "id": 1387,
              "nodeType": "StructuredDocumentation",
              "src": "1123:44:8",
              "text": "@notice The ZORA ERC-721 Transfer Helper"
            },
            "functionSelector": "f7cd1d9b",
            "mutability": "immutable",
            "name": "erc721TransferHelper",
            "nameLocation": "1210:20:8",
            "scope": 1845,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC721TransferHelper_$49952",
              "typeString": "contract ERC721TransferHelper"
            },
            "typeName": {
              "id": 1389,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1388,
                "name": "ERC721TransferHelper",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49952,
                "src": "1172:20:8"
              },
              "referencedDeclaration": 49952,
              "src": "1172:20:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721TransferHelper_$49952",
                "typeString": "contract ERC721TransferHelper"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1429,
            "nodeType": "FunctionDefinition",
            "src": "1576:516:8",
            "body": {
              "id": 1428,
              "nodeType": "Block",
              "src": "2009:83:8",
              "statements": [
                {
                  "expression": {
                    "id": 1426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1422,
                      "name": "erc721TransferHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1390,
                      "src": "2019:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721TransferHelper_$49952",
                        "typeString": "contract ERC721TransferHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1424,
                          "name": "_erc721TransferHelper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1395,
                          "src": "2063:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1423,
                        "name": "ERC721TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49952,
                        "src": "2042:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721TransferHelper_$49952_$",
                          "typeString": "type(contract ERC721TransferHelper)"
                        }
                      },
                      "id": 1425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2042:43:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721TransferHelper_$49952",
                        "typeString": "contract ERC721TransferHelper"
                      }
                    },
                    "src": "2019:66:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721TransferHelper_$49952",
                      "typeString": "contract ERC721TransferHelper"
                    }
                  },
                  "id": 1427,
                  "nodeType": "ExpressionStatement",
                  "src": "2019:66:8"
                }
              ]
            },
            "documentation": {
              "id": 1391,
              "nodeType": "StructuredDocumentation",
              "src": "1237:334:8",
              "text": "@param _erc20TransferHelper The ZORA ERC-20 Transfer Helper address\n @param _erc721TransferHelper The ZORA ERC-721 Transfer Helper address\n @param _royaltyEngine The Manifold Royalty Engine address\n @param _protocolFeeSettings The ZORA Protocol Fee Settings address\n @param _weth The WETH token address"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1404,
                    "name": "_erc20TransferHelper",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1393,
                    "src": "1798:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1405,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1403,
                  "name": "IncomingTransferSupportV1",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1173,
                  "src": "1772:25:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1772:47:8"
              },
              {
                "arguments": [
                  {
                    "id": 1407,
                    "name": "_royaltyEngine",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1397,
                    "src": "1847:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 1408,
                    "name": "_protocolFeeSettings",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1399,
                    "src": "1863:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 1409,
                    "name": "_weth",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1401,
                    "src": "1885:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1411,
                                "name": "_erc721TransferHelper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1395,
                                "src": "1913:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1410,
                              "name": "ERC721TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49952,
                              "src": "1892:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721TransferHelper_$49952_$",
                                "typeString": "type(contract ERC721TransferHelper)"
                              }
                            },
                            "id": 1412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1892:43:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721TransferHelper_$49952",
                              "typeString": "contract ERC721TransferHelper"
                            }
                          },
                          "id": 1413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ZMM",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49701,
                          "src": "1892:47:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ZoraModuleManager_$379_$",
                            "typeString": "function () view external returns (contract ZoraModuleManager)"
                          }
                        },
                        "id": 1414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1892:49:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                          "typeString": "contract ZoraModuleManager"
                        }
                      },
                      "id": 1415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registrar",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "1892:59:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 1416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1892:61:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1417,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1406,
                  "name": "FeePayoutSupportV1",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1068,
                  "src": "1828:18:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1828:126:8"
              },
              {
                "arguments": [
                  {
                    "hexValue": "41736b7320436f7265204552432d3230",
                    "id": 1419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1985:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_957638827bb464e6b123c0171deaffb22d80c97ab19a1a4b92c35a73ed579925",
                      "typeString": "literal_string \"Asks Core ERC-20\""
                    },
                    "value": "Asks Core ERC-20"
                  }
                ],
                "id": 1420,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1418,
                  "name": "ModuleNamingSupportV1",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1191,
                  "src": "1963:21:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1963:41:8"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1393,
                  "mutability": "mutable",
                  "name": "_erc20TransferHelper",
                  "nameLocation": "1605:20:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1429,
                  "src": "1597:28:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1392,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1597:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1395,
                  "mutability": "mutable",
                  "name": "_erc721TransferHelper",
                  "nameLocation": "1643:21:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1429,
                  "src": "1635:29:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1635:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1397,
                  "mutability": "mutable",
                  "name": "_royaltyEngine",
                  "nameLocation": "1682:14:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1429,
                  "src": "1674:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1674:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1399,
                  "mutability": "mutable",
                  "name": "_protocolFeeSettings",
                  "nameLocation": "1714:20:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1429,
                  "src": "1706:28:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1706:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1401,
                  "mutability": "mutable",
                  "name": "_weth",
                  "nameLocation": "1752:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1429,
                  "src": "1744:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1744:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1587:176:8"
            },
            "returnParameters": {
              "id": 1421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2009:0:8"
            },
            "scope": 1845,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1449,
            "nodeType": "FunctionDefinition",
            "src": "2336:179:8",
            "body": {
              "id": 1448,
              "nodeType": "Block",
              "src": "2413:102:8",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 1442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1437,
                        "name": "_interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1432,
                        "src": "2430:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1439,
                              "name": "IAsksCoreErc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1893,
                              "src": "2451:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IAsksCoreErc20_$1893_$",
                                "typeString": "type(contract IAsksCoreErc20)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IAsksCoreErc20_$1893_$",
                                "typeString": "type(contract IAsksCoreErc20)"
                              }
                            ],
                            "id": 1438,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2446:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2446:20:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IAsksCoreErc20_$1893",
                            "typeString": "type(contract IAsksCoreErc20)"
                          }
                        },
                        "id": 1441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "2446:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "2430:48:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 1445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1443,
                        "name": "_interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1432,
                        "src": "2482:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30783031666663396137",
                        "id": 1444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2498:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_33540519_by_1",
                          "typeString": "int_const 33540519"
                        },
                        "value": "0x01ffc9a7"
                      },
                      "src": "2482:26:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2430:78:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1436,
                  "id": 1447,
                  "nodeType": "Return",
                  "src": "2423:85:8"
                }
              ]
            },
            "documentation": {
              "id": 1430,
              "nodeType": "StructuredDocumentation",
              "src": "2098:233:8",
              "text": "@notice Implements EIP-165 for standard interface detection\n @dev `0x01ffc9a7` is the IERC165 interface id\n @param _interfaceId The identifier of a given interface\n @return If the given interface is supported"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "2345:17:8",
            "parameters": {
              "id": 1433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1432,
                  "mutability": "mutable",
                  "name": "_interfaceId",
                  "nameLocation": "2370:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1449,
                  "src": "2363:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1431,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2363:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2362:21:8"
            },
            "returnParameters": {
              "id": 1436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1435,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1449,
                  "src": "2407:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1434,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2407:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2406:6:8"
            },
            "scope": 1845,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1456,
            "nodeType": "StructDefinition",
            "src": "2951:90:8",
            "canonicalName": "AsksCoreErc20.Ask",
            "members": [
              {
                "constant": false,
                "id": 1451,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "2980:6:8",
                "nodeType": "VariableDeclaration",
                "scope": 1456,
                "src": "2972:14:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1450,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2972:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1453,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "3003:5:8",
                "nodeType": "VariableDeclaration",
                "scope": 1456,
                "src": "2996:12:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 1452,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "2996:6:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1455,
                "mutability": "mutable",
                "name": "currency",
                "nameLocation": "3026:8:8",
                "nodeType": "VariableDeclaration",
                "scope": 1456,
                "src": "3018:16:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1454,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3018:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Ask",
            "nameLocation": "2958:3:8",
            "scope": 1845,
            "visibility": "public"
          },
          {
            "id": 1464,
            "nodeType": "VariableDeclaration",
            "src": "3165:60:8",
            "constant": false,
            "documentation": {
              "id": 1457,
              "nodeType": "StructuredDocumentation",
              "src": "3047:113:8",
              "text": "@notice The ask for a given NFT, if one exists\n @dev ERC-721 token contract => ERC-721 token id => Ask"
            },
            "functionSelector": "418f0656",
            "mutability": "mutable",
            "name": "askForNFT",
            "nameLocation": "3216:9:8",
            "scope": 1845,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$1456_storage_$_$",
              "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask))"
            },
            "typeName": {
              "id": 1463,
              "keyType": {
                "id": 1458,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3173:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3165:43:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$1456_storage_$_$",
                "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask))"
              },
              "valueType": {
                "id": 1462,
                "keyType": {
                  "id": 1459,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3192:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "3184:23:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$1456_storage_$",
                  "typeString": "mapping(uint256 => struct AsksCoreErc20.Ask)"
                },
                "valueType": {
                  "id": 1461,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1460,
                    "name": "Ask",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1456,
                    "src": "3203:3:8"
                  },
                  "referencedDeclaration": 1456,
                  "src": "3203:3:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$1456_storage_ptr",
                    "typeString": "struct AsksCoreErc20.Ask"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 1474,
            "nodeType": "EventDefinition",
            "src": "4428:82:8",
            "anonymous": false,
            "documentation": {
              "id": 1465,
              "nodeType": "StructuredDocumentation",
              "src": "4193:230:8",
              "text": "@notice Emitted when an ask is created\n @param tokenContract The ERC-721 token address of the created ask\n @param tokenId The ERC-721 token id of the created ask\n @param ask The metadata of the created ask"
            },
            "name": "AskCreated",
            "nameLocation": "4434:10:8",
            "parameters": {
              "id": 1473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1467,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "4461:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1474,
                  "src": "4445:29:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1466,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4445:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1469,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4492:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1474,
                  "src": "4476:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1468,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4476:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1472,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ask",
                  "nameLocation": "4505:3:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1474,
                  "src": "4501:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$1456_memory_ptr",
                    "typeString": "struct AsksCoreErc20.Ask"
                  },
                  "typeName": {
                    "id": 1471,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1470,
                      "name": "Ask",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1456,
                      "src": "4501:3:8"
                    },
                    "referencedDeclaration": 1456,
                    "src": "4501:3:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$1456_storage_ptr",
                      "typeString": "struct AsksCoreErc20.Ask"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4444:65:8"
            }
          },
          {
            "id": 1566,
            "nodeType": "FunctionDefinition",
            "src": "4781:1017:8",
            "body": {
              "id": 1565,
              "nodeType": "Block",
              "src": "4937:861:8",
              "statements": [
                {
                  "assignments": [
                    1489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1489,
                      "mutability": "mutable",
                      "name": "tokenOwner",
                      "nameLocation": "5003:10:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1565,
                      "src": "4995:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1488,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4995:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1496,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1494,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1479,
                        "src": "5048:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1491,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1477,
                            "src": "5024:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1490,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55158,
                          "src": "5016:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$55158_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 1492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5016:23:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$55158",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 1493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55091,
                      "src": "5016:31:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 1495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5016:41:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4995:62:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1498,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5142:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5142:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1500,
                            "name": "tokenOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1489,
                            "src": "5156:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5142:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1506,
                              "name": "tokenOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1489,
                              "src": "5211:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1507,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5223:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5223:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1503,
                                  "name": "_tokenContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1477,
                                  "src": "5178:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1502,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55158,
                                "src": "5170:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$55158_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 1504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5170:23:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$55158",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 1505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isApprovedForAll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55157,
                            "src": "5170:40:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view external returns (bool)"
                            }
                          },
                          "id": 1509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5170:64:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5142:92:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f4e4c595f544f4b454e5f4f574e45525f4f525f4f50455241544f52",
                        "id": 1511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5236:30:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2fa99b77517d3ad92ccc1102a19a02c3a5eb91d2d38650b703e9fa10a22ea58",
                          "typeString": "literal_string \"ONLY_TOKEN_OWNER_OR_OPERATOR\""
                        },
                        "value": "ONLY_TOKEN_OWNER_OR_OPERATOR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2fa99b77517d3ad92ccc1102a19a02c3a5eb91d2d38650b703e9fa10a22ea58",
                          "typeString": "literal_string \"ONLY_TOKEN_OWNER_OR_OPERATOR\""
                        }
                      ],
                      "id": 1497,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5134:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5134:133:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1513,
                  "nodeType": "ExpressionStatement",
                  "src": "5134:133:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1515,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1481,
                          "src": "5420:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5435:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint96_$",
                                  "typeString": "type(uint96)"
                                },
                                "typeName": {
                                  "id": 1517,
                                  "name": "uint96",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5435:6:8",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint96_$",
                                  "typeString": "type(uint96)"
                                }
                              ],
                              "id": 1516,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "5430:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5430:12:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint96",
                              "typeString": "type(uint96)"
                            }
                          },
                          "id": 1520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "5430:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "src": "5420:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "494e56414c49445f41534b5f5052494345",
                        "id": 1522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5448:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_184298fef00488001ddf912bba50739e9c38817ce3fc9ca3f83709e869046d74",
                          "typeString": "literal_string \"INVALID_ASK_PRICE\""
                        },
                        "value": "INVALID_ASK_PRICE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_184298fef00488001ddf912bba50739e9c38817ce3fc9ca3f83709e869046d74",
                          "typeString": "literal_string \"INVALID_ASK_PRICE\""
                        }
                      ],
                      "id": 1514,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5412:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5412:56:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1524,
                  "nodeType": "ExpressionStatement",
                  "src": "5412:56:8"
                },
                {
                  "expression": {
                    "id": 1532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1525,
                            "name": "askForNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1464,
                            "src": "5513:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$1456_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask storage ref))"
                            }
                          },
                          "id": 1528,
                          "indexExpression": {
                            "id": 1526,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1477,
                            "src": "5523:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5513:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$1456_storage_$",
                            "typeString": "mapping(uint256 => struct AsksCoreErc20.Ask storage ref)"
                          }
                        },
                        "id": 1529,
                        "indexExpression": {
                          "id": 1527,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1479,
                          "src": "5539:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5513:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$1456_storage",
                          "typeString": "struct AsksCoreErc20.Ask storage ref"
                        }
                      },
                      "id": 1530,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1451,
                      "src": "5513:42:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1531,
                      "name": "tokenOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1489,
                      "src": "5558:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5513:55:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1533,
                  "nodeType": "ExpressionStatement",
                  "src": "5513:55:8"
                },
                {
                  "expression": {
                    "id": 1544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1534,
                            "name": "askForNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1464,
                            "src": "5578:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$1456_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask storage ref))"
                            }
                          },
                          "id": 1537,
                          "indexExpression": {
                            "id": 1535,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1477,
                            "src": "5588:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5578:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$1456_storage_$",
                            "typeString": "mapping(uint256 => struct AsksCoreErc20.Ask storage ref)"
                          }
                        },
                        "id": 1538,
                        "indexExpression": {
                          "id": 1536,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1479,
                          "src": "5604:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5578:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$1456_storage",
                          "typeString": "struct AsksCoreErc20.Ask storage ref"
                        }
                      },
                      "id": 1539,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1453,
                      "src": "5578:41:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1542,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1481,
                          "src": "5629:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5622:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint96_$",
                          "typeString": "type(uint96)"
                        },
                        "typeName": {
                          "id": 1540,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "5622:6:8",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5622:14:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "5578:58:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 1545,
                  "nodeType": "ExpressionStatement",
                  "src": "5578:58:8"
                },
                {
                  "expression": {
                    "id": 1553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1546,
                            "name": "askForNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1464,
                            "src": "5646:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$1456_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask storage ref))"
                            }
                          },
                          "id": 1549,
                          "indexExpression": {
                            "id": 1547,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1477,
                            "src": "5656:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5646:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$1456_storage_$",
                            "typeString": "mapping(uint256 => struct AsksCoreErc20.Ask storage ref)"
                          }
                        },
                        "id": 1550,
                        "indexExpression": {
                          "id": 1548,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1479,
                          "src": "5672:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5646:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$1456_storage",
                          "typeString": "struct AsksCoreErc20.Ask storage ref"
                        }
                      },
                      "id": 1551,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "currency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1455,
                      "src": "5646:44:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1552,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1483,
                      "src": "5693:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5646:56:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1554,
                  "nodeType": "ExpressionStatement",
                  "src": "5646:56:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1556,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1477,
                        "src": "5729:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1557,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1479,
                        "src": "5745:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1558,
                            "name": "askForNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1464,
                            "src": "5755:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$1456_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask storage ref))"
                            }
                          },
                          "id": 1560,
                          "indexExpression": {
                            "id": 1559,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1477,
                            "src": "5765:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5755:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$1456_storage_$",
                            "typeString": "mapping(uint256 => struct AsksCoreErc20.Ask storage ref)"
                          }
                        },
                        "id": 1562,
                        "indexExpression": {
                          "id": 1561,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1479,
                          "src": "5781:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5755:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$1456_storage",
                          "typeString": "struct AsksCoreErc20.Ask storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Ask_$1456_storage",
                          "typeString": "struct AsksCoreErc20.Ask storage ref"
                        }
                      ],
                      "id": 1555,
                      "name": "AskCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1474,
                      "src": "5718:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Ask_$1456_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,struct AsksCoreErc20.Ask memory)"
                      }
                    },
                    "id": 1563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5718:73:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1564,
                  "nodeType": "EmitStatement",
                  "src": "5713:78:8"
                }
              ]
            },
            "documentation": {
              "id": 1475,
              "nodeType": "StructuredDocumentation",
              "src": "4516:260:8",
              "text": "@notice Creates an ask for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The id of the ERC-721 token\n @param _price The price to fill the ask\n @param _currency The currency of the ask price"
            },
            "functionSelector": "2b9f663e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1486,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1485,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 56013,
                  "src": "4924:12:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "4924:12:8"
              }
            ],
            "name": "createAsk",
            "nameLocation": "4790:9:8",
            "parameters": {
              "id": 1484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1477,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "4817:14:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1566,
                  "src": "4809:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4809:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1479,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4849:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1566,
                  "src": "4841:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1478,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4841:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1481,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "4875:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1566,
                  "src": "4867:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1480,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4867:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1483,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "4899:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1566,
                  "src": "4891:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1482,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4891:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4799:115:8"
            },
            "returnParameters": {
              "id": 1487,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4937:0:8"
            },
            "scope": 1845,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1576,
            "nodeType": "EventDefinition",
            "src": "7918:87:8",
            "anonymous": false,
            "documentation": {
              "id": 1567,
              "nodeType": "StructuredDocumentation",
              "src": "7673:240:8",
              "text": "@notice Emitted when an ask price is updated\n @param tokenContract The ERC-721 token address of the updated ask\n @param tokenId The ERC-721 token id of the updated ask\n @param ask The metadata of the updated the ask"
            },
            "name": "AskPriceUpdated",
            "nameLocation": "7924:15:8",
            "parameters": {
              "id": 1575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1569,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "7956:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1576,
                  "src": "7940:29:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7940:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1571,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7987:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1576,
                  "src": "7971:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1570,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7971:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1574,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ask",
                  "nameLocation": "8000:3:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1576,
                  "src": "7996:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$1456_memory_ptr",
                    "typeString": "struct AsksCoreErc20.Ask"
                  },
                  "typeName": {
                    "id": 1573,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1572,
                      "name": "Ask",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1456,
                      "src": "7996:3:8"
                    },
                    "referencedDeclaration": 1456,
                    "src": "7996:3:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$1456_storage_ptr",
                      "typeString": "struct AsksCoreErc20.Ask"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7939:65:8"
            }
          },
          {
            "id": 1653,
            "nodeType": "FunctionDefinition",
            "src": "8277:883:8",
            "body": {
              "id": 1652,
              "nodeType": "Block",
              "src": "8435:725:8",
              "statements": [
                {
                  "assignments": [
                    1592
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1592,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "8504:3:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1652,
                      "src": "8492:15:8",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$1456_storage_ptr",
                        "typeString": "struct AsksCoreErc20.Ask"
                      },
                      "typeName": {
                        "id": 1591,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1590,
                          "name": "Ask",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1456,
                          "src": "8492:3:8"
                        },
                        "referencedDeclaration": 1456,
                        "src": "8492:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$1456_storage_ptr",
                          "typeString": "struct AsksCoreErc20.Ask"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1598,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1593,
                        "name": "askForNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1464,
                        "src": "8510:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$1456_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask storage ref))"
                        }
                      },
                      "id": 1595,
                      "indexExpression": {
                        "id": 1594,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1579,
                        "src": "8520:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8510:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$1456_storage_$",
                        "typeString": "mapping(uint256 => struct AsksCoreErc20.Ask storage ref)"
                      }
                    },
                    "id": 1597,
                    "indexExpression": {
                      "id": 1596,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1581,
                      "src": "8536:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8510:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$1456_storage",
                      "typeString": "struct AsksCoreErc20.Ask storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8492:53:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1600,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8603:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8603:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1602,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1592,
                            "src": "8617:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ask_$1456_storage_ptr",
                              "typeString": "struct AsksCoreErc20.Ask storage pointer"
                            }
                          },
                          "id": 1603,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1451,
                          "src": "8617:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8603:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f4e4c595f53454c4c4552",
                        "id": 1605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8629:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_66847e0e28fb73ecb24427c5c293d1abb5777b3ecc6b31b648640cd65df90556",
                          "typeString": "literal_string \"ONLY_SELLER\""
                        },
                        "value": "ONLY_SELLER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_66847e0e28fb73ecb24427c5c293d1abb5777b3ecc6b31b648640cd65df90556",
                          "typeString": "literal_string \"ONLY_SELLER\""
                        }
                      ],
                      "id": 1599,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8595:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8595:48:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1607,
                  "nodeType": "ExpressionStatement",
                  "src": "8595:48:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1608,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1583,
                      "src": "8692:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 1609,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1592,
                        "src": "8702:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$1456_storage_ptr",
                          "typeString": "struct AsksCoreErc20.Ask storage pointer"
                        }
                      },
                      "id": 1610,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1453,
                      "src": "8702:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "8692:19:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1633,
                  "nodeType": "IfStatement",
                  "src": "8688:239:8",
                  "trueBody": {
                    "id": 1632,
                    "nodeType": "Block",
                    "src": "8713:214:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1619,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1613,
                                "name": "_price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1583,
                                "src": "8792:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1616,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8807:6:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint96_$",
                                        "typeString": "type(uint96)"
                                      },
                                      "typeName": {
                                        "id": 1615,
                                        "name": "uint96",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8807:6:8",
                                        "typeDescriptions": {}
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_uint96_$",
                                        "typeString": "type(uint96)"
                                      }
                                    ],
                                    "id": 1614,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -27,
                                    "src": "8802:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 1617,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8802:12:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_uint96",
                                    "typeString": "type(uint96)"
                                  }
                                },
                                "id": 1618,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "max",
                                "nodeType": "MemberAccess",
                                "src": "8802:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              "src": "8792:26:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "494e56414c49445f41534b5f5052494345",
                              "id": 1620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8820:19:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_184298fef00488001ddf912bba50739e9c38817ce3fc9ca3f83709e869046d74",
                                "typeString": "literal_string \"INVALID_ASK_PRICE\""
                              },
                              "value": "INVALID_ASK_PRICE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_184298fef00488001ddf912bba50739e9c38817ce3fc9ca3f83709e869046d74",
                                "typeString": "literal_string \"INVALID_ASK_PRICE\""
                              }
                            ],
                            "id": 1612,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8784:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8784:56:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1622,
                        "nodeType": "ExpressionStatement",
                        "src": "8784:56:8"
                      },
                      {
                        "expression": {
                          "id": 1630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1623,
                              "name": "ask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1592,
                              "src": "8890:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Ask_$1456_storage_ptr",
                                "typeString": "struct AsksCoreErc20.Ask storage pointer"
                              }
                            },
                            "id": 1625,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "price",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1453,
                            "src": "8890:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1628,
                                "name": "_price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1583,
                                "src": "8909:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1627,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8902:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint96_$",
                                "typeString": "type(uint96)"
                              },
                              "typeName": {
                                "id": 1626,
                                "name": "uint96",
                                "nodeType": "ElementaryTypeName",
                                "src": "8902:6:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8902:14:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "8890:26:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "id": 1631,
                        "nodeType": "ExpressionStatement",
                        "src": "8890:26:8"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1634,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1585,
                      "src": "8978:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 1635,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1592,
                        "src": "8991:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$1456_storage_ptr",
                          "typeString": "struct AsksCoreErc20.Ask storage pointer"
                        }
                      },
                      "id": 1636,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "currency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1455,
                      "src": "8991:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8978:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1645,
                  "nodeType": "IfStatement",
                  "src": "8974:118:8",
                  "trueBody": {
                    "id": 1644,
                    "nodeType": "Block",
                    "src": "9005:87:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1638,
                              "name": "ask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1592,
                              "src": "9057:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Ask_$1456_storage_ptr",
                                "typeString": "struct AsksCoreErc20.Ask storage pointer"
                              }
                            },
                            "id": 1640,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "currency",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1455,
                            "src": "9057:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1641,
                            "name": "_currency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1585,
                            "src": "9072:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9057:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1643,
                        "nodeType": "ExpressionStatement",
                        "src": "9057:24:8"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1647,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1579,
                        "src": "9123:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1648,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1581,
                        "src": "9139:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1649,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1592,
                        "src": "9149:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$1456_storage_ptr",
                          "typeString": "struct AsksCoreErc20.Ask storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Ask_$1456_storage_ptr",
                          "typeString": "struct AsksCoreErc20.Ask storage pointer"
                        }
                      ],
                      "id": 1646,
                      "name": "AskPriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1576,
                      "src": "9107:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Ask_$1456_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,struct AsksCoreErc20.Ask memory)"
                      }
                    },
                    "id": 1650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9107:46:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1651,
                  "nodeType": "EmitStatement",
                  "src": "9102:51:8"
                }
              ]
            },
            "documentation": {
              "id": 1577,
              "nodeType": "StructuredDocumentation",
              "src": "8011:261:8",
              "text": "@notice Updates the ask for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The id of the ERC-721 token\n @param _price The price to fill the ask\n @param _currency The currency of the ask price"
            },
            "functionSelector": "b2007533",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1588,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1587,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 56013,
                  "src": "8422:12:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "8422:12:8"
              }
            ],
            "name": "setAskPrice",
            "nameLocation": "8286:11:8",
            "parameters": {
              "id": 1586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1579,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "8315:14:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1653,
                  "src": "8307:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1578,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8307:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1581,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "8347:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1653,
                  "src": "8339:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1580,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8339:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1583,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "8373:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1653,
                  "src": "8365:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1582,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8365:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1585,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "8397:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1653,
                  "src": "8389:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1584,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8389:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8297:115:8"
            },
            "returnParameters": {
              "id": 1589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8435:0:8"
            },
            "scope": 1845,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1663,
            "nodeType": "EventDefinition",
            "src": "10359:83:8",
            "anonymous": false,
            "documentation": {
              "id": 1654,
              "nodeType": "StructuredDocumentation",
              "src": "10120:234:8",
              "text": "@notice Emitted when an ask is canceled\n @param tokenContract The ERC-721 token address of the canceled ask\n @param tokenId The ERC-721 token id of the canceled ask\n @param ask The metadata of the canceled ask"
            },
            "name": "AskCanceled",
            "nameLocation": "10365:11:8",
            "parameters": {
              "id": 1662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1656,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "10393:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1663,
                  "src": "10377:29:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10377:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1658,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10424:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1663,
                  "src": "10408:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1657,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10408:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1661,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ask",
                  "nameLocation": "10437:3:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1663,
                  "src": "10433:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$1456_memory_ptr",
                    "typeString": "struct AsksCoreErc20.Ask"
                  },
                  "typeName": {
                    "id": 1660,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1659,
                      "name": "Ask",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1456,
                      "src": "10433:3:8"
                    },
                    "referencedDeclaration": 1456,
                    "src": "10433:3:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$1456_storage_ptr",
                      "typeString": "struct AsksCoreErc20.Ask"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10376:65:8"
            }
          },
          {
            "id": 1715,
            "nodeType": "FunctionDefinition",
            "src": "10611:553:8",
            "body": {
              "id": 1714,
              "nodeType": "Block",
              "src": "10694:470:8",
              "statements": [
                {
                  "assignments": [
                    1675
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1675,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "10762:3:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1714,
                      "src": "10751:14:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$1456_memory_ptr",
                        "typeString": "struct AsksCoreErc20.Ask"
                      },
                      "typeName": {
                        "id": 1674,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1673,
                          "name": "Ask",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1456,
                          "src": "10751:3:8"
                        },
                        "referencedDeclaration": 1456,
                        "src": "10751:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$1456_storage_ptr",
                          "typeString": "struct AsksCoreErc20.Ask"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1681,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1676,
                        "name": "askForNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1464,
                        "src": "10768:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$1456_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask storage ref))"
                        }
                      },
                      "id": 1678,
                      "indexExpression": {
                        "id": 1677,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1666,
                        "src": "10778:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10768:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$1456_storage_$",
                        "typeString": "mapping(uint256 => struct AsksCoreErc20.Ask storage ref)"
                      }
                    },
                    "id": 1680,
                    "indexExpression": {
                      "id": 1679,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1668,
                      "src": "10794:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10768:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$1456_storage",
                      "typeString": "struct AsksCoreErc20.Ask storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10751:52:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1683,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10893:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10893:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1685,
                              "name": "ask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1675,
                              "src": "10907:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Ask_$1456_memory_ptr",
                                "typeString": "struct AsksCoreErc20.Ask memory"
                              }
                            },
                            "id": 1686,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1451,
                            "src": "10907:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10893:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1688,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10921:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10921:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 1694,
                                "name": "_tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1668,
                                "src": "10967:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1691,
                                    "name": "_tokenContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1666,
                                    "src": "10943:14:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1690,
                                  "name": "IERC721",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 55158,
                                  "src": "10935:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721_$55158_$",
                                    "typeString": "type(contract IERC721)"
                                  }
                                },
                                "id": 1692,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10935:23:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721_$55158",
                                  "typeString": "contract IERC721"
                                }
                              },
                              "id": 1693,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55091,
                              "src": "10935:31:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 1695,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10935:41:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10921:55:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10893:83:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f4e4c595f53454c4c45525f4f525f544f4b454e5f4f574e4552",
                        "id": 1698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10978:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb6ff6755886c6e5d82368a5048d7da63648e1b83ee37dde2d7cfd2fdfe46e11",
                          "typeString": "literal_string \"ONLY_SELLER_OR_TOKEN_OWNER\""
                        },
                        "value": "ONLY_SELLER_OR_TOKEN_OWNER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb6ff6755886c6e5d82368a5048d7da63648e1b83ee37dde2d7cfd2fdfe46e11",
                          "typeString": "literal_string \"ONLY_SELLER_OR_TOKEN_OWNER\""
                        }
                      ],
                      "id": 1682,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10885:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10885:122:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1700,
                  "nodeType": "ExpressionStatement",
                  "src": "10885:122:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1702,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1666,
                        "src": "11035:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1703,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1668,
                        "src": "11051:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1704,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1675,
                        "src": "11061:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$1456_memory_ptr",
                          "typeString": "struct AsksCoreErc20.Ask memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Ask_$1456_memory_ptr",
                          "typeString": "struct AsksCoreErc20.Ask memory"
                        }
                      ],
                      "id": 1701,
                      "name": "AskCanceled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1663,
                      "src": "11023:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Ask_$1456_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,struct AsksCoreErc20.Ask memory)"
                      }
                    },
                    "id": 1705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11023:42:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1706,
                  "nodeType": "EmitStatement",
                  "src": "11018:47:8"
                },
                {
                  "expression": {
                    "id": 1712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "11115:42:8",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1707,
                          "name": "askForNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1464,
                          "src": "11122:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$1456_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask storage ref))"
                          }
                        },
                        "id": 1709,
                        "indexExpression": {
                          "id": 1708,
                          "name": "_tokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1666,
                          "src": "11132:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11122:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$1456_storage_$",
                          "typeString": "mapping(uint256 => struct AsksCoreErc20.Ask storage ref)"
                        }
                      },
                      "id": 1711,
                      "indexExpression": {
                        "id": 1710,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1668,
                        "src": "11148:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11122:35:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$1456_storage",
                        "typeString": "struct AsksCoreErc20.Ask storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1713,
                  "nodeType": "ExpressionStatement",
                  "src": "11115:42:8"
                }
              ]
            },
            "documentation": {
              "id": 1664,
              "nodeType": "StructuredDocumentation",
              "src": "10448:158:8",
              "text": "@notice Cancels the ask for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The id of the ERC-721 token"
            },
            "functionSelector": "40b80746",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1671,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1670,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 56013,
                  "src": "10681:12:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "10681:12:8"
              }
            ],
            "name": "cancelAsk",
            "nameLocation": "10620:9:8",
            "parameters": {
              "id": 1669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1666,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "10638:14:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1715,
                  "src": "10630:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1665,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10630:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1668,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "10662:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1715,
                  "src": "10654:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1667,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10654:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10629:42:8"
            },
            "returnParameters": {
              "id": 1672,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10694:0:8"
            },
            "scope": 1845,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1727,
            "nodeType": "EventDefinition",
            "src": "14094:96:8",
            "anonymous": false,
            "documentation": {
              "id": 1716,
              "nodeType": "StructuredDocumentation",
              "src": "13806:283:8",
              "text": "@notice Emitted when an ask is filled\n @param tokenContract The ERC-721 token address of the filled ask\n @param tokenId The ERC-721 token id of the filled ask\n @param buyer The buyer address of the filled ask\n @param ask The metadata of the filled ask"
            },
            "name": "AskFilled",
            "nameLocation": "14100:9:8",
            "parameters": {
              "id": 1726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1718,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "14126:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1727,
                  "src": "14110:29:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1717,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14110:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1720,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14157:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1727,
                  "src": "14141:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1719,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14141:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1722,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "14174:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1727,
                  "src": "14166:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1721,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14166:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1725,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ask",
                  "nameLocation": "14185:3:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1727,
                  "src": "14181:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$1456_memory_ptr",
                    "typeString": "struct AsksCoreErc20.Ask"
                  },
                  "typeName": {
                    "id": 1724,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1723,
                      "name": "Ask",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1456,
                      "src": "14181:3:8"
                    },
                    "referencedDeclaration": 1456,
                    "src": "14181:3:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$1456_storage_ptr",
                      "typeString": "struct AsksCoreErc20.Ask"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14109:80:8"
            }
          },
          {
            "id": 1844,
            "nodeType": "FunctionDefinition",
            "src": "14459:1925:8",
            "body": {
              "id": 1843,
              "nodeType": "Block",
              "src": "14621:1763:8",
              "statements": [
                {
                  "assignments": [
                    1743
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1743,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "14689:3:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1843,
                      "src": "14678:14:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$1456_memory_ptr",
                        "typeString": "struct AsksCoreErc20.Ask"
                      },
                      "typeName": {
                        "id": 1742,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1741,
                          "name": "Ask",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1456,
                          "src": "14678:3:8"
                        },
                        "referencedDeclaration": 1456,
                        "src": "14678:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$1456_storage_ptr",
                          "typeString": "struct AsksCoreErc20.Ask"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1749,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1744,
                        "name": "askForNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1464,
                        "src": "14695:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$1456_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask storage ref))"
                        }
                      },
                      "id": 1746,
                      "indexExpression": {
                        "id": 1745,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1730,
                        "src": "14705:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14695:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$1456_storage_$",
                        "typeString": "mapping(uint256 => struct AsksCoreErc20.Ask storage ref)"
                      }
                    },
                    "id": 1748,
                    "indexExpression": {
                      "id": 1747,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1732,
                      "src": "14721:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14695:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$1456_storage",
                      "typeString": "struct AsksCoreErc20.Ask storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14678:52:8"
                },
                {
                  "assignments": [
                    1751
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1751,
                      "mutability": "mutable",
                      "name": "seller",
                      "nameLocation": "14777:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1843,
                      "src": "14769:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1750,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "14769:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1754,
                  "initialValue": {
                    "expression": {
                      "id": 1752,
                      "name": "ask",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1743,
                      "src": "14786:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$1456_memory_ptr",
                        "typeString": "struct AsksCoreErc20.Ask memory"
                      }
                    },
                    "id": 1753,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "seller",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1451,
                    "src": "14786:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14769:27:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1756,
                          "name": "seller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1751,
                          "src": "14851:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1759,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14869:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1758,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14861:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1757,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14861:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14861:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14851:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "494e4143544956455f41534b",
                        "id": 1762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14873:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16f7585f8f5b838a2dff6cf219d071119a196a6de8a766a1062a07284b32e3a4",
                          "typeString": "literal_string \"INACTIVE_ASK\""
                        },
                        "value": "INACTIVE_ASK"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_16f7585f8f5b838a2dff6cf219d071119a196a6de8a766a1062a07284b32e3a4",
                          "typeString": "literal_string \"INACTIVE_ASK\""
                        }
                      ],
                      "id": 1755,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14843:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14843:45:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1764,
                  "nodeType": "ExpressionStatement",
                  "src": "14843:45:8"
                },
                {
                  "assignments": [
                    1766
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1766,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "14934:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1843,
                      "src": "14926:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1765,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14926:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1769,
                  "initialValue": {
                    "expression": {
                      "id": 1767,
                      "name": "ask",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1743,
                      "src": "14942:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$1456_memory_ptr",
                        "typeString": "struct AsksCoreErc20.Ask memory"
                      }
                    },
                    "id": 1768,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "price",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1453,
                    "src": "14942:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14926:25:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1771,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1734,
                          "src": "15030:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1772,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1766,
                          "src": "15040:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15030:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d5553545f4d415443485f5052494345",
                        "id": 1774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15047:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e43713645b8291ed751febde6f8010976eaeebb0f230cfa4cfe042628537e779",
                          "typeString": "literal_string \"MUST_MATCH_PRICE\""
                        },
                        "value": "MUST_MATCH_PRICE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e43713645b8291ed751febde6f8010976eaeebb0f230cfa4cfe042628537e779",
                          "typeString": "literal_string \"MUST_MATCH_PRICE\""
                        }
                      ],
                      "id": 1770,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15022:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15022:44:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1776,
                  "nodeType": "ExpressionStatement",
                  "src": "15022:44:8"
                },
                {
                  "assignments": [
                    1778
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1778,
                      "mutability": "mutable",
                      "name": "currency",
                      "nameLocation": "15115:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1843,
                      "src": "15107:16:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1777,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15107:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1781,
                  "initialValue": {
                    "expression": {
                      "id": 1779,
                      "name": "ask",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1743,
                      "src": "15126:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$1456_memory_ptr",
                        "typeString": "struct AsksCoreErc20.Ask memory"
                      }
                    },
                    "id": 1780,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "currency",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1455,
                    "src": "15126:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15107:31:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1783,
                          "name": "_currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1736,
                          "src": "15223:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1784,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1778,
                          "src": "15236:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15223:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d5553545f4d415443485f43555252454e4359",
                        "id": 1786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15246:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3f4a4e33bc7f7847179428ccd22e21acb55f2b165452820a8994eefa5eed2099",
                          "typeString": "literal_string \"MUST_MATCH_CURRENCY\""
                        },
                        "value": "MUST_MATCH_CURRENCY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3f4a4e33bc7f7847179428ccd22e21acb55f2b165452820a8994eefa5eed2099",
                          "typeString": "literal_string \"MUST_MATCH_CURRENCY\""
                        }
                      ],
                      "id": 1782,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15215:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15215:53:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1788,
                  "nodeType": "ExpressionStatement",
                  "src": "15215:53:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1790,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1766,
                        "src": "15544:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1791,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1778,
                        "src": "15551:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1789,
                      "name": "_handleIncomingTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1172,
                      "src": "15520:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 1792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15520:40:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1793,
                  "nodeType": "ExpressionStatement",
                  "src": "15520:40:8"
                },
                {
                  "assignments": [
                    1795,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1795,
                      "mutability": "mutable",
                      "name": "remainingProfit",
                      "nameLocation": "15633:15:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1843,
                      "src": "15625:23:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1794,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15625:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1803,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1797,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1730,
                        "src": "15675:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1798,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1732,
                        "src": "15691:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1799,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1766,
                        "src": "15701:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1800,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1778,
                        "src": "15708:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "333030303030",
                        "id": 1801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15718:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300000_by_1",
                          "typeString": "int_const 300000"
                        },
                        "value": "300000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_300000_by_1",
                          "typeString": "int_const 300000"
                        }
                      ],
                      "id": 1796,
                      "name": "_handleRoyaltyPayout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 955,
                      "src": "15654:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_bool_$",
                        "typeString": "function (address,uint256,uint256,address,uint256) returns (uint256,bool)"
                      }
                    },
                    "id": 1802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15654:71:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15624:101:8"
                },
                {
                  "expression": {
                    "id": 1809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1804,
                      "name": "remainingProfit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1795,
                      "src": "15784:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1806,
                          "name": "remainingProfit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1795,
                          "src": "15827:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1807,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1778,
                          "src": "15844:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1805,
                        "name": "_handleProtocolFeePayout",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 895,
                        "src": "15802:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (uint256,address) returns (uint256)"
                        }
                      },
                      "id": 1808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15802:51:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15784:69:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1810,
                  "nodeType": "ExpressionStatement",
                  "src": "15784:69:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1812,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1751,
                        "src": "15943:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1813,
                        "name": "remainingProfit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1795,
                        "src": "15951:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1814,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1778,
                        "src": "15968:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3530303030",
                        "id": 1815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15978:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        }
                      ],
                      "id": 1811,
                      "name": "_handleOutgoingTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1336,
                      "src": "15919:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 1816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15919:65:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1817,
                  "nodeType": "ExpressionStatement",
                  "src": "15919:65:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1821,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1730,
                        "src": "16172:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1822,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1751,
                        "src": "16188:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1823,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "16196:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16196:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1825,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1732,
                        "src": "16208:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1818,
                        "name": "erc721TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1390,
                        "src": "16138:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721TransferHelper_$49952",
                          "typeString": "contract ERC721TransferHelper"
                        }
                      },
                      "id": 1820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49951,
                      "src": "16138:33:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256) external"
                      }
                    },
                    "id": 1826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16138:79:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1827,
                  "nodeType": "ExpressionStatement",
                  "src": "16138:79:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1829,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1730,
                        "src": "16243:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1830,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1732,
                        "src": "16259:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1831,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "16269:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16269:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1833,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1743,
                        "src": "16281:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$1456_memory_ptr",
                          "typeString": "struct AsksCoreErc20.Ask memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Ask_$1456_memory_ptr",
                          "typeString": "struct AsksCoreErc20.Ask memory"
                        }
                      ],
                      "id": 1828,
                      "name": "AskFilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1727,
                      "src": "16233:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_struct$_Ask_$1456_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,address,struct AsksCoreErc20.Ask memory)"
                      }
                    },
                    "id": 1834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16233:52:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1835,
                  "nodeType": "EmitStatement",
                  "src": "16228:57:8"
                },
                {
                  "expression": {
                    "id": 1841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "16335:42:8",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1836,
                          "name": "askForNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1464,
                          "src": "16342:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$1456_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask storage ref))"
                          }
                        },
                        "id": 1838,
                        "indexExpression": {
                          "id": 1837,
                          "name": "_tokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1730,
                          "src": "16352:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16342:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$1456_storage_$",
                          "typeString": "mapping(uint256 => struct AsksCoreErc20.Ask storage ref)"
                        }
                      },
                      "id": 1840,
                      "indexExpression": {
                        "id": 1839,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1732,
                        "src": "16368:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16342:35:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$1456_storage",
                        "typeString": "struct AsksCoreErc20.Ask storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1842,
                  "nodeType": "ExpressionStatement",
                  "src": "16335:42:8"
                }
              ]
            },
            "documentation": {
              "id": 1728,
              "nodeType": "StructuredDocumentation",
              "src": "14196:258:8",
              "text": "@notice Fills the ask for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The id of the ERC-721 token\n @param _price The price to fill the ask\n @param _currency The currency to fill the ask"
            },
            "functionSelector": "d8606343",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1739,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1738,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 56013,
                  "src": "14608:12:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "14608:12:8"
              }
            ],
            "name": "fillAsk",
            "nameLocation": "14468:7:8",
            "parameters": {
              "id": 1737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1730,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "14493:14:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1844,
                  "src": "14485:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14485:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1732,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "14525:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1844,
                  "src": "14517:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1731,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14517:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1734,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "14551:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1844,
                  "src": "14543:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1733,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14543:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1736,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "14575:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1844,
                  "src": "14567:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1735,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14567:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14475:115:8"
            },
            "returnParameters": {
              "id": 1740,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14621:0:8"
            },
            "scope": 1845,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1379,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 56014,
              "src": "823:15:8"
            },
            "id": 1380,
            "nodeType": "InheritanceSpecifier",
            "src": "823:15:8"
          },
          {
            "baseName": {
              "id": 1381,
              "name": "IncomingTransferSupportV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1173,
              "src": "840:25:8"
            },
            "id": 1382,
            "nodeType": "InheritanceSpecifier",
            "src": "840:25:8"
          },
          {
            "baseName": {
              "id": 1383,
              "name": "FeePayoutSupportV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1068,
              "src": "867:18:8"
            },
            "id": 1384,
            "nodeType": "InheritanceSpecifier",
            "src": "867:18:8"
          },
          {
            "baseName": {
              "id": 1385,
              "name": "ModuleNamingSupportV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1191,
              "src": "887:21:8"
            },
            "id": 1386,
            "nodeType": "InheritanceSpecifier",
            "src": "887:21:8"
          }
        ],
        "canonicalName": "AsksCoreErc20",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1378,
          "nodeType": "StructuredDocumentation",
          "src": "684:113:8",
          "text": "@title Asks Core ERC-20\n @author kulkarohan\n @notice Module for minimal ERC-20 asks for ERC-721 tokens"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1845,
          1191,
          1068,
          1337,
          1173,
          56014
        ],
        "name": "AsksCoreErc20",
        "nameLocation": "806:13:8",
        "scope": 1846,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 8
}