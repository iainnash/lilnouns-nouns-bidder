{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_erc20TransferHelper",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_erc721TransferHelper",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_royaltyEngine",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_protocolFeeSettings",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wethAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sellerFundsRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "askCurrency",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "findersFeeBps",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "askPrice",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct AsksV1_1.Ask",
          "name": "ask",
          "type": "tuple"
        }
      ],
      "name": "AskCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sellerFundsRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "askCurrency",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "findersFeeBps",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "askPrice",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct AsksV1_1.Ask",
          "name": "ask",
          "type": "tuple"
        }
      ],
      "name": "AskCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "finder",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sellerFundsRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "askCurrency",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "findersFeeBps",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "askPrice",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct AsksV1_1.Ask",
          "name": "ask",
          "type": "tuple"
        }
      ],
      "name": "AskFilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sellerFundsRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "askCurrency",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "findersFeeBps",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "askPrice",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct AsksV1_1.Ask",
          "name": "ask",
          "type": "tuple"
        }
      ],
      "name": "AskPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "userA",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "userB",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct UniversalExchangeEventV1.ExchangeDetails",
          "name": "a",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct UniversalExchangeEventV1.ExchangeDetails",
          "name": "b",
          "type": "tuple"
        }
      ],
      "name": "ExchangeExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyPayout",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_payoutCurrency",
          "type": "address"
        }
      ],
      "name": "_handleRoyaltyEnginePayout",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "askForNFT",
      "outputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sellerFundsRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "askCurrency",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "findersFeeBps",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "askPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "cancelAsk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_askPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_askCurrency",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_sellerFundsRecipient",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "_findersFeeBps",
          "type": "uint16"
        }
      ],
      "name": "createAsk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "erc20TransferHelper",
      "outputs": [
        {
          "internalType": "contract ERC20TransferHelper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "erc721TransferHelper",
      "outputs": [
        {
          "internalType": "contract ERC721TransferHelper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_fillCurrency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fillAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_finder",
          "type": "address"
        }
      ],
      "name": "fillAsk",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registrar",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_askPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_askCurrency",
          "type": "address"
        }
      ],
      "name": "setAskPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyEngine",
          "type": "address"
        }
      ],
      "name": "setRoyaltyEngineAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x61012060405260016000553480156200001757600080fd5b5060405162003450380380620034508339810160408190526200003a916200024f565b6040518060400160405280600a81526020016941736b733a2076312e3160b01b815250838383876001600160a01b031663e3e606f06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200009f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000c59190620002cf565b6001600160a01b0316632b20e3976040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000103573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001299190620002cf565b6001600160a01b038a811660805291821660a052600180546001600160a01b0319169483169490941790935590811660e0521660c05280516200017490600290602084019062000190565b5050506001600160a01b03909216610100525062000333915050565b8280546200019e90620002f6565b90600052602060002090601f016020900481019282620001c257600085556200020d565b82601f10620001dd57805160ff19168380011785556200020d565b828001600101855582156200020d579182015b828111156200020d578251825591602001919060010190620001f0565b506200021b9291506200021f565b5090565b5b808211156200021b576000815560010162000220565b6001600160a01b03811681146200024c57600080fd5b50565b600080600080600060a086880312156200026857600080fd5b8551620002758162000236565b6020870151909550620002888162000236565b60408701519094506200029b8162000236565b6060870151909350620002ae8162000236565b6080870151909250620002c18162000236565b809150509295509295909350565b600060208284031215620002e257600080fd5b8151620002ef8162000236565b9392505050565b600181811c908216806200030b57607f821691505b602082108114156200032d57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e051610100516130a8620003a86000396000818161031001528181610aab015281816111c1015261131101526000818161210901526121b501526000818160fe01526119b70152600081816123b9015261245101526000818161025b0152611dfe01526130a86000f3fe6080604052600436106100bc5760003560e01c80638f9d325111610074578063b20075331161004e578063b2007533146102be578063b249bb30146102de578063f7cd1d9b146102fe57600080fd5b80638f9d3251146102495780639128c22c1461027d5780639e8471081461029e57600080fd5b806340b80746116100a557806340b8074614610145578063418f065614610167578063622dcbd71461023657600080fd5b806306fdde03146100c15780632b20e397146100ec575b600080fd5b3480156100cd57600080fd5b506100d6610332565b6040516100e39190612999565b60405180910390f35b3480156100f857600080fd5b506101207f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e3565b34801561015157600080fd5b50610165610160366004612a0f565b6103c0565b005b34801561017357600080fd5b506101ec610182366004612a0f565b60036020818152600093845260408085209091529183529120805460018201546002830154929093015473ffffffffffffffffffffffffffffffffffffffff918216938216929182169174010000000000000000000000000000000000000000900461ffff169085565b6040805173ffffffffffffffffffffffffffffffffffffffff96871681529486166020860152929094169183019190915261ffff166060820152608081019190915260a0016100e3565b610165610244366004612a3b565b6106b8565b34801561025557600080fd5b506101207f000000000000000000000000000000000000000000000000000000000000000081565b61029061028b366004612a9a565b610ca9565b6040519081526020016100e3565b3480156102aa57600080fd5b506101656102b9366004612af4565b610f4e565b3480156102ca57600080fd5b506101656102d9366004612a9a565b6117f9565b3480156102ea57600080fd5b506101656102f9366004612b64565b61199f565b34801561030a57600080fd5b506101207f000000000000000000000000000000000000000000000000000000000000000081565b6002805461033f90612b81565b80601f016020809104026020016040519081016040528092919081815260200182805461036b90612b81565b80156103b85780601f1061038d576101008083540402835291602001916103b8565b820191906000526020600020905b81548152906001019060200180831161039b57829003601f168201915b505050505081565b600054600114610431576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6002600090815573ffffffffffffffffffffffffffffffffffffffff838116825260036020908152604080842085855290915290912054166104cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f63616e63656c41736b2061736b20646f65736e277420657869737400000000006044820152606401610428565b6040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810182905260009073ffffffffffffffffffffffffffffffffffffffff841690636352211e90602401602060405180830381865afa15801561053d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105619190612bd5565b90503373ffffffffffffffffffffffffffffffffffffffff8216148061061857506040517fe985e9c500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015233602483015284169063e985e9c590604401602060405180830381865afa1580156105f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106189190612bf2565b6106a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f63616e63656c41736b206d75737420626520746f6b656e206f776e6572206f7260448201527f206f70657261746f7200000000000000000000000000000000000000000000006064820152608401610428565b6106ae8383611b61565b5050600160005550565b600054600114610724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610428565b6002600090815573ffffffffffffffffffffffffffffffffffffffff808716825260036020908152604080842088855290915290912080549091166107c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f66696c6c41736b206d757374206265206163746976652061736b0000000000006044820152606401610428565b600281015473ffffffffffffffffffffffffffffffffffffffff858116911614610871576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f66696c6c41736b205f66696c6c43757272656e6379206d757374206d6174636860448201527f2061736b2063757272656e6379000000000000000000000000000000000000006064820152608401610428565b82816003015414610904576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f66696c6c41736b205f66696c6c416d6f756e74206d757374206d61746368206160448201527f736b20616d6f756e7400000000000000000000000000000000000000000000006064820152608401610428565b6003810154600282015461092e919073ffffffffffffffffffffffffffffffffffffffff16611c61565b6003810154600282015460009161095f918991899173ffffffffffffffffffffffffffffffffffffffff1685611fb4565b50600283015490915061098990829073ffffffffffffffffffffffffffffffffffffffff166120ba565b905073ffffffffffffffffffffffffffffffffffffffff831615610a1e576002820154600090612710906109d99074010000000000000000000000000000000000000000900461ffff1684612c43565b6109e39190612c80565b6002840154909150610a10908590839073ffffffffffffffffffffffffffffffffffffffff16600061225a565b610a1a8183612cbb565b9150505b60018201546002830154610a4f9173ffffffffffffffffffffffffffffffffffffffff90811691849116600061225a565b81546040517f15dacbea00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff89811660048301529182166024820152336044820152606481018890527f0000000000000000000000000000000000000000000000000000000000000000909116906315dacbea90608401600060405180830381600087803b158015610af157600080fd5b505af1158015610b05573d6000803e3d6000fd5b5050604080516060808201835273ffffffffffffffffffffffffffffffffffffffff808d16835260208084018d90526001848601528451928301855260028901548216835260009083015260038801548285015287549351929550909350339216907f1f432c9454edd444f55492be01e3fa82aa88bfa28e120a039be204253c10c36e90610b969086908690612cd2565b60405180910390a33373ffffffffffffffffffffffffffffffffffffffff16888a73ffffffffffffffffffffffffffffffffffffffff167f21a9d8e221211780696258a05c6225b1a24f428e2fd4d51708f1ab2be4224d398888604051610bfe929190612d3a565b60405180910390a450505073ffffffffffffffffffffffffffffffffffffffff909516600090815260036020818152604080842097845296905294812080547fffffffffffffffffffffffff00000000000000000000000000000000000000009081168255600180830180549092169091556002820180547fffffffffffffffffffff0000000000000000000000000000000000000000000016905595018190559390935550505050565b6000333014610d3a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f5f68616e646c65526f79616c7479456e67696e655061796f7574206f6e6c792060448201527f73656c662063616c6c61626c65000000000000000000000000000000000000006064820152608401610428565b6001546040517ff533b80200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301526024820187905260448201869052600092839291169063f533b802906064016000604051808303816000875af1158015610dbe573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610e049190810190612ea3565b8151919350915080610e1b57859350505050610f46565b85600080805b84811015610f3c57868181518110610e3b57610e3b612f68565b60200260200101519250858181518110610e5757610e57612f68565b6020026020010151915081841015610ecb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f696e736f6c76656e7400000000000000000000000000000000000000000000006044820152606401610428565b610ed983838b61c35061225a565b6040805173ffffffffffffffffffffffffffffffffffffffff8581168252602082018590528d92908f16917f866e6ef8682ddf5f1025e64dfdb45527077f7be70fa9ef680b7ffd8cf4ab9c50910160405180910390a39281900392600101610e21565b5091955050505050505b949350505050565b600054600114610fba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610428565b600260009081556040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff881690636352211e90602401602060405180830381865afa15801561102c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110509190612bd5565b90503373ffffffffffffffffffffffffffffffffffffffff8216148061110757506040517fe985e9c500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015233602483015288169063e985e9c590604401602060405180830381865afa1580156110e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111079190612bf2565b611193576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f63726561746541736b206d75737420626520746f6b656e206f776e6572206f7260448201527f206f70657261746f7200000000000000000000000000000000000000000000006064820152608401610428565b6040517f72d276920000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906372d2769290602401602060405180830381865afa15801561121d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112419190612bf2565b6112cc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f63726561746541736b206d75737420617070726f76652041736b735631206d6f60448201527f64756c65000000000000000000000000000000000000000000000000000000006064820152608401610428565b6040517fe985e9c500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301527f00000000000000000000000000000000000000000000000000000000000000008116602483015288169063e985e9c590604401602060405180830381865afa158015611360573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113849190612bf2565b611410576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f63726561746541736b206d75737420617070726f76652045524337323154726160448201527f6e7366657248656c706572206173206f70657261746f720000000000000000006064820152608401610428565b6127108261ffff1611156114a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f63726561746541736b2066696e646572732066656520627073206d757374206260448201527f65206c657373207468616e206f7220657175616c20746f2031303030300000006064820152608401610428565b73ffffffffffffffffffffffffffffffffffffffff8316611549576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f63726561746541736b206d7573742073706563696679205f73656c6c6572467560448201527f6e6473526563697069656e7400000000000000000000000000000000000000006064820152608401610428565b73ffffffffffffffffffffffffffffffffffffffff87811660009081526003602090815260408083208a8452909152902054161561158b5761158b8787611b61565b6040518060a001604052808273ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018361ffff16815260200186815250600360008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600088815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548161ffff021916908361ffff16021790555060808201518160030155905050858773ffffffffffffffffffffffffffffffffffffffff167f5b65b398e1d736436510f4da442eaec71466d2abee0816567088c892c4bcee70600360008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a81526020019081526020016000206040516117e39190612f97565b60405180910390a3505060016000555050505050565b600054600114611865576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610428565b6002600090815573ffffffffffffffffffffffffffffffffffffffff808616825260036020908152604080842087855290915290912080549091163314611908576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f73657441736b5072696365206d7573742062652073656c6c65720000000000006044820152606401610428565b600381018390556002810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8481169190911790915560405185918716907f1a24bcf5290feab70f35cfb4870c294ebf497e608d4262b0ec0debe0450081409061198b908590612f97565b60405180910390a350506001600055505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614611a64576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f736574526f79616c7479456e67696e6541646472657373206f6e6c792072656760448201527f69737472617200000000000000000000000000000000000000000000000000006064820152608401610428565b611a8e817fcb23f816000000000000000000000000000000000000000000000000000000006124aa565b611b1a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f736574526f79616c7479456e67696e6541646472657373206d757374206d617460448201527f63682049526f79616c7479456e67696e65563120696e746572666163650000006064820152608401610428565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b73ffffffffffffffffffffffffffffffffffffffff821660008181526003602090815260408083208584529091529081902090518392917f871956abf85befb7c955eacd40fcabe7e01b1702d75764bf7f54bf481933fd3591611bc49190612f97565b60405180910390a373ffffffffffffffffffffffffffffffffffffffff909116600090815260036020818152604080842094845293905291812080547fffffffffffffffffffffffff0000000000000000000000000000000000000000908116825560018201805490911690556002810180547fffffffffffffffffffff0000000000000000000000000000000000000000000016905590910155565b73ffffffffffffffffffffffffffffffffffffffff8116611d105781341015611d0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f5f68616e646c65496e636f6d696e675472616e73666572206d73672076616c7560448201527f65206c657373207468616e20657870656374656420616d6f756e7400000000006064820152608401610428565b5050565b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152819060009073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015611d7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611da39190612feb565b6040517fd9fc4b6100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152336024830152306044830152606482018790529192507f00000000000000000000000000000000000000000000000000000000000000009091169063d9fc4b6190608401600060405180830381600087803b158015611e4457600080fd5b505af1158015611e58573d6000803e3d6000fd5b50506040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000925073ffffffffffffffffffffffffffffffffffffffff851691506370a0823190602401602060405180830381865afa158015611ec9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eed9190612feb565b905080611efa8684613004565b14611fad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604c60248201527f5f68616e646c65496e636f6d696e675472616e7366657220746f6b656e20747260448201527f616e736665722063616c6c20646964206e6f74207472616e736665722065787060648201527f656374656420616d6f756e740000000000000000000000000000000000000000608482015260a401610428565b5050505050565b60008080831580611fc457505a84115b611fce5783611fd0565b5a5b6040517f9128c22c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808b166004830152602482018a905260448201899052871660648201529091503090639128c22c90839060840160206040518083038160008887f193505050508015612092575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261208f91810190612feb565b60015b6120a35785600092509250506120b0565b9250600191506120b09050565b9550959350505050565b6040517f61b485f600000000000000000000000000000000000000000000000000000000815230600482015260248101839052600090819073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906361b485f690604401602060405180830381865afa158015612150573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121749190612feb565b9050806121845783915050612254565b6040517f86ab6fb90000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906386ab6fb9906024016040805180830381865afa158015612210573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612234919061301c565b91505061224581838661c35061225a565b61224f8286612cbb565b925050505b92915050565b82158061227b575073ffffffffffffffffffffffffffffffffffffffff8416155b15612285576124a4565b73ffffffffffffffffffffffffffffffffffffffff82166124835782471015612330576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5f68616e646c654f7574676f696e675472616e7366657220696e736f6c76656e60448201527f74000000000000000000000000000000000000000000000000000000000000006064820152608401610428565b600081158061233e57505a82115b612348578161234a565b5a5b905060008573ffffffffffffffffffffffffffffffffffffffff16858390604051600060405180830381858888f193505050503d80600081146123a9576040519150601f19603f3d011682016040523d82523d6000602084013e6123ae565b606091505b505090508061247c577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0866040518263ffffffff1660e01b81526004016000604051808303818588803b15801561241f57600080fd5b505af1158015612433573d6000803e3d6000fd5b5061247c93505073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169150889050876124cd565b50506124a4565b6124a473ffffffffffffffffffffffffffffffffffffffff831685856124cd565b50505050565b60006124b58361255f565b80156124c657506124c683836125c3565b9392505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261255a9084906126ff565b505050565b600061258b827f01ffc9a7000000000000000000000000000000000000000000000000000000006125c3565b801561225457506125bc827fffffffff000000000000000000000000000000000000000000000000000000006125c3565b1592915050565b604080517fffffffff00000000000000000000000000000000000000000000000000000000831660248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f01ffc9a7000000000000000000000000000000000000000000000000000000001790529051600091908290819073ffffffffffffffffffffffffffffffffffffffff8716906175309061267d908690613056565b6000604051808303818686fa925050503d80600081146126b9576040519150601f19603f3d011682016040523d82523d6000602084013e6126be565b606091505b50915091506020815110156126d95760009350505050612254565b8180156126f55750808060200190518101906126f59190612bf2565b9695505050505050565b6000612761826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661280b9092919063ffffffff16565b80519091501561255a578080602001905181019061277f9190612bf2565b61255a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610428565b6060610f4684846000858573ffffffffffffffffffffffffffffffffffffffff85163b612894576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610428565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516128bd9190613056565b60006040518083038185875af1925050503d80600081146128fa576040519150601f19603f3d011682016040523d82523d6000602084013e6128ff565b606091505b509150915061290f82828661291a565b979650505050505050565b606083156129295750816124c6565b8251156129395782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104289190612999565b60005b83811015612988578181015183820152602001612970565b838111156124a45750506000910152565b60208152600082518060208401526129b881604085016020870161296d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b73ffffffffffffffffffffffffffffffffffffffff81168114612a0c57600080fd5b50565b60008060408385031215612a2257600080fd5b8235612a2d816129ea565b946020939093013593505050565b600080600080600060a08688031215612a5357600080fd5b8535612a5e816129ea565b9450602086013593506040860135612a75816129ea565b9250606086013591506080860135612a8c816129ea565b809150509295509295909350565b60008060008060808587031215612ab057600080fd5b8435612abb816129ea565b935060208501359250604085013591506060850135612ad9816129ea565b939692955090935050565b61ffff81168114612a0c57600080fd5b60008060008060008060c08789031215612b0d57600080fd5b8635612b18816129ea565b955060208701359450604087013593506060870135612b36816129ea565b92506080870135612b46816129ea565b915060a0870135612b5681612ae4565b809150509295509295509295565b600060208284031215612b7657600080fd5b81356124c6816129ea565b600181811c90821680612b9557607f821691505b60208210811415612bcf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600060208284031215612be757600080fd5b81516124c6816129ea565b600060208284031215612c0457600080fd5b815180151581146124c657600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612c7b57612c7b612c14565b500290565b600082612cb6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600082821015612ccd57612ccd612c14565b500390565b825173ffffffffffffffffffffffffffffffffffffffff168152602080840151908201526040808401519082015260c08101825173ffffffffffffffffffffffffffffffffffffffff16606083015260208301516080830152604083015160a08301526124c6565b73ffffffffffffffffffffffffffffffffffffffff83811682528254811660208301526001830154811660408301526002830154908116606083015261ffff60a091821c16608083015260038301549082015260c081016124c6565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612e0c57612e0c612d96565b604052919050565b600067ffffffffffffffff821115612e2e57612e2e612d96565b5060051b60200190565b600082601f830112612e4957600080fd5b81516020612e5e612e5983612e14565b612dc5565b82815260059290921b84018101918181019086841115612e7d57600080fd5b8286015b84811015612e985780518352918301918301612e81565b509695505050505050565b60008060408385031215612eb657600080fd5b825167ffffffffffffffff80821115612ece57600080fd5b818501915085601f830112612ee257600080fd5b81516020612ef2612e5983612e14565b82815260059290921b84018101918181019089841115612f1157600080fd5b948201945b83861015612f38578551612f29816129ea565b82529482019490820190612f16565b91880151919650909350505080821115612f5157600080fd5b50612f5e85828601612e38565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b815473ffffffffffffffffffffffffffffffffffffffff90811682526001830154811660208301526002830154908116604083015261ffff60a091821c166060830152600383015460808301528101612254565b600060208284031215612ffd57600080fd5b5051919050565b6000821982111561301757613017612c14565b500190565b6000806040838503121561302f57600080fd5b825161303a81612ae4565b602084015190925061304b816129ea565b809150509250929050565b6000825161306881846020870161296d565b919091019291505056fea2646970667358221220c41300aece82b16035e002ccb316bb1326e3090f3ef8fdff0860ade51bab725364736f6c634300080a0033",
    "sourceMap": "947:16706:17:-:0;;;461:1:98;426:36;;3902:524:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;376:62:4;;;;;;;;;;;;;-1:-1:-1;;;376:62:4;;;4180:14:17;4196:20;4218:12;4253:21;-1:-1:-1;;;;;4232:47:17;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4232:59:17;;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;690:63:3;;;;;552:26:6;;;;;1931:13:2::1;:48:::0;;-1:-1:-1;;;;;;1931:48:2::1;::::0;;::::1;::::0;;;::::1;::::0;;;1989:67;;::::1;;::::0;2066:29:::1;;::::0;419:12:4;;;;:4;;-1:-1:-1;419:12:4;;;;:::i;:::-;-1:-1:-1;;;;;;;;4353:66:17;;::::3;;::::0;-1:-1:-1;947:16706:17;;-1:-1:-1;;947:16706:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;947:16706:17;;;-1:-1:-1;947:16706:17;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:99;-1:-1:-1;;;;;89:31:99;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:789::-;256:6;264;272;280;288;341:3;329:9;320:7;316:23;312:33;309:53;;;358:1;355;348:12;309:53;390:9;384:16;409:31;434:5;409:31;:::i;:::-;509:2;494:18;;488:25;459:5;;-1:-1:-1;522:33:99;488:25;522:33;:::i;:::-;626:2;611:18;;605:25;574:7;;-1:-1:-1;639:33:99;605:25;639:33;:::i;:::-;743:2;728:18;;722:25;691:7;;-1:-1:-1;756:33:99;722:25;756:33;:::i;:::-;860:3;845:19;;839:26;808:7;;-1:-1:-1;874:33:99;839:26;874:33;:::i;:::-;926:7;916:17;;;150:789;;;;;;;;:::o;944:276::-;1039:6;1092:2;1080:9;1071:7;1067:23;1063:32;1060:52;;;1108:1;1105;1098:12;1060:52;1140:9;1134:16;1159:31;1184:5;1159:31;:::i;:::-;1209:5;944:276;-1:-1:-1;;;944:276:99:o;1481:380::-;1560:1;1556:12;;;;1603;;;1624:61;;1678:4;1670:6;1666:17;1656:27;;1624:61;1731:2;1723:6;1720:14;1700:18;1697:38;1694:161;;;1777:10;1772:3;1768:20;1765:1;1758:31;1812:4;1809:1;1802:15;1840:4;1837:1;1830:15;1694:161;;1481:380;;;:::o;:::-;947:16706:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100bc5760003560e01c80638f9d325111610074578063b20075331161004e578063b2007533146102be578063b249bb30146102de578063f7cd1d9b146102fe57600080fd5b80638f9d3251146102495780639128c22c1461027d5780639e8471081461029e57600080fd5b806340b80746116100a557806340b8074614610145578063418f065614610167578063622dcbd71461023657600080fd5b806306fdde03146100c15780632b20e397146100ec575b600080fd5b3480156100cd57600080fd5b506100d6610332565b6040516100e39190612999565b60405180910390f35b3480156100f857600080fd5b506101207f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e3565b34801561015157600080fd5b50610165610160366004612a0f565b6103c0565b005b34801561017357600080fd5b506101ec610182366004612a0f565b60036020818152600093845260408085209091529183529120805460018201546002830154929093015473ffffffffffffffffffffffffffffffffffffffff918216938216929182169174010000000000000000000000000000000000000000900461ffff169085565b6040805173ffffffffffffffffffffffffffffffffffffffff96871681529486166020860152929094169183019190915261ffff166060820152608081019190915260a0016100e3565b610165610244366004612a3b565b6106b8565b34801561025557600080fd5b506101207f000000000000000000000000000000000000000000000000000000000000000081565b61029061028b366004612a9a565b610ca9565b6040519081526020016100e3565b3480156102aa57600080fd5b506101656102b9366004612af4565b610f4e565b3480156102ca57600080fd5b506101656102d9366004612a9a565b6117f9565b3480156102ea57600080fd5b506101656102f9366004612b64565b61199f565b34801561030a57600080fd5b506101207f000000000000000000000000000000000000000000000000000000000000000081565b6002805461033f90612b81565b80601f016020809104026020016040519081016040528092919081815260200182805461036b90612b81565b80156103b85780601f1061038d576101008083540402835291602001916103b8565b820191906000526020600020905b81548152906001019060200180831161039b57829003601f168201915b505050505081565b600054600114610431576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6002600090815573ffffffffffffffffffffffffffffffffffffffff838116825260036020908152604080842085855290915290912054166104cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f63616e63656c41736b2061736b20646f65736e277420657869737400000000006044820152606401610428565b6040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810182905260009073ffffffffffffffffffffffffffffffffffffffff841690636352211e90602401602060405180830381865afa15801561053d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105619190612bd5565b90503373ffffffffffffffffffffffffffffffffffffffff8216148061061857506040517fe985e9c500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015233602483015284169063e985e9c590604401602060405180830381865afa1580156105f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106189190612bf2565b6106a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f63616e63656c41736b206d75737420626520746f6b656e206f776e6572206f7260448201527f206f70657261746f7200000000000000000000000000000000000000000000006064820152608401610428565b6106ae8383611b61565b5050600160005550565b600054600114610724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610428565b6002600090815573ffffffffffffffffffffffffffffffffffffffff808716825260036020908152604080842088855290915290912080549091166107c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f66696c6c41736b206d757374206265206163746976652061736b0000000000006044820152606401610428565b600281015473ffffffffffffffffffffffffffffffffffffffff858116911614610871576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f66696c6c41736b205f66696c6c43757272656e6379206d757374206d6174636860448201527f2061736b2063757272656e6379000000000000000000000000000000000000006064820152608401610428565b82816003015414610904576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f66696c6c41736b205f66696c6c416d6f756e74206d757374206d61746368206160448201527f736b20616d6f756e7400000000000000000000000000000000000000000000006064820152608401610428565b6003810154600282015461092e919073ffffffffffffffffffffffffffffffffffffffff16611c61565b6003810154600282015460009161095f918991899173ffffffffffffffffffffffffffffffffffffffff1685611fb4565b50600283015490915061098990829073ffffffffffffffffffffffffffffffffffffffff166120ba565b905073ffffffffffffffffffffffffffffffffffffffff831615610a1e576002820154600090612710906109d99074010000000000000000000000000000000000000000900461ffff1684612c43565b6109e39190612c80565b6002840154909150610a10908590839073ffffffffffffffffffffffffffffffffffffffff16600061225a565b610a1a8183612cbb565b9150505b60018201546002830154610a4f9173ffffffffffffffffffffffffffffffffffffffff90811691849116600061225a565b81546040517f15dacbea00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff89811660048301529182166024820152336044820152606481018890527f0000000000000000000000000000000000000000000000000000000000000000909116906315dacbea90608401600060405180830381600087803b158015610af157600080fd5b505af1158015610b05573d6000803e3d6000fd5b5050604080516060808201835273ffffffffffffffffffffffffffffffffffffffff808d16835260208084018d90526001848601528451928301855260028901548216835260009083015260038801548285015287549351929550909350339216907f1f432c9454edd444f55492be01e3fa82aa88bfa28e120a039be204253c10c36e90610b969086908690612cd2565b60405180910390a33373ffffffffffffffffffffffffffffffffffffffff16888a73ffffffffffffffffffffffffffffffffffffffff167f21a9d8e221211780696258a05c6225b1a24f428e2fd4d51708f1ab2be4224d398888604051610bfe929190612d3a565b60405180910390a450505073ffffffffffffffffffffffffffffffffffffffff909516600090815260036020818152604080842097845296905294812080547fffffffffffffffffffffffff00000000000000000000000000000000000000009081168255600180830180549092169091556002820180547fffffffffffffffffffff0000000000000000000000000000000000000000000016905595018190559390935550505050565b6000333014610d3a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f5f68616e646c65526f79616c7479456e67696e655061796f7574206f6e6c792060448201527f73656c662063616c6c61626c65000000000000000000000000000000000000006064820152608401610428565b6001546040517ff533b80200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301526024820187905260448201869052600092839291169063f533b802906064016000604051808303816000875af1158015610dbe573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610e049190810190612ea3565b8151919350915080610e1b57859350505050610f46565b85600080805b84811015610f3c57868181518110610e3b57610e3b612f68565b60200260200101519250858181518110610e5757610e57612f68565b6020026020010151915081841015610ecb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f696e736f6c76656e7400000000000000000000000000000000000000000000006044820152606401610428565b610ed983838b61c35061225a565b6040805173ffffffffffffffffffffffffffffffffffffffff8581168252602082018590528d92908f16917f866e6ef8682ddf5f1025e64dfdb45527077f7be70fa9ef680b7ffd8cf4ab9c50910160405180910390a39281900392600101610e21565b5091955050505050505b949350505050565b600054600114610fba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610428565b600260009081556040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff881690636352211e90602401602060405180830381865afa15801561102c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110509190612bd5565b90503373ffffffffffffffffffffffffffffffffffffffff8216148061110757506040517fe985e9c500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015233602483015288169063e985e9c590604401602060405180830381865afa1580156110e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111079190612bf2565b611193576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f63726561746541736b206d75737420626520746f6b656e206f776e6572206f7260448201527f206f70657261746f7200000000000000000000000000000000000000000000006064820152608401610428565b6040517f72d276920000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906372d2769290602401602060405180830381865afa15801561121d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112419190612bf2565b6112cc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f63726561746541736b206d75737420617070726f76652041736b735631206d6f60448201527f64756c65000000000000000000000000000000000000000000000000000000006064820152608401610428565b6040517fe985e9c500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301527f00000000000000000000000000000000000000000000000000000000000000008116602483015288169063e985e9c590604401602060405180830381865afa158015611360573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113849190612bf2565b611410576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f63726561746541736b206d75737420617070726f76652045524337323154726160448201527f6e7366657248656c706572206173206f70657261746f720000000000000000006064820152608401610428565b6127108261ffff1611156114a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f63726561746541736b2066696e646572732066656520627073206d757374206260448201527f65206c657373207468616e206f7220657175616c20746f2031303030300000006064820152608401610428565b73ffffffffffffffffffffffffffffffffffffffff8316611549576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f63726561746541736b206d7573742073706563696679205f73656c6c6572467560448201527f6e6473526563697069656e7400000000000000000000000000000000000000006064820152608401610428565b73ffffffffffffffffffffffffffffffffffffffff87811660009081526003602090815260408083208a8452909152902054161561158b5761158b8787611b61565b6040518060a001604052808273ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018361ffff16815260200186815250600360008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600088815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548161ffff021916908361ffff16021790555060808201518160030155905050858773ffffffffffffffffffffffffffffffffffffffff167f5b65b398e1d736436510f4da442eaec71466d2abee0816567088c892c4bcee70600360008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a81526020019081526020016000206040516117e39190612f97565b60405180910390a3505060016000555050505050565b600054600114611865576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610428565b6002600090815573ffffffffffffffffffffffffffffffffffffffff808616825260036020908152604080842087855290915290912080549091163314611908576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f73657441736b5072696365206d7573742062652073656c6c65720000000000006044820152606401610428565b600381018390556002810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8481169190911790915560405185918716907f1a24bcf5290feab70f35cfb4870c294ebf497e608d4262b0ec0debe0450081409061198b908590612f97565b60405180910390a350506001600055505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614611a64576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f736574526f79616c7479456e67696e6541646472657373206f6e6c792072656760448201527f69737472617200000000000000000000000000000000000000000000000000006064820152608401610428565b611a8e817fcb23f816000000000000000000000000000000000000000000000000000000006124aa565b611b1a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f736574526f79616c7479456e67696e6541646472657373206d757374206d617460448201527f63682049526f79616c7479456e67696e65563120696e746572666163650000006064820152608401610428565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b73ffffffffffffffffffffffffffffffffffffffff821660008181526003602090815260408083208584529091529081902090518392917f871956abf85befb7c955eacd40fcabe7e01b1702d75764bf7f54bf481933fd3591611bc49190612f97565b60405180910390a373ffffffffffffffffffffffffffffffffffffffff909116600090815260036020818152604080842094845293905291812080547fffffffffffffffffffffffff0000000000000000000000000000000000000000908116825560018201805490911690556002810180547fffffffffffffffffffff0000000000000000000000000000000000000000000016905590910155565b73ffffffffffffffffffffffffffffffffffffffff8116611d105781341015611d0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f5f68616e646c65496e636f6d696e675472616e73666572206d73672076616c7560448201527f65206c657373207468616e20657870656374656420616d6f756e7400000000006064820152608401610428565b5050565b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152819060009073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015611d7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611da39190612feb565b6040517fd9fc4b6100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152336024830152306044830152606482018790529192507f00000000000000000000000000000000000000000000000000000000000000009091169063d9fc4b6190608401600060405180830381600087803b158015611e4457600080fd5b505af1158015611e58573d6000803e3d6000fd5b50506040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000925073ffffffffffffffffffffffffffffffffffffffff851691506370a0823190602401602060405180830381865afa158015611ec9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eed9190612feb565b905080611efa8684613004565b14611fad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604c60248201527f5f68616e646c65496e636f6d696e675472616e7366657220746f6b656e20747260448201527f616e736665722063616c6c20646964206e6f74207472616e736665722065787060648201527f656374656420616d6f756e740000000000000000000000000000000000000000608482015260a401610428565b5050505050565b60008080831580611fc457505a84115b611fce5783611fd0565b5a5b6040517f9128c22c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808b166004830152602482018a905260448201899052871660648201529091503090639128c22c90839060840160206040518083038160008887f193505050508015612092575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261208f91810190612feb565b60015b6120a35785600092509250506120b0565b9250600191506120b09050565b9550959350505050565b6040517f61b485f600000000000000000000000000000000000000000000000000000000815230600482015260248101839052600090819073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906361b485f690604401602060405180830381865afa158015612150573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121749190612feb565b9050806121845783915050612254565b6040517f86ab6fb90000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906386ab6fb9906024016040805180830381865afa158015612210573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612234919061301c565b91505061224581838661c35061225a565b61224f8286612cbb565b925050505b92915050565b82158061227b575073ffffffffffffffffffffffffffffffffffffffff8416155b15612285576124a4565b73ffffffffffffffffffffffffffffffffffffffff82166124835782471015612330576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5f68616e646c654f7574676f696e675472616e7366657220696e736f6c76656e60448201527f74000000000000000000000000000000000000000000000000000000000000006064820152608401610428565b600081158061233e57505a82115b612348578161234a565b5a5b905060008573ffffffffffffffffffffffffffffffffffffffff16858390604051600060405180830381858888f193505050503d80600081146123a9576040519150601f19603f3d011682016040523d82523d6000602084013e6123ae565b606091505b505090508061247c577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0866040518263ffffffff1660e01b81526004016000604051808303818588803b15801561241f57600080fd5b505af1158015612433573d6000803e3d6000fd5b5061247c93505073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169150889050876124cd565b50506124a4565b6124a473ffffffffffffffffffffffffffffffffffffffff831685856124cd565b50505050565b60006124b58361255f565b80156124c657506124c683836125c3565b9392505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261255a9084906126ff565b505050565b600061258b827f01ffc9a7000000000000000000000000000000000000000000000000000000006125c3565b801561225457506125bc827fffffffff000000000000000000000000000000000000000000000000000000006125c3565b1592915050565b604080517fffffffff00000000000000000000000000000000000000000000000000000000831660248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f01ffc9a7000000000000000000000000000000000000000000000000000000001790529051600091908290819073ffffffffffffffffffffffffffffffffffffffff8716906175309061267d908690613056565b6000604051808303818686fa925050503d80600081146126b9576040519150601f19603f3d011682016040523d82523d6000602084013e6126be565b606091505b50915091506020815110156126d95760009350505050612254565b8180156126f55750808060200190518101906126f59190612bf2565b9695505050505050565b6000612761826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661280b9092919063ffffffff16565b80519091501561255a578080602001905181019061277f9190612bf2565b61255a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610428565b6060610f4684846000858573ffffffffffffffffffffffffffffffffffffffff85163b612894576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610428565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516128bd9190613056565b60006040518083038185875af1925050503d80600081146128fa576040519150601f19603f3d011682016040523d82523d6000602084013e6128ff565b606091505b509150915061290f82828661291a565b979650505050505050565b606083156129295750816124c6565b8251156129395782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104289190612999565b60005b83811015612988578181015183820152602001612970565b838111156124a45750506000910152565b60208152600082518060208401526129b881604085016020870161296d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b73ffffffffffffffffffffffffffffffffffffffff81168114612a0c57600080fd5b50565b60008060408385031215612a2257600080fd5b8235612a2d816129ea565b946020939093013593505050565b600080600080600060a08688031215612a5357600080fd5b8535612a5e816129ea565b9450602086013593506040860135612a75816129ea565b9250606086013591506080860135612a8c816129ea565b809150509295509295909350565b60008060008060808587031215612ab057600080fd5b8435612abb816129ea565b935060208501359250604085013591506060850135612ad9816129ea565b939692955090935050565b61ffff81168114612a0c57600080fd5b60008060008060008060c08789031215612b0d57600080fd5b8635612b18816129ea565b955060208701359450604087013593506060870135612b36816129ea565b92506080870135612b46816129ea565b915060a0870135612b5681612ae4565b809150509295509295509295565b600060208284031215612b7657600080fd5b81356124c6816129ea565b600181811c90821680612b9557607f821691505b60208210811415612bcf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600060208284031215612be757600080fd5b81516124c6816129ea565b600060208284031215612c0457600080fd5b815180151581146124c657600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612c7b57612c7b612c14565b500290565b600082612cb6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600082821015612ccd57612ccd612c14565b500390565b825173ffffffffffffffffffffffffffffffffffffffff168152602080840151908201526040808401519082015260c08101825173ffffffffffffffffffffffffffffffffffffffff16606083015260208301516080830152604083015160a08301526124c6565b73ffffffffffffffffffffffffffffffffffffffff83811682528254811660208301526001830154811660408301526002830154908116606083015261ffff60a091821c16608083015260038301549082015260c081016124c6565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612e0c57612e0c612d96565b604052919050565b600067ffffffffffffffff821115612e2e57612e2e612d96565b5060051b60200190565b600082601f830112612e4957600080fd5b81516020612e5e612e5983612e14565b612dc5565b82815260059290921b84018101918181019086841115612e7d57600080fd5b8286015b84811015612e985780518352918301918301612e81565b509695505050505050565b60008060408385031215612eb657600080fd5b825167ffffffffffffffff80821115612ece57600080fd5b818501915085601f830112612ee257600080fd5b81516020612ef2612e5983612e14565b82815260059290921b84018101918181019089841115612f1157600080fd5b948201945b83861015612f38578551612f29816129ea565b82529482019490820190612f16565b91880151919650909350505080821115612f5157600080fd5b50612f5e85828601612e38565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b815473ffffffffffffffffffffffffffffffffffffffff90811682526001830154811660208301526002830154908116604083015261ffff60a091821c166060830152600383015460808301528101612254565b600060208284031215612ffd57600080fd5b5051919050565b6000821982111561301757613017612c14565b500190565b6000806040838503121561302f57600080fd5b825161303a81612ae4565b602084015190925061304b816129ea565b809150509250929050565b6000825161306881846020870161296d565b919091019291505056fea2646970667358221220c41300aece82b16035e002ccb316bb1326e3090f3ef8fdff0860ade51bab725364736f6c634300080a0033",
    "sourceMap": "947:16706:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;265:18:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;792:34:2;;;;;;;;;;;;;;;;;;900:42:99;888:55;;;870:74;;858:2;843:18;792:34:2;724:226:99;10333:506:17;;;;;;;;;;-1:-1:-1;10333:506:17;;;;;:::i;:::-;;:::i;:::-;;1449:60;;;;;;;;;;-1:-1:-1;1449:60:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1701:42:99;1770:15;;;1752:34;;1822:15;;;1817:2;1802:18;;1795:43;1874:15;;;;1854:18;;;1847:43;;;;1938:6;1926:19;1921:2;1906:18;;1899:47;1977:3;1962:19;;1955:35;;;;1678:3;1663:19;1449:60:17;1434:562:99;15149:2115:17;;;;;;:::i;:::-;;:::i;575:56:3:-;;;;;;;;;;;;;;;5751:1742:2;;;;;;:::i;:::-;;:::i;:::-;;;3609:25:99;;;3597:2;3582:18;5751:1742:2;3463:177:99;6414:1504:17;;;;;;;;;;-1:-1:-1;6414:1504:17;;;;;:::i;:::-;;:::i;8984:445::-;;;;;;;;;;-1:-1:-1;8984:445:17;;;;;:::i;:::-;;:::i;2472:414:2:-;;;;;;;;;;-1:-1:-1;2472:414:2;;;;;:::i;:::-;;:::i;1266:58:17:-;;;;;;;;;;;;;;;265:18:4;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10333:506:17:-;511:16:98;;531:1;511:21;503:44;;;;;;;5736:2:99;503:44:98;;;5718:21:99;5775:2;5755:18;;;5748:30;5814:12;5794:18;;;5787:40;5844:18;;503:44:98;;;;;;;;;577:1;558:16;:20;;;10434:56:17::1;:25:::0;;::::1;::::0;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;:42;::::1;10426:96;;;::::0;::::1;::::0;;6075:2:99;10426:96:17::1;::::0;::::1;6057:21:99::0;6114:2;6094:18;;;6087:30;6153:29;6133:18;;;6126:57;6200:18;;10426:96:17::1;5873:351:99::0;10426:96:17::1;10554:41;::::0;;;;::::1;::::0;::::1;3609:25:99::0;;;10533:18:17::1;::::0;10554:31:::1;::::0;::::1;::::0;::::1;::::0;3582:18:99;;10554:41:17::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10533:62:::0;-1:-1:-1;10626:10:17::1;:24;::::0;::::1;;::::0;:92:::1;;-1:-1:-1::0;10654:64:17::1;::::0;;;;:40:::1;6738:15:99::0;;;10654:64:17::1;::::0;::::1;6720:34:99::0;10707:10:17::1;6770:18:99::0;;;6763:43;10654:40:17;::::1;::::0;::::1;::::0;6632:18:99;;10654:64:17::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10605:180;;;::::0;::::1;::::0;;7301:2:99;10605:180:17::1;::::0;::::1;7283:21:99::0;7340:2;7320:18;;;7313:30;7379:34;7359:18;;;7352:62;7450:11;7430:18;;;7423:39;7479:19;;10605:180:17::1;7099:405:99::0;10605:180:17::1;10796:36;10807:14;10823:8;10796:10;:36::i;:::-;-1:-1:-1::0;;620:1:98;601:16;:20;-1:-1:-1;10333:506:17:o;15149:2115::-;511:16:98;;531:1;511:21;503:44;;;;;;;5736:2:99;503:44:98;;;5718:21:99;5775:2;5755:18;;;5748:30;5814:12;5794:18;;;5787:40;5844:18;;503:44:98;5534:334:99;503:44:98;577:1;558:16;:20;;;15373:25:17::1;::::0;;::::1;::::0;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;15427:10;;15373:35;;15427:10:::1;15419:63;;;::::0;::::1;::::0;;7711:2:99;15419:63:17::1;::::0;::::1;7693:21:99::0;7750:2;7730:18;;;7723:30;7789:28;7769:18;;;7762:56;7835:18;;15419:63:17::1;7509:350:99::0;15419:63:17::1;15500:15;::::0;::::1;::::0;:32:::1;::::0;;::::1;:15:::0;::::1;:32;15492:90;;;::::0;::::1;::::0;;8066:2:99;15492:90:17::1;::::0;::::1;8048:21:99::0;8105:2;8085:18;;;8078:30;8144:34;8124:18;;;8117:62;8215:15;8195:18;;;8188:43;8248:19;;15492:90:17::1;7864:409:99::0;15492:90:17::1;15616:11;15600:3;:12;;;:27;15592:81;;;::::0;::::1;::::0;;8480:2:99;15592:81:17::1;::::0;::::1;8462:21:99::0;8519:2;8499:18;;;8492:30;8558:34;8538:18;;;8531:62;8629:11;8609:18;;;8602:39;8658:19;;15592:81:17::1;8278:405:99::0;15592:81:17::1;15782:12;::::0;::::1;::::0;15796:15:::1;::::0;::::1;::::0;15758:54:::1;::::0;15782:12;15796:15:::1;;15758:23;:54::i;:::-;15969:12;::::0;::::1;::::0;15983:15:::1;::::0;::::1;::::0;15893:23:::1;::::0;15922:95:::1;::::0;15943:14;;15959:8;;15983:15:::1;;15893:23:::0;15922:20:::1;:95::i;:::-;-1:-1:-1::0;16128:15:17::1;::::0;::::1;::::0;15892:125;;-1:-1:-1;16086:58:17::1;::::0;15892:125;;16128:15:::1;;16086:24;:58::i;:::-;16068:76:::0;-1:-1:-1;16197:21:17::1;::::0;::::1;::::0;16193:272:::1;;16274:17;::::0;::::1;::::0;16234:18:::1;::::0;16295:5:::1;::::0;16256:35:::1;::::0;16274:17;;::::1;;;16256:15:::0;:35:::1;:::i;:::-;16255:45;;;;:::i;:::-;16359:15;::::0;::::1;::::0;16234:66;;-1:-1:-1;16314:79:17::1;::::0;16338:7;;16234:66;;16359:15:::1;;;16314:23;:79::i;:::-;16426:28;16444:10:::0;16426:15;:28:::1;:::i;:::-;16408:46;;16220:245;16193:272;16550:24;::::0;::::1;::::0;16593:15:::1;::::0;::::1;::::0;16526:101:::1;::::0;16550:24:::1;::::0;;::::1;::::0;16576:15;;16593::::1;16550:24;16526:23;:101::i;:::-;16721:10:::0;;16671:83:::1;::::0;;;;:33:::1;9829:15:99::0;;;16671:83:17::1;::::0;::::1;9811:34:99::0;16721:10:17;;::::1;9861:18:99::0;;;9854:43;16733:10:17::1;9913:18:99::0;;;9906:43;9965:18;;;9958:34;;;16671:20:17::1;:33:::0;;::::1;::::0;::::1;::::0;9722:19:99;;16671:83:17::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;16811:78:17::1;::::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;16886:1:::1;16811:78:::0;;;;16945:83;;;;::::1;::::0;;16977:15:::1;::::0;::::1;::::0;;::::1;16945:83:::0;;16765:43:::1;16945:83:::0;;::::1;::::0;17014:12:::1;::::0;::::1;::::0;16945:83;;;;17061:10;;17044:84;;16811:78;;-1:-1:-1;16945:83:17;;-1:-1:-1;17073:10:17::1;::::0;17061::::1;::::0;17044:84:::1;::::0;::::1;::::0;16811:78;;16945:83;;17044:84:::1;:::i;:::-;;;;;;;;17179:10;17143:61;;17169:8;17153:14;17143:61;;;17191:7;17200:3;17143:61;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;17222:25:17::1;::::0;;::::1;;::::0;;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;17215:42;;;;;::::1;::::0;;;;;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;;601:20:98;;;;-1:-1:-1;;;;15149:2115:17:o;5751:1742:2:-;5935:7;6007:10;6029:4;6007:27;5999:85;;;;;;;11745:2:99;5999:85:2;;;11727:21:99;11784:2;11764:18;;;11757:30;11823:34;11803:18;;;11796:62;11894:15;11874:18;;;11867:43;11927:19;;5999:85:2;11543:409:99;5999:85:2;6228:13;;:59;;;;;:13;12177:55:99;;;6228:59:2;;;12159:74:99;12249:18;;;12242:34;;;12292:18;;;12285:34;;;6163:35:2;;;;6228:13;;;:24;;12132:18:99;;6228:59:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6364:17;;6162:125;;-1:-1:-1;6162:125:2;-1:-1:-1;6460:18:2;6456:38;;6487:7;6480:14;;;;;;;6456:38;6567:7;6541:23;;;6736:718;6760:13;6756:1;:17;6736:718;;;6849:10;6860:1;6849:13;;;;;;;;:::i;:::-;;;;;;;6837:25;;6885:7;6893:1;6885:10;;;;;;;;:::i;:::-;;;;;;;6876:19;;7011:6;6992:15;:25;;6984:47;;;;;;;15347:2:99;6984:47:2;;;15329:21:99;15386:1;15366:18;;;15359:29;15424:11;15404:18;;;15397:39;15453:18;;6984:47:2;15145:332:99;6984:47:2;7087:66;7111:9;7122:6;7130:15;7147:5;7087:23;:66::i;:::-;7173:58;;;;15674:55:99;;;15656:74;;15761:2;15746:18;;15739:34;;;7203:8:2;;7173:58;;;;;;15629:18:99;7173:58:2;;;;;;;7383:25;;;;;7426:3;;6736:718;;;-1:-1:-1;7471:15:2;;-1:-1:-1;;;;;;5751:1742:2;;;;;;;:::o;6414:1504:17:-;511:16:98;;531:1;511:21;503:44;;;;;;;5736:2:99;503:44:98;;;5718:21:99;5775:2;5755:18;;;5748:30;5814:12;5794:18;;;5787:40;5844:18;;503:44:98;5534:334:99;503:44:98;577:1;558:16;:20;;;6677:41:17::1;::::0;;;;::::1;::::0;::::1;3609:25:99::0;;;6677:31:17::1;::::0;::::1;::::0;::::1;::::0;3582:18:99;;6677:41:17::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6656:62:::0;-1:-1:-1;6750:10:17::1;:24;::::0;::::1;;::::0;:92:::1;;-1:-1:-1::0;6778:64:17::1;::::0;;;;:40:::1;6738:15:99::0;;;6778:64:17::1;::::0;::::1;6720:34:99::0;6831:10:17::1;6770:18:99::0;;;6763:43;6778:40:17;::::1;::::0;::::1;::::0;6632:18:99;;6778:64:17::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6729:180;;;::::0;::::1;::::0;;15986:2:99;6729:180:17::1;::::0;::::1;15968:21:99::0;16025:2;16005:18;;;15998:30;16064:34;16044:18;;;16037:62;16135:11;16115:18;;;16108:39;16164:19;;6729:180:17::1;15784:405:99::0;6729:180:17::1;6927:49;::::0;;;;6965:10:::1;6927:49;::::0;::::1;870:74:99::0;6927:20:17::1;:37;;::::0;::::1;::::0;843:18:99;;6927:49:17::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6919:98;;;::::0;::::1;::::0;;16396:2:99;6919:98:17::1;::::0;::::1;16378:21:99::0;16435:2;16415:18;;;16408:30;16474:34;16454:18;;;16447:62;16545:6;16525:18;;;16518:34;16569:19;;6919:98:17::1;16194:400:99::0;6919:98:17::1;7048:83;::::0;;;;:40:::1;6738:15:99::0;;;7048:83:17::1;::::0;::::1;6720:34:99::0;7109:20:17::1;6790:15:99::0;;6770:18;;;6763:43;7048:40:17;::::1;::::0;::::1;::::0;6632:18:99;;7048:83:17::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7027:185;;;::::0;::::1;::::0;;16801:2:99;7027:185:17::1;::::0;::::1;16783:21:99::0;16840:2;16820:18;;;16813:30;16879:34;16859:18;;;16852:62;16950:25;16930:18;;;16923:53;16993:19;;7027:185:17::1;16599:419:99::0;7027:185:17::1;7248:5;7230:14;:23;;;;7222:97;;;::::0;::::1;::::0;;17225:2:99;7222:97:17::1;::::0;::::1;17207:21:99::0;17264:2;17244:18;;;17237:30;17303:34;17283:18;;;17276:62;17374:31;17354:18;;;17347:59;17423:19;;7222:97:17::1;17023:425:99::0;7222:97:17::1;7337:35;::::0;::::1;7329:92;;;::::0;::::1;::::0;;17655:2:99;7329:92:17::1;::::0;::::1;17637:21:99::0;17694:2;17674:18;;;17667:30;17733:34;17713:18;;;17706:62;17804:14;17784:18;;;17777:42;17836:19;;7329:92:17::1;17453:408:99::0;7329:92:17::1;7436:56;:25:::0;;::::1;7490:1;7436:25:::0;;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;:42;::::1;:56:::0;7432:123:::1;;7508:36;7519:14;7535:8;7508:10;:36::i;:::-;7603:219;;;;;;;;7629:10;7603:219;;;;;;7675:21;7603:219;;;;;;7723:12;7603:219;;;;;;7764:14;7603:219;;;;;;7802:9;7603:219;;::::0;7565:9:::1;:25;7575:14;7565:25;;;;;;;;;;;;;;;:35;7591:8;7565:35;;;;;;;;;;;:257;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7865:8;7849:14;7838:73;;;7875:9;:25;7885:14;7875:25;;;;;;;;;;;;;;;:35;7901:8;7875:35;;;;;;;;;;;7838:73;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;620:1:98;601:16;:20;-1:-1:-1;;;;;6414:1504:17:o;8984:445::-;511:16:98;;531:1;511:21;503:44;;;;;;;5736:2:99;503:44:98;;;5718:21:99;5775:2;5755:18;;;5748:30;5814:12;5794:18;;;5787:40;5844:18;;503:44:98;5534:334:99;503:44:98;577:1;558:16;:20;;;9176:25:17::1;::::0;;::::1;::::0;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;9230:10;;9176:35;;9230:10:::1;9244;9230:24;9222:63;;;::::0;::::1;::::0;;18317:2:99;9222:63:17::1;::::0;::::1;18299:21:99::0;18356:2;18336:18;;;18329:30;18395:28;18375:18;;;18368:56;18441:18;;9222:63:17::1;18115:350:99::0;9222:63:17::1;9296:12;::::0;::::1;:24:::0;;;9330:15:::1;::::0;::::1;:30:::0;;;::::1;;::::0;;::::1;::::0;;;::::1;::::0;;;9376:46:::1;::::0;9408:8;;9376:46;::::1;::::0;::::1;::::0;::::1;::::0;9296:12;;9376:46:::1;:::i;:::-;;;;;;;;-1:-1:-1::0;;620:1:98;601:16;:20;-1:-1:-1;;;8984:445:17:o;2472:414:2:-;2554:10;:23;2568:9;2554:23;;2546:74;;;;;;;18925:2:99;2546:74:2;;;18907:21:99;18964:2;18944:18;;;18937:30;19003:34;18983:18;;;18976:62;19074:8;19054:18;;;19047:36;19100:19;;2546:74:2;18723:402:99;2546:74:2;2651:83;2683:14;2699:34;2651:31;:83::i;:::-;2630:191;;;;;;;19332:2:99;2630:191:2;;;19314:21:99;19371:2;19351:18;;;19344:30;19410:34;19390:18;;;19383:62;19481:31;19461:18;;;19454:59;19530:19;;2630:191:2;19130:425:99;2630:191:2;2831:13;:48;;;;;;;;;;;;;;;2472:414::o;17432:219:17:-;17517:74;;;17555:25;;;;:9;:25;;;;;;;;:35;;;;;;;;;;17517:74;;17545:8;;17517:74;;;;;17555:35;17517:74;:::i;:::-;;;;;;;;17609:25;;;;;;;;:9;:25;;;;;;;;:35;;;;;;;;;17602:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17432:219::o;1007:933:3:-;1099:23;;;1095:839;;1159:7;1146:9;:20;;1138:92;;;;;;;19762:2:99;1138:92:3;;;19744:21:99;19801:2;19781:18;;;19774:30;19840:34;19820:18;;;19813:62;19911:29;19891:18;;;19884:57;19958:19;;1138:92:3;19560:423:99;1138:92:3;1007:933;;:::o;1095:839::-;1587:30;;;;;1611:4;1587:30;;;870:74:99;1539:9:3;;1517:12;;1587:15;;;;;;843:18:99;;1587:30:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1631:83;;;;;:36;9829:15:99;;;1631:83:3;;;9811:34:99;1679:10:3;9861:18:99;;;9854:43;1699:4:3;9913:18:99;;;9906:43;9965:18;;;9958:34;;;1563:54:3;;-1:-1:-1;1631:19:3;:36;;;;;;9722:19:99;;1631:83:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1751:30:3;;;;;1775:4;1751:30;;;870:74:99;1728:20:3;;-1:-1:-1;1751:15:3;;;;-1:-1:-1;1751:15:3;;843:18:99;;1751:30:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1728:53;-1:-1:-1;1728:53:3;1803:23;1819:7;1803:13;:23;:::i;:::-;:39;1795:128;;;;;;;20512:2:99;1795:128:3;;;20494:21:99;20551:2;20531:18;;;20524:30;20590:34;20570:18;;;20563:62;20661:34;20641:18;;;20634:62;20733:14;20712:19;;;20705:43;20765:19;;1795:128:3;20310:480:99;1795:128:3;1247:687;;;1007:933;;:::o;4289:888:2:-;4486:7;;;4640:14;;;:39;;;4670:9;4658;:21;4640:39;4639:65;;4695:9;4639:65;;;4683:9;4639:65;4802:93;;;;;21036:42:99;21105:15;;;4802:93:2;;;21087:34:99;21137:18;;;21130:34;;;21180:18;;;21173:34;;;21243:15;;21223:18;;;21216:43;4625:79:2;;-1:-1:-1;4802:4:2;;:31;;4625:79;;20998:19:99;;4802:93:2;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4802:93:2;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;4798:373;;5145:7;5154:5;5137:23;;;;;;;4798:373;5020:14;-1:-1:-1;5036:4:2;;-1:-1:-1;5012:29:2;;-1:-1:-1;5012:29:2;4289:888;;;;;;;;;:::o;3119:632::-;3289:56;;;;;3330:4;3289:56;;;15656:74:99;15746:18;;;15739:34;;;3213:7:2;;;;3289:32;:19;:32;;;;15629:18:99;;3289:56:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3267:78;-1:-1:-1;3404:16:2;3400:36;;3429:7;3422:14;;;;;3400:36;3503:51;;;;;3548:4;3503:51;;;870:74:99;3479:20:2;;3503:19;:36;;;;;843:18:99;;3503:51:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3476:78;;;3596:74;3620:12;3634:11;3647:15;3664:5;3596:23;:74::i;:::-;3723:21;3733:11;3723:7;:21;:::i;:::-;3716:28;;;;3119:632;;;;;:::o;1039:1016:6:-;1203:12;;;:35;;-1:-1:-1;1219:19:6;;;;1203:35;1199:72;;;1254:7;;1199:72;1315:23;;;1311:738;;1387:7;1362:21;:32;;1354:78;;;;;;;21860:2:99;1354:78:6;;;21842:21:99;21899:2;21879:18;;;21872:30;21938:34;21918:18;;;21911:62;22009:3;21989:18;;;21982:31;22030:19;;1354:78:6;21658:397:99;1354:78:6;1564:11;1579:14;;;:39;;;1609:9;1597;:21;1579:39;1578:65;;1634:9;1578:65;;;1622:9;1578:65;1564:79;;1658:12;1676:5;:10;;1694:7;1708:3;1676:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1657:59;;;1822:7;1817:145;;1849:4;:12;;;1869:7;1849:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1897:50:6;;-1:-1:-1;;1897:34:6;1912:4;1897:34;;-1:-1:-1;1932:5:6;;-1:-1:-1;1939:7:6;1897:34;:50::i;:::-;1340:632;;1311:738;;;1992:46;:30;;;2023:5;2030:7;1992:30;:46::i;:::-;1039:1016;;;;:::o;1318:274:96:-;1405:4;1512:23;1527:7;1512:14;:23::i;:::-;:73;;;;;1539:46;1564:7;1573:11;1539:24;:46::i;:::-;1505:80;1318:274;-1:-1:-1;;;1318:274:96:o;701:205:86:-;840:58;;;15686:42:99;15674:55;;840:58:86;;;15656:74:99;15746:18;;;;15739:34;;;840:58:86;;;;;;;;;;15629:18:99;;;;840:58:86;;;;;;;;;;863:23;840:58;;;813:86;;833:5;;813:19;:86::i;:::-;701:205;;;:::o;689:411:96:-;753:4;960:60;985:7;994:25;960:24;:60::i;:::-;:133;;;;-1:-1:-1;1037:56:96;1062:7;1071:21;1037:24;:56::i;:::-;1036:57;941:152;689:411;-1:-1:-1;;689:411:96:o;4208:409::-;4346:71;;;22444:66:99;22432:79;;4346:71:96;;;;22414:98:99;;;;4346:71:96;;;;;;;;;;22387:18:99;;;;4346:71:96;;;;;;;;;4369:34;4346:71;;;4465:45;;4301:4;;4346:71;4301:4;;;;4465:18;;;;4489:5;;4465:45;;4346:71;;4465:45;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4427:83;;;;4540:2;4524:6;:13;:18;4520:36;;;4551:5;4544:12;;;;;;;4520:36;4573:7;:37;;;;;4595:6;4584:26;;;;;;;;;;;;:::i;:::-;4566:44;4208:409;-1:-1:-1;;;;;;4208:409:96:o;3207:706:86:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;3652:27;;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:86;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;;;;23004:2:99;3811:85:86;;;22986:21:99;23043:2;23023:18;;;23016:30;23082:34;23062:18;;;23055:62;23153:12;23133:18;;;23126:40;23183:19;;3811:85:86;22802:406:99;3861:223:92;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;3994;1465:19;;;;5228:60;;;;;;;23822:2:99;5228:60:92;;;23804:21:99;23861:2;23841:18;;;23834:30;23900:31;23880:18;;;23873:59;23949:18;;5228:60:92;23620:353:99;5228:60:92;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:92:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:92;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;;;;;;;;;;:::i;14:258:99:-;86:1;96:113;110:6;107:1;104:13;96:113;;;186:11;;;180:18;167:11;;;160:39;132:2;125:10;96:113;;;227:6;224:1;221:13;218:48;;;-1:-1:-1;;262:1:99;244:16;;237:27;14:258::o;277:442::-;426:2;415:9;408:21;389:4;458:6;452:13;501:6;496:2;485:9;481:18;474:34;517:66;576:6;571:2;560:9;556:18;551:2;543:6;539:15;517:66;:::i;:::-;635:2;623:15;640:66;619:88;604:104;;;;710:2;600:113;;277:442;-1:-1:-1;;277:442:99:o;955:154::-;1041:42;1034:5;1030:54;1023:5;1020:65;1010:93;;1099:1;1096;1089:12;1010:93;955:154;:::o;1114:315::-;1182:6;1190;1243:2;1231:9;1222:7;1218:23;1214:32;1211:52;;;1259:1;1256;1249:12;1211:52;1298:9;1285:23;1317:31;1342:5;1317:31;:::i;:::-;1367:5;1419:2;1404:18;;;;1391:32;;-1:-1:-1;;;1114:315:99:o;2001:667::-;2096:6;2104;2112;2120;2128;2181:3;2169:9;2160:7;2156:23;2152:33;2149:53;;;2198:1;2195;2188:12;2149:53;2237:9;2224:23;2256:31;2281:5;2256:31;:::i;:::-;2306:5;-1:-1:-1;2358:2:99;2343:18;;2330:32;;-1:-1:-1;2414:2:99;2399:18;;2386:32;2427:33;2386:32;2427:33;:::i;:::-;2479:7;-1:-1:-1;2533:2:99;2518:18;;2505:32;;-1:-1:-1;2589:3:99;2574:19;;2561:33;2603;2561;2603;:::i;:::-;2655:7;2645:17;;;2001:667;;;;;;;;:::o;2933:525::-;3019:6;3027;3035;3043;3096:3;3084:9;3075:7;3071:23;3067:33;3064:53;;;3113:1;3110;3103:12;3064:53;3152:9;3139:23;3171:31;3196:5;3171:31;:::i;:::-;3221:5;-1:-1:-1;3273:2:99;3258:18;;3245:32;;-1:-1:-1;3324:2:99;3309:18;;3296:32;;-1:-1:-1;3380:2:99;3365:18;;3352:32;3393:33;3352:32;3393:33;:::i;:::-;2933:525;;;;-1:-1:-1;2933:525:99;;-1:-1:-1;;2933:525:99:o;3645:117::-;3730:6;3723:5;3719:18;3712:5;3709:29;3699:57;;3752:1;3749;3742:12;3767:807;3870:6;3878;3886;3894;3902;3910;3963:3;3951:9;3942:7;3938:23;3934:33;3931:53;;;3980:1;3977;3970:12;3931:53;4019:9;4006:23;4038:31;4063:5;4038:31;:::i;:::-;4088:5;-1:-1:-1;4140:2:99;4125:18;;4112:32;;-1:-1:-1;4191:2:99;4176:18;;4163:32;;-1:-1:-1;4247:2:99;4232:18;;4219:32;4260:33;4219:32;4260:33;:::i;:::-;4312:7;-1:-1:-1;4371:3:99;4356:19;;4343:33;4385;4343;4385;:::i;:::-;4437:7;-1:-1:-1;4496:3:99;4481:19;;4468:33;4510:32;4468:33;4510:32;:::i;:::-;4561:7;4551:17;;;3767:807;;;;;;;;:::o;4579:247::-;4638:6;4691:2;4679:9;4670:7;4666:23;4662:32;4659:52;;;4707:1;4704;4697:12;4659:52;4746:9;4733:23;4765:31;4790:5;4765:31;:::i;5092:437::-;5171:1;5167:12;;;;5214;;;5235:61;;5289:4;5281:6;5277:17;5267:27;;5235:61;5342:2;5334:6;5331:14;5311:18;5308:38;5305:218;;;5379:77;5376:1;5369:88;5480:4;5477:1;5470:15;5508:4;5505:1;5498:15;5305:218;;5092:437;;;:::o;6229:251::-;6299:6;6352:2;6340:9;6331:7;6327:23;6323:32;6320:52;;;6368:1;6365;6358:12;6320:52;6400:9;6394:16;6419:31;6444:5;6419:31;:::i;6817:277::-;6884:6;6937:2;6925:9;6916:7;6912:23;6908:32;6905:52;;;6953:1;6950;6943:12;6905:52;6985:9;6979:16;7038:5;7031:13;7024:21;7017:5;7014:32;7004:60;;7060:1;7057;7050:12;8688:184;8740:77;8737:1;8730:88;8837:4;8834:1;8827:15;8861:4;8858:1;8851:15;8877:228;8917:7;9043:1;8975:66;8971:74;8968:1;8965:81;8960:1;8953:9;8946:17;8942:105;8939:131;;;9050:18;;:::i;:::-;-1:-1:-1;9090:9:99;;8877:228::o;9110:274::-;9150:1;9176;9166:189;;9211:77;9208:1;9201:88;9312:4;9309:1;9302:15;9340:4;9337:1;9330:15;9166:189;-1:-1:-1;9369:9:99;;9110:274::o;9389:125::-;9429:4;9457:1;9454;9451:8;9448:34;;;9462:18;;:::i;:::-;-1:-1:-1;9499:9:99;;9389:125::o;10269:435::-;10088:12;;10102:42;10084:61;10072:74;;10195:4;10184:16;;;10178:23;10162:14;;;10155:47;10251:4;10240:16;;;10234:23;10218:14;;;10211:47;10563:3;10548:19;;10088:12;;10102:42;10084:61;10694:2;10679:18;;10072:74;10195:4;10184:16;;10178:23;10162:14;;;10155:47;10251:4;10240:16;;10234:23;10218:14;;;10211:47;10637:61;10003:261;11170:368;11418:42;11406:55;;;11388:74;;10855:12;;10851:21;;11528:2;11513:18;;10839:34;10926:4;10915:16;;10909:23;10905:32;;10889:14;;;10882:56;10981:4;10970:16;;10964:23;11019:18;;;11003:14;;;10996:42;11095:6;11078:3;11074:19;;;11070:32;11054:14;;;11047:56;11152:4;11141:16;;11135:23;11119:14;;;11112:47;11375:3;11360:19;;11471:61;10709:456;12330:184;12382:77;12379:1;12372:88;12479:4;12476:1;12469:15;12503:4;12500:1;12493:15;12519:334;12590:2;12584:9;12646:2;12636:13;;12651:66;12632:86;12620:99;;12749:18;12734:34;;12770:22;;;12731:62;12728:88;;;12796:18;;:::i;:::-;12832:2;12825:22;12519:334;;-1:-1:-1;12519:334:99:o;12858:191::-;12926:4;12959:18;12951:6;12948:30;12945:56;;;12981:18;;:::i;:::-;-1:-1:-1;13026:1:99;13022:14;13038:4;13018:25;;12858:191::o;13054:667::-;13119:5;13172:3;13165:4;13157:6;13153:17;13149:27;13139:55;;13190:1;13187;13180:12;13139:55;13219:6;13213:13;13245:4;13269:68;13285:51;13333:2;13285:51;:::i;:::-;13269:68;:::i;:::-;13371:15;;;13457:1;13453:10;;;;13441:23;;13437:32;;;13402:12;;;;13481:15;;;13478:35;;;13509:1;13506;13499:12;13478:35;13545:2;13537:6;13533:15;13557:135;13573:6;13568:3;13565:15;13557:135;;;13639:10;;13627:23;;13670:12;;;;13590;;13557:135;;;-1:-1:-1;13710:5:99;13054:667;-1:-1:-1;;;;;;13054:667:99:o;13726:1225::-;13863:6;13871;13924:2;13912:9;13903:7;13899:23;13895:32;13892:52;;;13940:1;13937;13930:12;13892:52;13973:9;13967:16;14002:18;14043:2;14035:6;14032:14;14029:34;;;14059:1;14056;14049:12;14029:34;14097:6;14086:9;14082:22;14072:32;;14142:7;14135:4;14131:2;14127:13;14123:27;14113:55;;14164:1;14161;14154:12;14113:55;14193:2;14187:9;14215:4;14239:68;14255:51;14303:2;14255:51;:::i;14239:68::-;14341:15;;;14423:1;14419:10;;;;14411:19;;14407:28;;;14372:12;;;;14447:19;;;14444:39;;;14479:1;14476;14469:12;14444:39;14503:11;;;;14523:210;14539:6;14534:3;14531:15;14523:210;;;14612:3;14606:10;14629:31;14654:5;14629:31;:::i;:::-;14673:18;;14556:12;;;;14711;;;;14523:210;;;14788:18;;;14782:25;14752:5;;-1:-1:-1;14782:25:99;;-1:-1:-1;;;14819:16:99;;;14816:36;;;14848:1;14845;14838:12;14816:36;;14871:74;14937:7;14926:8;14915:9;14911:24;14871:74;:::i;:::-;14861:84;;;13726:1225;;;;;:::o;14956:184::-;15008:77;15005:1;14998:88;15105:4;15102:1;15095:15;15129:4;15126:1;15119:15;17866:244;10855:12;;10788:42;10851:21;;;10839:34;;10926:4;10915:16;;10909:23;10905:32;;10898:4;10889:14;;10882:56;10981:4;10970:16;;10964:23;11019:18;;;11012:4;11003:14;;10996:42;11095:6;18039:3;11074:19;;;11070:32;11063:4;11054:14;;11047:56;11152:4;11141:16;;11135:23;11128:4;11119:14;;11112:47;18024:19;;18052:52;10709:456;19988:184;20058:6;20111:2;20099:9;20090:7;20086:23;20082:32;20079:52;;;20127:1;20124;20117:12;20079:52;-1:-1:-1;20150:16:99;;19988:184;-1:-1:-1;19988:184:99:o;20177:128::-;20217:3;20248:1;20244:6;20241:1;20238:13;20235:39;;;20254:18;;:::i;:::-;-1:-1:-1;20290:9:99;;20177:128::o;21270:383::-;21348:6;21356;21409:2;21397:9;21388:7;21384:23;21380:32;21377:52;;;21425:1;21422;21415:12;21377:52;21457:9;21451:16;21476:30;21500:5;21476:30;:::i;:::-;21575:2;21560:18;;21554:25;21525:5;;-1:-1:-1;21588:33:99;21554:25;21588:33;:::i;:::-;21640:7;21630:17;;;21270:383;;;;;:::o;22523:274::-;22652:3;22690:6;22684:13;22706:53;22752:6;22747:3;22740:4;22732:6;22728:17;22706:53;:::i;:::-;22775:16;;;;;22523:274;-1:-1:-1;;22523:274:99:o",
    "linkReferences": {},
    "immutableReferences": {
      "1085": [
        {
          "start": 603,
          "length": 32
        },
        {
          "start": 7678,
          "length": 32
        }
      ],
      "1222": [
        {
          "start": 9145,
          "length": 32
        },
        {
          "start": 9297,
          "length": 32
        }
      ],
      "4531": [
        {
          "start": 784,
          "length": 32
        },
        {
          "start": 2731,
          "length": 32
        },
        {
          "start": 4545,
          "length": 32
        },
        {
          "start": 4881,
          "length": 32
        }
      ],
      "762": [
        {
          "start": 254,
          "length": 32
        },
        {
          "start": 6583,
          "length": 32
        }
      ],
      "766": [
        {
          "start": 8457,
          "length": 32
        },
        {
          "start": 8629,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "_handleRoyaltyEnginePayout(address,uint256,uint256,address)": "9128c22c",
    "askForNFT(address,uint256)": "418f0656",
    "cancelAsk(address,uint256)": "40b80746",
    "createAsk(address,uint256,uint256,address,address,uint16)": "9e847108",
    "erc20TransferHelper()": "8f9d3251",
    "erc721TransferHelper()": "f7cd1d9b",
    "fillAsk(address,uint256,address,uint256,address)": "622dcbd7",
    "name()": "06fdde03",
    "registrar()": "2b20e397",
    "setAskPrice(address,uint256,uint256,address)": "b2007533",
    "setRoyaltyEngineAddress(address)": "b249bb30"
  },
  "ast": {
    "absolutePath": "contracts/modules/Asks/V1.1/AsksV1_1.sol",
    "id": 5073,
    "exportedSymbols": {
      "AsksV1_1": [
        5072
      ],
      "ERC721TransferHelper": [
        49952
      ],
      "FeePayoutSupportV1": [
        1068
      ],
      "IERC721": [
        55158
      ],
      "IncomingTransferSupportV1": [
        1173
      ],
      "ModuleNamingSupportV1": [
        1191
      ],
      "ReentrancyGuard": [
        56014
      ],
      "UniversalExchangeEventV1": [
        1361
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:17618:17",
    "nodes": [
      {
        "id": 4498,
        "nodeType": "PragmaDirective",
        "src": "36:23:17",
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 4500,
        "nodeType": "ImportDirective",
        "src": "61:84:17",
        "absolutePath": "node_modules/@rari-capital/solmate/src/utils/ReentrancyGuard.sol",
        "file": "@rari-capital/solmate/src/utils/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5073,
        "sourceUnit": 56015,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4499,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "69:15:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 4502,
        "nodeType": "ImportDirective",
        "src": "146:73:17",
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5073,
        "sourceUnit": 55159,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4501,
              "name": "IERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "154:7:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 4504,
        "nodeType": "ImportDirective",
        "src": "220:87:17",
        "absolutePath": "contracts/transferHelpers/ERC721TransferHelper.sol",
        "file": "../../../transferHelpers/ERC721TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5073,
        "sourceUnit": 49953,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4503,
              "name": "ERC721TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "228:20:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 4506,
        "nodeType": "ImportDirective",
        "src": "308:112:17",
        "absolutePath": "contracts/common/UniversalExchangeEvent/V1/UniversalExchangeEventV1.sol",
        "file": "../../../common/UniversalExchangeEvent/V1/UniversalExchangeEventV1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5073,
        "sourceUnit": 1362,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4505,
              "name": "UniversalExchangeEventV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "316:24:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 4508,
        "nodeType": "ImportDirective",
        "src": "421:115:17",
        "absolutePath": "contracts/common/IncomingTransferSupport/V1/IncomingTransferSupportV1.sol",
        "file": "../../../common/IncomingTransferSupport/V1/IncomingTransferSupportV1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5073,
        "sourceUnit": 1174,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4507,
              "name": "IncomingTransferSupportV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "429:25:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 4510,
        "nodeType": "ImportDirective",
        "src": "537:91:17",
        "absolutePath": "contracts/common/FeePayoutSupport/FeePayoutSupportV1.sol",
        "file": "../../../common/FeePayoutSupport/FeePayoutSupportV1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5073,
        "sourceUnit": 1069,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4509,
              "name": "FeePayoutSupportV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "545:18:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 4512,
        "nodeType": "ImportDirective",
        "src": "629:100:17",
        "absolutePath": "contracts/common/ModuleNamingSupport/ModuleNamingSupportV1.sol",
        "file": "../../../common/ModuleNamingSupport/ModuleNamingSupportV1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5073,
        "sourceUnit": 1192,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4511,
              "name": "ModuleNamingSupportV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "637:21:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5072,
        "nodeType": "ContractDefinition",
        "src": "947:16706:17",
        "nodes": [
          {
            "id": 4527,
            "nodeType": "VariableDeclaration",
            "src": "1165:45:17",
            "constant": true,
            "documentation": {
              "id": 4524,
              "nodeType": "StructuredDocumentation",
              "src": "1086:74:17",
              "text": "@dev The indicator to pass all remaining gas when paying out royalties"
            },
            "mutability": "constant",
            "name": "USE_ALL_GAS_FLAG",
            "nameLocation": "1190:16:17",
            "scope": 5072,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4525,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1165:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 4526,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1209:1:17",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "id": 4531,
            "nodeType": "VariableDeclaration",
            "src": "1266:58:17",
            "constant": false,
            "documentation": {
              "id": 4528,
              "nodeType": "StructuredDocumentation",
              "src": "1217:44:17",
              "text": "@notice The ZORA ERC-721 Transfer Helper"
            },
            "functionSelector": "f7cd1d9b",
            "mutability": "immutable",
            "name": "erc721TransferHelper",
            "nameLocation": "1304:20:17",
            "scope": 5072,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC721TransferHelper_$49952",
              "typeString": "contract ERC721TransferHelper"
            },
            "typeName": {
              "id": 4530,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4529,
                "name": "ERC721TransferHelper",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49952,
                "src": "1266:20:17"
              },
              "referencedDeclaration": 49952,
              "src": "1266:20:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721TransferHelper_$49952",
                "typeString": "contract ERC721TransferHelper"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4539,
            "nodeType": "VariableDeclaration",
            "src": "1449:60:17",
            "constant": false,
            "documentation": {
              "id": 4532,
              "nodeType": "StructuredDocumentation",
              "src": "1331:113:17",
              "text": "@notice The ask for a given NFT, if one exists\n @dev ERC-721 token contract => ERC-721 token ID => Ask"
            },
            "functionSelector": "418f0656",
            "mutability": "mutable",
            "name": "askForNFT",
            "nameLocation": "1500:9:17",
            "scope": 5072,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$4550_storage_$_$",
              "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask))"
            },
            "typeName": {
              "id": 4538,
              "keyType": {
                "id": 4533,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1457:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1449:43:17",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$4550_storage_$_$",
                "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask))"
              },
              "valueType": {
                "id": 4537,
                "keyType": {
                  "id": 4534,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1476:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "1468:23:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$4550_storage_$",
                  "typeString": "mapping(uint256 => struct AsksV1_1.Ask)"
                },
                "valueType": {
                  "id": 4536,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 4535,
                    "name": "Ask",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4550,
                    "src": "1487:3:17"
                  },
                  "referencedDeclaration": 4550,
                  "src": "1487:3:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                    "typeString": "struct AsksV1_1.Ask"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 4550,
            "nodeType": "StructDefinition",
            "src": "1922:165:17",
            "canonicalName": "AsksV1_1.Ask",
            "members": [
              {
                "constant": false,
                "id": 4541,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "1951:6:17",
                "nodeType": "VariableDeclaration",
                "scope": 4550,
                "src": "1943:14:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4540,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1943:7:17",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4543,
                "mutability": "mutable",
                "name": "sellerFundsRecipient",
                "nameLocation": "1975:20:17",
                "nodeType": "VariableDeclaration",
                "scope": 4550,
                "src": "1967:28:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4542,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1967:7:17",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4545,
                "mutability": "mutable",
                "name": "askCurrency",
                "nameLocation": "2013:11:17",
                "nodeType": "VariableDeclaration",
                "scope": 4550,
                "src": "2005:19:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4544,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2005:7:17",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4547,
                "mutability": "mutable",
                "name": "findersFeeBps",
                "nameLocation": "2041:13:17",
                "nodeType": "VariableDeclaration",
                "scope": 4550,
                "src": "2034:20:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 4546,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2034:6:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4549,
                "mutability": "mutable",
                "name": "askPrice",
                "nameLocation": "2072:8:17",
                "nodeType": "VariableDeclaration",
                "scope": 4550,
                "src": "2064:16:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4548,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2064:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Ask",
            "nameLocation": "1929:3:17",
            "scope": 5072,
            "visibility": "public"
          },
          {
            "id": 4560,
            "nodeType": "EventDefinition",
            "src": "2328:82:17",
            "anonymous": false,
            "documentation": {
              "id": 4551,
              "nodeType": "StructuredDocumentation",
              "src": "2093:230:17",
              "text": "@notice Emitted when an ask is created\n @param tokenContract The ERC-721 token address of the created ask\n @param tokenId The ERC-721 token ID of the created ask\n @param ask The metadata of the created ask"
            },
            "name": "AskCreated",
            "nameLocation": "2334:10:17",
            "parameters": {
              "id": 4559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4553,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "2361:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4560,
                  "src": "2345:29:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4552,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2345:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4555,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2392:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4560,
                  "src": "2376:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4554,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2376:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4558,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ask",
                  "nameLocation": "2405:3:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4560,
                  "src": "2401:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$4550_memory_ptr",
                    "typeString": "struct AsksV1_1.Ask"
                  },
                  "typeName": {
                    "id": 4557,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4556,
                      "name": "Ask",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4550,
                      "src": "2401:3:17"
                    },
                    "referencedDeclaration": 4550,
                    "src": "2401:3:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                      "typeString": "struct AsksV1_1.Ask"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2344:65:17"
            }
          },
          {
            "id": 4570,
            "nodeType": "EventDefinition",
            "src": "2657:87:17",
            "anonymous": false,
            "documentation": {
              "id": 4561,
              "nodeType": "StructuredDocumentation",
              "src": "2416:236:17",
              "text": "@notice Emitted when an ask price is updated\n @param tokenContract The ERC-721 token address of the updated ask\n @param tokenId The ERC-721 token ID of the updated ask\n @param ask The metadata of the updated ask"
            },
            "name": "AskPriceUpdated",
            "nameLocation": "2663:15:17",
            "parameters": {
              "id": 4569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4563,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "2695:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4570,
                  "src": "2679:29:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4562,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2679:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4565,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2726:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4570,
                  "src": "2710:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4564,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2710:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4568,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ask",
                  "nameLocation": "2739:3:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4570,
                  "src": "2735:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$4550_memory_ptr",
                    "typeString": "struct AsksV1_1.Ask"
                  },
                  "typeName": {
                    "id": 4567,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4566,
                      "name": "Ask",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4550,
                      "src": "2735:3:17"
                    },
                    "referencedDeclaration": 4550,
                    "src": "2735:3:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                      "typeString": "struct AsksV1_1.Ask"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2678:65:17"
            }
          },
          {
            "id": 4580,
            "nodeType": "EventDefinition",
            "src": "2989:83:17",
            "anonymous": false,
            "documentation": {
              "id": 4571,
              "nodeType": "StructuredDocumentation",
              "src": "2750:234:17",
              "text": "@notice Emitted when an ask is canceled\n @param tokenContract The ERC-721 token address of the canceled ask\n @param tokenId The ERC-721 token ID of the canceled ask\n @param ask The metadata of the canceled ask"
            },
            "name": "AskCanceled",
            "nameLocation": "2995:11:17",
            "parameters": {
              "id": 4579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4573,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "3023:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4580,
                  "src": "3007:29:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4572,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3007:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4575,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3054:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4580,
                  "src": "3038:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4574,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3038:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4578,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ask",
                  "nameLocation": "3067:3:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4580,
                  "src": "3063:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$4550_memory_ptr",
                    "typeString": "struct AsksV1_1.Ask"
                  },
                  "typeName": {
                    "id": 4577,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4576,
                      "name": "Ask",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4550,
                      "src": "3063:3:17"
                    },
                    "referencedDeclaration": 4550,
                    "src": "3063:3:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                      "typeString": "struct AsksV1_1.Ask"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3006:65:17"
            }
          },
          {
            "id": 4594,
            "nodeType": "EventDefinition",
            "src": "3431:120:17",
            "anonymous": false,
            "documentation": {
              "id": 4581,
              "nodeType": "StructuredDocumentation",
              "src": "3078:348:17",
              "text": "@notice Emitted when an ask is filled\n @param tokenContract The ERC-721 token address of the filled ask\n @param tokenId The ERC-721 token ID of the filled ask\n @param buyer The buyer address of the filled ask\n @param finder The address of finder who referred the ask\n @param ask The metadata of the filled ask"
            },
            "name": "AskFilled",
            "nameLocation": "3437:9:17",
            "parameters": {
              "id": 4593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4583,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "3463:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4594,
                  "src": "3447:29:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4582,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3447:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4585,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3494:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4594,
                  "src": "3478:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4584,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3478:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4587,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "3519:5:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4594,
                  "src": "3503:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4586,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3503:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4589,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "finder",
                  "nameLocation": "3534:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4594,
                  "src": "3526:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4588,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3526:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4592,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ask",
                  "nameLocation": "3546:3:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4594,
                  "src": "3542:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$4550_memory_ptr",
                    "typeString": "struct AsksV1_1.Ask"
                  },
                  "typeName": {
                    "id": 4591,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4590,
                      "name": "Ask",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4550,
                      "src": "3542:3:17"
                    },
                    "referencedDeclaration": 4550,
                    "src": "3542:3:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                      "typeString": "struct AsksV1_1.Ask"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3446:104:17"
            }
          },
          {
            "id": 4633,
            "nodeType": "FunctionDefinition",
            "src": "3902:524:17",
            "body": {
              "id": 4632,
              "nodeType": "Block",
              "src": "4343:83:17",
              "statements": [
                {
                  "expression": {
                    "id": 4630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4626,
                      "name": "erc721TransferHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4531,
                      "src": "4353:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721TransferHelper_$49952",
                        "typeString": "contract ERC721TransferHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4628,
                          "name": "_erc721TransferHelper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4599,
                          "src": "4397:21:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4627,
                        "name": "ERC721TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49952,
                        "src": "4376:20:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721TransferHelper_$49952_$",
                          "typeString": "type(contract ERC721TransferHelper)"
                        }
                      },
                      "id": 4629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4376:43:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721TransferHelper_$49952",
                        "typeString": "contract ERC721TransferHelper"
                      }
                    },
                    "src": "4353:66:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721TransferHelper_$49952",
                      "typeString": "contract ERC721TransferHelper"
                    }
                  },
                  "id": 4631,
                  "nodeType": "ExpressionStatement",
                  "src": "4353:66:17"
                }
              ]
            },
            "documentation": {
              "id": 4595,
              "nodeType": "StructuredDocumentation",
              "src": "3557:340:17",
              "text": "@param _erc20TransferHelper The ZORA ERC-20 Transfer Helper address\n @param _erc721TransferHelper The ZORA ERC-721 Transfer Helper address\n @param _royaltyEngine The Manifold Royalty Engine address\n @param _protocolFeeSettings The ZoraProtocolFeeSettingsV1 address\n @param _wethAddress The WETH token address"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 4608,
                    "name": "_erc20TransferHelper",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4597,
                    "src": "4131:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 4609,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 4607,
                  "name": "IncomingTransferSupportV1",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1173,
                  "src": "4105:25:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "4105:47:17"
              },
              {
                "arguments": [
                  {
                    "id": 4611,
                    "name": "_royaltyEngine",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4601,
                    "src": "4180:14:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 4612,
                    "name": "_protocolFeeSettings",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4603,
                    "src": "4196:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 4613,
                    "name": "_wethAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4605,
                    "src": "4218:12:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 4615,
                                "name": "_erc721TransferHelper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4599,
                                "src": "4253:21:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 4614,
                              "name": "ERC721TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49952,
                              "src": "4232:20:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721TransferHelper_$49952_$",
                                "typeString": "type(contract ERC721TransferHelper)"
                              }
                            },
                            "id": 4616,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4232:43:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721TransferHelper_$49952",
                              "typeString": "contract ERC721TransferHelper"
                            }
                          },
                          "id": 4617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ZMM",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49701,
                          "src": "4232:47:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ZoraModuleManager_$379_$",
                            "typeString": "function () view external returns (contract ZoraModuleManager)"
                          }
                        },
                        "id": 4618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4232:49:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                          "typeString": "contract ZoraModuleManager"
                        }
                      },
                      "id": 4619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registrar",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "4232:59:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 4620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4232:61:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 4621,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 4610,
                  "name": "FeePayoutSupportV1",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1068,
                  "src": "4161:18:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "4161:133:17"
              },
              {
                "arguments": [
                  {
                    "hexValue": "41736b733a2076312e31",
                    "id": 4623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4325:12:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2b85543abc64e3ede7d9f29fca8002c6858bcd6cd65cc034248bdc99d1add94e",
                      "typeString": "literal_string \"Asks: v1.1\""
                    },
                    "value": "Asks: v1.1"
                  }
                ],
                "id": 4624,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 4622,
                  "name": "ModuleNamingSupportV1",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1191,
                  "src": "4303:21:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "4303:35:17"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 4606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4597,
                  "mutability": "mutable",
                  "name": "_erc20TransferHelper",
                  "nameLocation": "3931:20:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4633,
                  "src": "3923:28:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4596,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3923:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4599,
                  "mutability": "mutable",
                  "name": "_erc721TransferHelper",
                  "nameLocation": "3969:21:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4633,
                  "src": "3961:29:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4598,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3961:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4601,
                  "mutability": "mutable",
                  "name": "_royaltyEngine",
                  "nameLocation": "4008:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4633,
                  "src": "4000:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4000:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4603,
                  "mutability": "mutable",
                  "name": "_protocolFeeSettings",
                  "nameLocation": "4040:20:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4633,
                  "src": "4032:28:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4032:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4605,
                  "mutability": "mutable",
                  "name": "_wethAddress",
                  "nameLocation": "4078:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4633,
                  "src": "4070:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4604,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4070:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3913:183:17"
            },
            "returnParameters": {
              "id": 4625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4343:0:17"
            },
            "scope": 5072,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4760,
            "nodeType": "FunctionDefinition",
            "src": "6414:1504:17",
            "body": {
              "id": 4759,
              "nodeType": "Block",
              "src": "6646:1272:17",
              "statements": [
                {
                  "assignments": [
                    4652
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4652,
                      "mutability": "mutable",
                      "name": "tokenOwner",
                      "nameLocation": "6664:10:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 4759,
                      "src": "6656:18:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4651,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6656:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4659,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4657,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4638,
                        "src": "6709:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4654,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4636,
                            "src": "6685:14:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4653,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55158,
                          "src": "6677:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$55158_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 4655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6677:23:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$55158",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 4656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55091,
                      "src": "6677:31:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 4658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6677:41:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6656:62:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 4661,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6750:3:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4662,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6750:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 4663,
                            "name": "tokenOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4652,
                            "src": "6764:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6750:24:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 4669,
                              "name": "tokenOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4652,
                              "src": "6819:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 4670,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6831:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4671,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6831:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4666,
                                  "name": "_tokenContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4636,
                                  "src": "6786:14:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4665,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55158,
                                "src": "6778:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$55158_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 4667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6778:23:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$55158",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 4668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isApprovedForAll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55157,
                            "src": "6778:40:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view external returns (bool)"
                            }
                          },
                          "id": 4672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6778:64:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6750:92:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63726561746541736b206d75737420626520746f6b656e206f776e6572206f72206f70657261746f72",
                        "id": 4674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6856:43:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76f3775302ef6a1b6072c43364ff9712358ff85c060c88bfeb761d00493b16c8",
                          "typeString": "literal_string \"createAsk must be token owner or operator\""
                        },
                        "value": "createAsk must be token owner or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76f3775302ef6a1b6072c43364ff9712358ff85c060c88bfeb761d00493b16c8",
                          "typeString": "literal_string \"createAsk must be token owner or operator\""
                        }
                      ],
                      "id": 4660,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6729:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6729:180:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4676,
                  "nodeType": "ExpressionStatement",
                  "src": "6729:180:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 4680,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6965:3:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6965:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 4678,
                            "name": "erc721TransferHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4531,
                            "src": "6927:20:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721TransferHelper_$49952",
                              "typeString": "contract ERC721TransferHelper"
                            }
                          },
                          "id": 4679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isModuleApproved",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49754,
                          "src": "6927:37:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 4682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6927:49:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63726561746541736b206d75737420617070726f76652041736b735631206d6f64756c65",
                        "id": 4683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6978:38:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_44fd9c8827e7f6000f5768e0c611c9eccb388ad62b44d91721f7f8a0d5c99b3d",
                          "typeString": "literal_string \"createAsk must approve AsksV1 module\""
                        },
                        "value": "createAsk must approve AsksV1 module"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_44fd9c8827e7f6000f5768e0c611c9eccb388ad62b44d91721f7f8a0d5c99b3d",
                          "typeString": "literal_string \"createAsk must approve AsksV1 module\""
                        }
                      ],
                      "id": 4677,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6919:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6919:98:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4685,
                  "nodeType": "ExpressionStatement",
                  "src": "6919:98:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4691,
                            "name": "tokenOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4652,
                            "src": "7089:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 4694,
                                "name": "erc721TransferHelper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4531,
                                "src": "7109:20:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC721TransferHelper_$49952",
                                  "typeString": "contract ERC721TransferHelper"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC721TransferHelper_$49952",
                                  "typeString": "contract ERC721TransferHelper"
                                }
                              ],
                              "id": 4693,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7101:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4692,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7101:7:17",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4695,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7101:29:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 4688,
                                "name": "_tokenContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4636,
                                "src": "7056:14:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 4687,
                              "name": "IERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55158,
                              "src": "7048:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC721_$55158_$",
                                "typeString": "type(contract IERC721)"
                              }
                            },
                            "id": 4689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7048:23:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC721_$55158",
                              "typeString": "contract IERC721"
                            }
                          },
                          "id": 4690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isApprovedForAll",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55157,
                          "src": "7048:40:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view external returns (bool)"
                          }
                        },
                        "id": 4696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7048:83:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63726561746541736b206d75737420617070726f7665204552433732315472616e7366657248656c706572206173206f70657261746f72",
                        "id": 4697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7145:57:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e5eb361bfb7650ae7ad7a6075415b3c1749f8c40fbb7c6e8eafb9a0407c6653d",
                          "typeString": "literal_string \"createAsk must approve ERC721TransferHelper as operator\""
                        },
                        "value": "createAsk must approve ERC721TransferHelper as operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e5eb361bfb7650ae7ad7a6075415b3c1749f8c40fbb7c6e8eafb9a0407c6653d",
                          "typeString": "literal_string \"createAsk must approve ERC721TransferHelper as operator\""
                        }
                      ],
                      "id": 4686,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7027:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7027:185:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4699,
                  "nodeType": "ExpressionStatement",
                  "src": "7027:185:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 4703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4701,
                          "name": "_findersFeeBps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4646,
                          "src": "7230:14:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3130303030",
                          "id": 4702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7248:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "7230:23:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63726561746541736b2066696e646572732066656520627073206d757374206265206c657373207468616e206f7220657175616c20746f203130303030",
                        "id": 4704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7255:63:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_02d05c4af9eb1aaf1505f4524d7ee3aadf36d59a7834682bc51aeaf660de430b",
                          "typeString": "literal_string \"createAsk finders fee bps must be less than or equal to 10000\""
                        },
                        "value": "createAsk finders fee bps must be less than or equal to 10000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_02d05c4af9eb1aaf1505f4524d7ee3aadf36d59a7834682bc51aeaf660de430b",
                          "typeString": "literal_string \"createAsk finders fee bps must be less than or equal to 10000\""
                        }
                      ],
                      "id": 4700,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7222:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7222:97:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4706,
                  "nodeType": "ExpressionStatement",
                  "src": "7222:97:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4708,
                          "name": "_sellerFundsRecipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4644,
                          "src": "7337:21:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4711,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7370:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4710,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7362:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4709,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7362:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7362:10:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7337:35:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63726561746541736b206d7573742073706563696679205f73656c6c657246756e6473526563697069656e74",
                        "id": 4714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7374:46:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40ea1cf3f6e2a04a88c44fa3e6b208588ce3c59d3e4eca53fa7c318d3d8aabeb",
                          "typeString": "literal_string \"createAsk must specify _sellerFundsRecipient\""
                        },
                        "value": "createAsk must specify _sellerFundsRecipient"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40ea1cf3f6e2a04a88c44fa3e6b208588ce3c59d3e4eca53fa7c318d3d8aabeb",
                          "typeString": "literal_string \"createAsk must specify _sellerFundsRecipient\""
                        }
                      ],
                      "id": 4707,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7329:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7329:92:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4716,
                  "nodeType": "ExpressionStatement",
                  "src": "7329:92:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 4717,
                            "name": "askForNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4539,
                            "src": "7436:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$4550_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                            }
                          },
                          "id": 4719,
                          "indexExpression": {
                            "id": 4718,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4636,
                            "src": "7446:14:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7436:25:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$4550_storage_$",
                            "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                          }
                        },
                        "id": 4721,
                        "indexExpression": {
                          "id": 4720,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4638,
                          "src": "7462:8:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7436:35:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$4550_storage",
                          "typeString": "struct AsksV1_1.Ask storage ref"
                        }
                      },
                      "id": 4722,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4541,
                      "src": "7436:42:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 4725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7490:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7482:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4723,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7482:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7482:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7436:56:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4734,
                  "nodeType": "IfStatement",
                  "src": "7432:123:17",
                  "trueBody": {
                    "id": 4733,
                    "nodeType": "Block",
                    "src": "7494:61:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4729,
                              "name": "_tokenContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4636,
                              "src": "7519:14:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4730,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4638,
                              "src": "7535:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4728,
                            "name": "_cancelAsk",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5071,
                            "src": "7508:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 4731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7508:36:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4732,
                        "nodeType": "ExpressionStatement",
                        "src": "7508:36:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 4747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4735,
                          "name": "askForNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4539,
                          "src": "7565:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$4550_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                          }
                        },
                        "id": 4738,
                        "indexExpression": {
                          "id": 4736,
                          "name": "_tokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4636,
                          "src": "7575:14:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7565:25:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$4550_storage_$",
                          "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                        }
                      },
                      "id": 4739,
                      "indexExpression": {
                        "id": 4737,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4638,
                        "src": "7591:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7565:35:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$4550_storage",
                        "typeString": "struct AsksV1_1.Ask storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4741,
                          "name": "tokenOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4652,
                          "src": "7629:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 4742,
                          "name": "_sellerFundsRecipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4644,
                          "src": "7675:21:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 4743,
                          "name": "_askCurrency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4642,
                          "src": "7723:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 4744,
                          "name": "_findersFeeBps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4646,
                          "src": "7764:14:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "id": 4745,
                          "name": "_askPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4640,
                          "src": "7802:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 4740,
                        "name": "Ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4550,
                        "src": "7603:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Ask_$4550_storage_ptr_$",
                          "typeString": "type(struct AsksV1_1.Ask storage pointer)"
                        }
                      },
                      "id": 4746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "seller",
                        "sellerFundsRecipient",
                        "askCurrency",
                        "findersFeeBps",
                        "askPrice"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "7603:219:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$4550_memory_ptr",
                        "typeString": "struct AsksV1_1.Ask memory"
                      }
                    },
                    "src": "7565:257:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$4550_storage",
                      "typeString": "struct AsksV1_1.Ask storage ref"
                    }
                  },
                  "id": 4748,
                  "nodeType": "ExpressionStatement",
                  "src": "7565:257:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4750,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4636,
                        "src": "7849:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4751,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4638,
                        "src": "7865:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 4752,
                            "name": "askForNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4539,
                            "src": "7875:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$4550_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                            }
                          },
                          "id": 4754,
                          "indexExpression": {
                            "id": 4753,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4636,
                            "src": "7885:14:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7875:25:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$4550_storage_$",
                            "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                          }
                        },
                        "id": 4756,
                        "indexExpression": {
                          "id": 4755,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4638,
                          "src": "7901:8:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7875:35:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$4550_storage",
                          "typeString": "struct AsksV1_1.Ask storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Ask_$4550_storage",
                          "typeString": "struct AsksV1_1.Ask storage ref"
                        }
                      ],
                      "id": 4749,
                      "name": "AskCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4560,
                      "src": "7838:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Ask_$4550_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,struct AsksV1_1.Ask memory)"
                      }
                    },
                    "id": 4757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7838:73:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4758,
                  "nodeType": "EmitStatement",
                  "src": "7833:78:17"
                }
              ]
            },
            "documentation": {
              "id": 4634,
              "nodeType": "StructuredDocumentation",
              "src": "5881:528:17",
              "text": "@notice Creates the ask for a given NFT\n @param _tokenContract The address of the ERC-721 token to be sold\n @param _tokenId The ID of the ERC-721 token to be sold\n @param _askPrice The price to fill the ask\n @param _askCurrency The address of the ERC-20 token required to fill, or address(0) for ETH\n @param _sellerFundsRecipient The address to send funds once the ask is filled\n @param _findersFeeBps The bps of the ask price (post-royalties) to be sent to the referrer of the sale"
            },
            "functionSelector": "9e847108",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4649,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4648,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 56013,
                  "src": "6633:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "6633:12:17"
              }
            ],
            "name": "createAsk",
            "nameLocation": "6423:9:17",
            "parameters": {
              "id": 4647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4636,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "6450:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4760,
                  "src": "6442:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4635,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6442:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4638,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "6482:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4760,
                  "src": "6474:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4637,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6474:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4640,
                  "mutability": "mutable",
                  "name": "_askPrice",
                  "nameLocation": "6508:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4760,
                  "src": "6500:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4639,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6500:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4642,
                  "mutability": "mutable",
                  "name": "_askCurrency",
                  "nameLocation": "6535:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4760,
                  "src": "6527:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4641,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6527:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4644,
                  "mutability": "mutable",
                  "name": "_sellerFundsRecipient",
                  "nameLocation": "6565:21:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4760,
                  "src": "6557:29:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4643,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6557:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4646,
                  "mutability": "mutable",
                  "name": "_findersFeeBps",
                  "nameLocation": "6603:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4760,
                  "src": "6596:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 4645,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "6596:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6432:191:17"
            },
            "returnParameters": {
              "id": 4650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6646:0:17"
            },
            "scope": 5072,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4811,
            "nodeType": "FunctionDefinition",
            "src": "8984:445:17",
            "body": {
              "id": 4810,
              "nodeType": "Block",
              "src": "9148:281:17",
              "statements": [
                {
                  "assignments": [
                    4776
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4776,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "9170:3:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 4810,
                      "src": "9158:15:17",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                        "typeString": "struct AsksV1_1.Ask"
                      },
                      "typeName": {
                        "id": 4775,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4774,
                          "name": "Ask",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4550,
                          "src": "9158:3:17"
                        },
                        "referencedDeclaration": 4550,
                        "src": "9158:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4782,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4777,
                        "name": "askForNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4539,
                        "src": "9176:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$4550_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                        }
                      },
                      "id": 4779,
                      "indexExpression": {
                        "id": 4778,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4763,
                        "src": "9186:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9176:25:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$4550_storage_$",
                        "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                      }
                    },
                    "id": 4781,
                    "indexExpression": {
                      "id": 4780,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4765,
                      "src": "9202:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9176:35:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$4550_storage",
                      "typeString": "struct AsksV1_1.Ask storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9158:53:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4784,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4776,
                            "src": "9230:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                              "typeString": "struct AsksV1_1.Ask storage pointer"
                            }
                          },
                          "id": 4785,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4541,
                          "src": "9230:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 4786,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9244:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9244:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9230:24:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "73657441736b5072696365206d7573742062652073656c6c6572",
                        "id": 4789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9256:28:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5aaa95eb37ed15cd92b36e33cf2aface92feb1b6b6405eecbe0db233e41b5098",
                          "typeString": "literal_string \"setAskPrice must be seller\""
                        },
                        "value": "setAskPrice must be seller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5aaa95eb37ed15cd92b36e33cf2aface92feb1b6b6405eecbe0db233e41b5098",
                          "typeString": "literal_string \"setAskPrice must be seller\""
                        }
                      ],
                      "id": 4783,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9222:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9222:63:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4791,
                  "nodeType": "ExpressionStatement",
                  "src": "9222:63:17"
                },
                {
                  "expression": {
                    "id": 4796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 4792,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4776,
                        "src": "9296:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask storage pointer"
                        }
                      },
                      "id": 4794,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "askPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4549,
                      "src": "9296:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4795,
                      "name": "_askPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4767,
                      "src": "9311:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9296:24:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4797,
                  "nodeType": "ExpressionStatement",
                  "src": "9296:24:17"
                },
                {
                  "expression": {
                    "id": 4802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 4798,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4776,
                        "src": "9330:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask storage pointer"
                        }
                      },
                      "id": 4800,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "askCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4545,
                      "src": "9330:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4801,
                      "name": "_askCurrency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4769,
                      "src": "9348:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9330:30:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4803,
                  "nodeType": "ExpressionStatement",
                  "src": "9330:30:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4805,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4763,
                        "src": "9392:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4806,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4765,
                        "src": "9408:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4807,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4776,
                        "src": "9418:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask storage pointer"
                        }
                      ],
                      "id": 4804,
                      "name": "AskPriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4570,
                      "src": "9376:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Ask_$4550_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,struct AsksV1_1.Ask memory)"
                      }
                    },
                    "id": 4808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9376:46:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4809,
                  "nodeType": "EmitStatement",
                  "src": "9371:51:17"
                }
              ]
            },
            "documentation": {
              "id": 4761,
              "nodeType": "StructuredDocumentation",
              "src": "8669:310:17",
              "text": "@notice Updates the ask price for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The ID of the ERC-721 token\n @param _askPrice The ask price to set\n @param _askCurrency The address of the ERC-20 token required to fill, or address(0) for ETH"
            },
            "functionSelector": "b2007533",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4772,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4771,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 56013,
                  "src": "9135:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "9135:12:17"
              }
            ],
            "name": "setAskPrice",
            "nameLocation": "8993:11:17",
            "parameters": {
              "id": 4770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4763,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "9022:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4811,
                  "src": "9014:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4762,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9014:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4765,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "9054:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4811,
                  "src": "9046:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4764,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9046:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4767,
                  "mutability": "mutable",
                  "name": "_askPrice",
                  "nameLocation": "9080:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4811,
                  "src": "9072:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4766,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9072:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4769,
                  "mutability": "mutable",
                  "name": "_askCurrency",
                  "nameLocation": "9107:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4811,
                  "src": "9099:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9099:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9004:121:17"
            },
            "returnParameters": {
              "id": 4773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9148:0:17"
            },
            "scope": 5072,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4868,
            "nodeType": "FunctionDefinition",
            "src": "10333:506:17",
            "body": {
              "id": 4867,
              "nodeType": "Block",
              "src": "10416:423:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 4822,
                                "name": "askForNFT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4539,
                                "src": "10434:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$4550_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                                }
                              },
                              "id": 4824,
                              "indexExpression": {
                                "id": 4823,
                                "name": "_tokenContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4814,
                                "src": "10444:14:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10434:25:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$4550_storage_$",
                                "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                              }
                            },
                            "id": 4826,
                            "indexExpression": {
                              "id": 4825,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4816,
                              "src": "10460:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10434:35:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ask_$4550_storage",
                              "typeString": "struct AsksV1_1.Ask storage ref"
                            }
                          },
                          "id": 4827,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4541,
                          "src": "10434:42:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4830,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10488:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10480:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4828,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10480:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10480:10:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10434:56:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e63656c41736b2061736b20646f65736e2774206578697374",
                        "id": 4833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10492:29:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_572d1b2a2f7313fc2048acd6e7df42d3f8003c71eccd5406ada1f151f3ccb0da",
                          "typeString": "literal_string \"cancelAsk ask doesn't exist\""
                        },
                        "value": "cancelAsk ask doesn't exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_572d1b2a2f7313fc2048acd6e7df42d3f8003c71eccd5406ada1f151f3ccb0da",
                          "typeString": "literal_string \"cancelAsk ask doesn't exist\""
                        }
                      ],
                      "id": 4821,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10426:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10426:96:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4835,
                  "nodeType": "ExpressionStatement",
                  "src": "10426:96:17"
                },
                {
                  "assignments": [
                    4837
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4837,
                      "mutability": "mutable",
                      "name": "tokenOwner",
                      "nameLocation": "10541:10:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 4867,
                      "src": "10533:18:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4836,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10533:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4844,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4842,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4816,
                        "src": "10586:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4839,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4814,
                            "src": "10562:14:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4838,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55158,
                          "src": "10554:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$55158_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 4840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10554:23:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$55158",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 4841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55091,
                      "src": "10554:31:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 4843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10554:41:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10533:62:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 4846,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10626:3:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4847,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10626:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 4848,
                            "name": "tokenOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4837,
                            "src": "10640:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10626:24:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 4854,
                              "name": "tokenOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4837,
                              "src": "10695:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 4855,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10707:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10707:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4851,
                                  "name": "_tokenContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4814,
                                  "src": "10662:14:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4850,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55158,
                                "src": "10654:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$55158_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 4852,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10654:23:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$55158",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 4853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isApprovedForAll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55157,
                            "src": "10654:40:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view external returns (bool)"
                            }
                          },
                          "id": 4857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10654:64:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10626:92:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e63656c41736b206d75737420626520746f6b656e206f776e6572206f72206f70657261746f72",
                        "id": 4859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10732:43:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2df7a268eecab82d8ba18e2eaaefbb525001a789bc8aa366ae71fed1a27cd628",
                          "typeString": "literal_string \"cancelAsk must be token owner or operator\""
                        },
                        "value": "cancelAsk must be token owner or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2df7a268eecab82d8ba18e2eaaefbb525001a789bc8aa366ae71fed1a27cd628",
                          "typeString": "literal_string \"cancelAsk must be token owner or operator\""
                        }
                      ],
                      "id": 4845,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10605:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10605:180:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4861,
                  "nodeType": "ExpressionStatement",
                  "src": "10605:180:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4863,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4814,
                        "src": "10807:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4864,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4816,
                        "src": "10823:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4862,
                      "name": "_cancelAsk",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5071,
                      "src": "10796:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10796:36:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4866,
                  "nodeType": "ExpressionStatement",
                  "src": "10796:36:17"
                }
              ]
            },
            "documentation": {
              "id": 4812,
              "nodeType": "StructuredDocumentation",
              "src": "10170:158:17",
              "text": "@notice Cancels the ask for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The ID of the ERC-721 token"
            },
            "functionSelector": "40b80746",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4819,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4818,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 56013,
                  "src": "10403:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "10403:12:17"
              }
            ],
            "name": "cancelAsk",
            "nameLocation": "10342:9:17",
            "parameters": {
              "id": 4817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4814,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "10360:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4868,
                  "src": "10352:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4813,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10352:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4816,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "10384:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4868,
                  "src": "10376:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4815,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10376:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10351:42:17"
            },
            "returnParameters": {
              "id": 4820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10416:0:17"
            },
            "scope": 5072,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5045,
            "nodeType": "FunctionDefinition",
            "src": "15149:2115:17",
            "body": {
              "id": 5044,
              "nodeType": "Block",
              "src": "15345:1919:17",
              "statements": [
                {
                  "assignments": [
                    4886
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4886,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "15367:3:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 5044,
                      "src": "15355:15:17",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                        "typeString": "struct AsksV1_1.Ask"
                      },
                      "typeName": {
                        "id": 4885,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4884,
                          "name": "Ask",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4550,
                          "src": "15355:3:17"
                        },
                        "referencedDeclaration": 4550,
                        "src": "15355:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4892,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4887,
                        "name": "askForNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4539,
                        "src": "15373:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$4550_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                        }
                      },
                      "id": 4889,
                      "indexExpression": {
                        "id": 4888,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4871,
                        "src": "15383:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "15373:25:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$4550_storage_$",
                        "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                      }
                    },
                    "id": 4891,
                    "indexExpression": {
                      "id": 4890,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4873,
                      "src": "15399:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15373:35:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$4550_storage",
                      "typeString": "struct AsksV1_1.Ask storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15355:53:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4894,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4886,
                            "src": "15427:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                              "typeString": "struct AsksV1_1.Ask storage pointer"
                            }
                          },
                          "id": 4895,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4541,
                          "src": "15427:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4898,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15449:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15441:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4896,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15441:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15441:10:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15427:24:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66696c6c41736b206d757374206265206163746976652061736b",
                        "id": 4901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15453:28:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b7525583ed2f05aae1b37c58ae4e40d6a563b291a62c0e8fdcc5fafc3c81cd0",
                          "typeString": "literal_string \"fillAsk must be active ask\""
                        },
                        "value": "fillAsk must be active ask"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3b7525583ed2f05aae1b37c58ae4e40d6a563b291a62c0e8fdcc5fafc3c81cd0",
                          "typeString": "literal_string \"fillAsk must be active ask\""
                        }
                      ],
                      "id": 4893,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15419:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15419:63:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4903,
                  "nodeType": "ExpressionStatement",
                  "src": "15419:63:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4905,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4886,
                            "src": "15500:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                              "typeString": "struct AsksV1_1.Ask storage pointer"
                            }
                          },
                          "id": 4906,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "askCurrency",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4545,
                          "src": "15500:15:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 4907,
                          "name": "_fillCurrency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4875,
                          "src": "15519:13:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15500:32:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66696c6c41736b205f66696c6c43757272656e6379206d757374206d617463682061736b2063757272656e6379",
                        "id": 4909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15534:47:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f06f8528b7ab0a3721d2dd680d757991f9013f6273f2bf38719ce74b747b060b",
                          "typeString": "literal_string \"fillAsk _fillCurrency must match ask currency\""
                        },
                        "value": "fillAsk _fillCurrency must match ask currency"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f06f8528b7ab0a3721d2dd680d757991f9013f6273f2bf38719ce74b747b060b",
                          "typeString": "literal_string \"fillAsk _fillCurrency must match ask currency\""
                        }
                      ],
                      "id": 4904,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15492:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15492:90:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4911,
                  "nodeType": "ExpressionStatement",
                  "src": "15492:90:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4913,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4886,
                            "src": "15600:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                              "typeString": "struct AsksV1_1.Ask storage pointer"
                            }
                          },
                          "id": 4914,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "askPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4549,
                          "src": "15600:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 4915,
                          "name": "_fillAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4877,
                          "src": "15616:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15600:27:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66696c6c41736b205f66696c6c416d6f756e74206d757374206d617463682061736b20616d6f756e74",
                        "id": 4917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15629:43:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5a42b00d663c578f77a4b1cca60d3fbaedeae5be520116e7a7472cc3986a127e",
                          "typeString": "literal_string \"fillAsk _fillAmount must match ask amount\""
                        },
                        "value": "fillAsk _fillAmount must match ask amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5a42b00d663c578f77a4b1cca60d3fbaedeae5be520116e7a7472cc3986a127e",
                          "typeString": "literal_string \"fillAsk _fillAmount must match ask amount\""
                        }
                      ],
                      "id": 4912,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15592:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15592:81:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4919,
                  "nodeType": "ExpressionStatement",
                  "src": "15592:81:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4921,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4886,
                          "src": "15782:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 4922,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "askPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4549,
                        "src": "15782:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 4923,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4886,
                          "src": "15796:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 4924,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "askCurrency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4545,
                        "src": "15796:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4920,
                      "name": "_handleIncomingTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1172,
                      "src": "15758:23:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 4925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15758:54:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4926,
                  "nodeType": "ExpressionStatement",
                  "src": "15758:54:17"
                },
                {
                  "assignments": [
                    4928,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4928,
                      "mutability": "mutable",
                      "name": "remainingProfit",
                      "nameLocation": "15901:15:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 5044,
                      "src": "15893:23:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4927,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15893:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 4938,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4930,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4871,
                        "src": "15943:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4931,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4873,
                        "src": "15959:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 4932,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4886,
                          "src": "15969:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 4933,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "askPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4549,
                        "src": "15969:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 4934,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4886,
                          "src": "15983:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 4935,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "askCurrency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4545,
                        "src": "15983:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4936,
                        "name": "USE_ALL_GAS_FLAG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4527,
                        "src": "16000:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4929,
                      "name": "_handleRoyaltyPayout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 955,
                      "src": "15922:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_bool_$",
                        "typeString": "function (address,uint256,uint256,address,uint256) returns (uint256,bool)"
                      }
                    },
                    "id": 4937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15922:95:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15892:125:17"
                },
                {
                  "expression": {
                    "id": 4945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4939,
                      "name": "remainingProfit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4928,
                      "src": "16068:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4941,
                          "name": "remainingProfit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4928,
                          "src": "16111:15:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 4942,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4886,
                            "src": "16128:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                              "typeString": "struct AsksV1_1.Ask storage pointer"
                            }
                          },
                          "id": 4943,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "askCurrency",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4545,
                          "src": "16128:15:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4940,
                        "name": "_handleProtocolFeePayout",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 895,
                        "src": "16086:24:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (uint256,address) returns (uint256)"
                        }
                      },
                      "id": 4944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16086:58:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16068:76:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4946,
                  "nodeType": "ExpressionStatement",
                  "src": "16068:76:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4947,
                      "name": "_finder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4879,
                      "src": "16197:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 4950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16216:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "16208:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4948,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16208:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16208:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "16197:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4978,
                  "nodeType": "IfStatement",
                  "src": "16193:272:17",
                  "trueBody": {
                    "id": 4977,
                    "nodeType": "Block",
                    "src": "16220:245:17",
                    "statements": [
                      {
                        "assignments": [
                          4954
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4954,
                            "mutability": "mutable",
                            "name": "findersFee",
                            "nameLocation": "16242:10:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 4977,
                            "src": "16234:18:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4953,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16234:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4962,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4958,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 4955,
                                  "name": "remainingProfit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4928,
                                  "src": "16256:15:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "expression": {
                                    "id": 4956,
                                    "name": "ask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4886,
                                    "src": "16274:3:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                                      "typeString": "struct AsksV1_1.Ask storage pointer"
                                    }
                                  },
                                  "id": 4957,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "findersFeeBps",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4547,
                                  "src": "16274:17:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "16256:35:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 4959,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "16255:37:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "3130303030",
                            "id": 4960,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16295:5:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "10000"
                          },
                          "src": "16255:45:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16234:66:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4964,
                              "name": "_finder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4879,
                              "src": "16338:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4965,
                              "name": "findersFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4954,
                              "src": "16347:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 4966,
                                "name": "ask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4886,
                                "src": "16359:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                                  "typeString": "struct AsksV1_1.Ask storage pointer"
                                }
                              },
                              "id": 4967,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "askCurrency",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4545,
                              "src": "16359:15:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4968,
                              "name": "USE_ALL_GAS_FLAG",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4527,
                              "src": "16376:16:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4963,
                            "name": "_handleOutgoingTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1336,
                            "src": "16314:23:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,address,uint256)"
                            }
                          },
                          "id": 4969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16314:79:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4970,
                        "nodeType": "ExpressionStatement",
                        "src": "16314:79:17"
                      },
                      {
                        "expression": {
                          "id": 4975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4971,
                            "name": "remainingProfit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4928,
                            "src": "16408:15:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4972,
                              "name": "remainingProfit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4928,
                              "src": "16426:15:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 4973,
                              "name": "findersFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4954,
                              "src": "16444:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "16426:28:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16408:46:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4976,
                        "nodeType": "ExpressionStatement",
                        "src": "16408:46:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4980,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4886,
                          "src": "16550:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 4981,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sellerFundsRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4543,
                        "src": "16550:24:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4982,
                        "name": "remainingProfit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4928,
                        "src": "16576:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 4983,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4886,
                          "src": "16593:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 4984,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "askCurrency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4545,
                        "src": "16593:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4985,
                        "name": "USE_ALL_GAS_FLAG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4527,
                        "src": "16610:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4979,
                      "name": "_handleOutgoingTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1336,
                      "src": "16526:23:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 4986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16526:101:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4987,
                  "nodeType": "ExpressionStatement",
                  "src": "16526:101:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4991,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4871,
                        "src": "16705:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4992,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4886,
                          "src": "16721:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 4993,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4541,
                        "src": "16721:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4994,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "16733:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16733:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4996,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4873,
                        "src": "16745:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4988,
                        "name": "erc721TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4531,
                        "src": "16671:20:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721TransferHelper_$49952",
                          "typeString": "contract ERC721TransferHelper"
                        }
                      },
                      "id": 4990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49951,
                      "src": "16671:33:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256) external"
                      }
                    },
                    "id": 4997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16671:83:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4998,
                  "nodeType": "ExpressionStatement",
                  "src": "16671:83:17"
                },
                {
                  "assignments": [
                    5001
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5001,
                      "mutability": "mutable",
                      "name": "userAExchangeDetails",
                      "nameLocation": "16788:20:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 5044,
                      "src": "16765:43:17",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeDetails_$1347_memory_ptr",
                        "typeString": "struct UniversalExchangeEventV1.ExchangeDetails"
                      },
                      "typeName": {
                        "id": 5000,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4999,
                          "name": "ExchangeDetails",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1347,
                          "src": "16765:15:17"
                        },
                        "referencedDeclaration": 1347,
                        "src": "16765:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeDetails_$1347_storage_ptr",
                          "typeString": "struct UniversalExchangeEventV1.ExchangeDetails"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5007,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5003,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4871,
                        "src": "16843:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5004,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4873,
                        "src": "16868:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 5005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16886:1:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 5002,
                      "name": "ExchangeDetails",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1347,
                      "src": "16811:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExchangeDetails_$1347_storage_ptr_$",
                        "typeString": "type(struct UniversalExchangeEventV1.ExchangeDetails storage pointer)"
                      }
                    },
                    "id": 5006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenContract",
                      "tokenId",
                      "amount"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "16811:78:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeDetails_$1347_memory_ptr",
                      "typeString": "struct UniversalExchangeEventV1.ExchangeDetails memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16765:124:17"
                },
                {
                  "assignments": [
                    5010
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5010,
                      "mutability": "mutable",
                      "name": "userBExchangeDetails",
                      "nameLocation": "16922:20:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 5044,
                      "src": "16899:43:17",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeDetails_$1347_memory_ptr",
                        "typeString": "struct UniversalExchangeEventV1.ExchangeDetails"
                      },
                      "typeName": {
                        "id": 5009,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5008,
                          "name": "ExchangeDetails",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1347,
                          "src": "16899:15:17"
                        },
                        "referencedDeclaration": 1347,
                        "src": "16899:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeDetails_$1347_storage_ptr",
                          "typeString": "struct UniversalExchangeEventV1.ExchangeDetails"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5018,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5012,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4886,
                          "src": "16977:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 5013,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "askCurrency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4545,
                        "src": "16977:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 5014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17003:1:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "expression": {
                          "id": 5015,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4886,
                          "src": "17014:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 5016,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "askPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4549,
                        "src": "17014:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5011,
                      "name": "ExchangeDetails",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1347,
                      "src": "16945:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExchangeDetails_$1347_storage_ptr_$",
                        "typeString": "type(struct UniversalExchangeEventV1.ExchangeDetails storage pointer)"
                      }
                    },
                    "id": 5017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenContract",
                      "tokenId",
                      "amount"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "16945:83:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeDetails_$1347_memory_ptr",
                      "typeString": "struct UniversalExchangeEventV1.ExchangeDetails memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16899:129:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5020,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4886,
                          "src": "17061:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 5021,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4541,
                        "src": "17061:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 5022,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "17073:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17073:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5024,
                        "name": "userAExchangeDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5001,
                        "src": "17085:20:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeDetails_$1347_memory_ptr",
                          "typeString": "struct UniversalExchangeEventV1.ExchangeDetails memory"
                        }
                      },
                      {
                        "id": 5025,
                        "name": "userBExchangeDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5010,
                        "src": "17107:20:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeDetails_$1347_memory_ptr",
                          "typeString": "struct UniversalExchangeEventV1.ExchangeDetails memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ExchangeDetails_$1347_memory_ptr",
                          "typeString": "struct UniversalExchangeEventV1.ExchangeDetails memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_ExchangeDetails_$1347_memory_ptr",
                          "typeString": "struct UniversalExchangeEventV1.ExchangeDetails memory"
                        }
                      ],
                      "id": 5019,
                      "name": "ExchangeExecuted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1360,
                      "src": "17044:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_struct$_ExchangeDetails_$1347_memory_ptr_$_t_struct$_ExchangeDetails_$1347_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,struct UniversalExchangeEventV1.ExchangeDetails memory,struct UniversalExchangeEventV1.ExchangeDetails memory)"
                      }
                    },
                    "id": 5026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17044:84:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5027,
                  "nodeType": "EmitStatement",
                  "src": "17039:89:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5029,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4871,
                        "src": "17153:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5030,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4873,
                        "src": "17169:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 5031,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "17179:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17179:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5033,
                        "name": "_finder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4879,
                        "src": "17191:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5034,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4886,
                        "src": "17200:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Ask_$4550_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask storage pointer"
                        }
                      ],
                      "id": 5028,
                      "name": "AskFilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4594,
                      "src": "17143:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_struct$_Ask_$4550_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,address,address,struct AsksV1_1.Ask memory)"
                      }
                    },
                    "id": 5035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17143:61:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5036,
                  "nodeType": "EmitStatement",
                  "src": "17138:66:17"
                },
                {
                  "expression": {
                    "id": 5042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "17215:42:17",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 5037,
                          "name": "askForNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4539,
                          "src": "17222:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$4550_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                          }
                        },
                        "id": 5039,
                        "indexExpression": {
                          "id": 5038,
                          "name": "_tokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4871,
                          "src": "17232:14:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17222:25:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$4550_storage_$",
                          "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                        }
                      },
                      "id": 5041,
                      "indexExpression": {
                        "id": 5040,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4873,
                        "src": "17248:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17222:35:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$4550_storage",
                        "typeString": "struct AsksV1_1.Ask storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5043,
                  "nodeType": "ExpressionStatement",
                  "src": "17215:42:17"
                }
              ]
            },
            "documentation": {
              "id": 4869,
              "nodeType": "StructuredDocumentation",
              "src": "14717:427:17",
              "text": "@notice Fills the ask for a given NFT, transferring the ETH/ERC-20 to the seller and NFT to the buyer\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The ID of the ERC-721 token\n @param _fillCurrency The address of the ERC-20 token using to fill, or address(0) for ETH\n @param _fillAmount The amount to fill the ask\n @param _finder The address of the ask referrer"
            },
            "functionSelector": "622dcbd7",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4882,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4881,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 56013,
                  "src": "15332:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "15332:12:17"
              }
            ],
            "name": "fillAsk",
            "nameLocation": "15158:7:17",
            "parameters": {
              "id": 4880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4871,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "15183:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5045,
                  "src": "15175:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4870,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15175:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4873,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "15215:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5045,
                  "src": "15207:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4872,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15207:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4875,
                  "mutability": "mutable",
                  "name": "_fillCurrency",
                  "nameLocation": "15241:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5045,
                  "src": "15233:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4874,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15233:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4877,
                  "mutability": "mutable",
                  "name": "_fillAmount",
                  "nameLocation": "15272:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5045,
                  "src": "15264:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4876,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15264:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4879,
                  "mutability": "mutable",
                  "name": "_finder",
                  "nameLocation": "15301:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5045,
                  "src": "15293:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15293:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15165:149:17"
            },
            "returnParameters": {
              "id": 4883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15345:0:17"
            },
            "scope": 5072,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5071,
            "nodeType": "FunctionDefinition",
            "src": "17432:219:17",
            "body": {
              "id": 5070,
              "nodeType": "Block",
              "src": "17502:149:17",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5054,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5048,
                        "src": "17529:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5055,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5050,
                        "src": "17545:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 5056,
                            "name": "askForNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4539,
                            "src": "17555:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$4550_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                            }
                          },
                          "id": 5058,
                          "indexExpression": {
                            "id": 5057,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5048,
                            "src": "17565:14:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17555:25:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$4550_storage_$",
                            "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                          }
                        },
                        "id": 5060,
                        "indexExpression": {
                          "id": 5059,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5050,
                          "src": "17581:8:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17555:35:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$4550_storage",
                          "typeString": "struct AsksV1_1.Ask storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Ask_$4550_storage",
                          "typeString": "struct AsksV1_1.Ask storage ref"
                        }
                      ],
                      "id": 5053,
                      "name": "AskCanceled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4580,
                      "src": "17517:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Ask_$4550_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,struct AsksV1_1.Ask memory)"
                      }
                    },
                    "id": 5061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17517:74:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5062,
                  "nodeType": "EmitStatement",
                  "src": "17512:79:17"
                },
                {
                  "expression": {
                    "id": 5068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "17602:42:17",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 5063,
                          "name": "askForNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4539,
                          "src": "17609:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$4550_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                          }
                        },
                        "id": 5065,
                        "indexExpression": {
                          "id": 5064,
                          "name": "_tokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5048,
                          "src": "17619:14:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17609:25:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$4550_storage_$",
                          "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                        }
                      },
                      "id": 5067,
                      "indexExpression": {
                        "id": 5066,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5050,
                        "src": "17635:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17609:35:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$4550_storage",
                        "typeString": "struct AsksV1_1.Ask storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5069,
                  "nodeType": "ExpressionStatement",
                  "src": "17602:42:17"
                }
              ]
            },
            "documentation": {
              "id": 5046,
              "nodeType": "StructuredDocumentation",
              "src": "17270:157:17",
              "text": "@dev Deletes canceled and invalid asks\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The ID of the ERC-721 token"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_cancelAsk",
            "nameLocation": "17441:10:17",
            "parameters": {
              "id": 5051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5048,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "17460:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5071,
                  "src": "17452:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5047,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17452:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5050,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "17484:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5071,
                  "src": "17476:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5049,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17476:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17451:42:17"
            },
            "returnParameters": {
              "id": 5052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17502:0:17"
            },
            "scope": 5072,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4514,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 56014,
              "src": "968:15:17"
            },
            "id": 4515,
            "nodeType": "InheritanceSpecifier",
            "src": "968:15:17"
          },
          {
            "baseName": {
              "id": 4516,
              "name": "UniversalExchangeEventV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1361,
              "src": "985:24:17"
            },
            "id": 4517,
            "nodeType": "InheritanceSpecifier",
            "src": "985:24:17"
          },
          {
            "baseName": {
              "id": 4518,
              "name": "IncomingTransferSupportV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1173,
              "src": "1011:25:17"
            },
            "id": 4519,
            "nodeType": "InheritanceSpecifier",
            "src": "1011:25:17"
          },
          {
            "baseName": {
              "id": 4520,
              "name": "FeePayoutSupportV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1068,
              "src": "1038:18:17"
            },
            "id": 4521,
            "nodeType": "InheritanceSpecifier",
            "src": "1038:18:17"
          },
          {
            "baseName": {
              "id": 4522,
              "name": "ModuleNamingSupportV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1191,
              "src": "1058:21:17"
            },
            "id": 4523,
            "nodeType": "InheritanceSpecifier",
            "src": "1058:21:17"
          }
        ],
        "canonicalName": "AsksV1_1",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4513,
          "nodeType": "StructuredDocumentation",
          "src": "731:216:17",
          "text": "@title Asks V1.1\n @author tbtstl <t@zora.co>\n @notice This module allows sellers to list an owned ERC-721 token for sale for a given price in a given currency, and allows buyers to purchase from those asks"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          5072,
          1191,
          1068,
          1337,
          1173,
          1361,
          56014
        ],
        "name": "AsksV1_1",
        "nameLocation": "956:8:17",
        "scope": 5073,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 17
}