/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { AsksCoreErc20, AsksCoreErc20Interface } from "../AsksCoreErc20";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20TransferHelper",
        type: "address",
      },
      {
        internalType: "address",
        name: "_erc721TransferHelper",
        type: "address",
      },
      {
        internalType: "address",
        name: "_royaltyEngine",
        type: "address",
      },
      {
        internalType: "address",
        name: "_protocolFeeSettings",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "price",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct AsksCoreErc20.Ask",
        name: "ask",
        type: "tuple",
      },
    ],
    name: "AskCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "price",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct AsksCoreErc20.Ask",
        name: "ask",
        type: "tuple",
      },
    ],
    name: "AskCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "price",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct AsksCoreErc20.Ask",
        name: "ask",
        type: "tuple",
      },
    ],
    name: "AskFilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "price",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct AsksCoreErc20.Ask",
        name: "ask",
        type: "tuple",
      },
    ],
    name: "AskPriceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RoyaltyPayout",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_payoutCurrency",
        type: "address",
      },
    ],
    name: "_handleRoyaltyEnginePayout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "askForNFT",
    outputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "price",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "cancelAsk",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_currency",
        type: "address",
      },
    ],
    name: "createAsk",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20TransferHelper",
    outputs: [
      {
        internalType: "contract ERC20TransferHelper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc721TransferHelper",
    outputs: [
      {
        internalType: "contract ERC721TransferHelper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_currency",
        type: "address",
      },
    ],
    name: "fillAsk",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registrar",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_currency",
        type: "address",
      },
    ],
    name: "setAskPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_royaltyEngine",
        type: "address",
      },
    ],
    name: "setRoyaltyEngineAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61012060405260016000553480156200001757600080fd5b5060405162002c7e38038062002c7e8339810160408190526200003a9162000255565b6040518060400160405280601081526020016f041736b7320436f7265204552432d32360841b815250838383876001600160a01b031663e3e606f06040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000a5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000cb9190620002d5565b6001600160a01b0316632b20e3976040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000109573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200012f9190620002d5565b6001600160a01b038a811660805291821660a052600180546001600160a01b0319169483169490941790935590811660e0521660c05280516200017a90600290602084019062000196565b5050506001600160a01b03909216610100525062000339915050565b828054620001a490620002fc565b90600052602060002090601f016020900481019282620001c8576000855562000213565b82601f10620001e357805160ff191683800117855562000213565b8280016001018555821562000213579182015b8281111562000213578251825591602001919060010190620001f6565b506200022192915062000225565b5090565b5b8082111562000221576000815560010162000226565b6001600160a01b03811681146200025257600080fd5b50565b600080600080600060a086880312156200026e57600080fd5b85516200027b816200023c565b60208701519095506200028e816200023c565b6040870151909450620002a1816200023c565b6060870151909350620002b4816200023c565b6080870151909250620002c7816200023c565b809150509295509295909350565b600060208284031215620002e857600080fd5b8151620002f5816200023c565b9392505050565b600181811c908216806200031157607f821691505b602082108114156200033357634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e051610100516128dd620003a16000396000818161033c01526114bc015260008181611cf00152611d9c015260008181610135015261102401526000818161173401526117cc01526000818161029401526119e501526128dd6000f3fe6080604052600436106100c75760003560e01c80638f9d325111610074578063b249bb301161004e578063b249bb30146102f7578063d860634314610317578063f7cd1d9b1461032a57600080fd5b80638f9d3251146102825780639128c22c146102b6578063b2007533146102d757600080fd5b80632b9f663e116100a55780632b9f663e1461017c57806340b807461461019e578063418f0656146101be57600080fd5b806301ffc9a7146100cc57806306fdde03146101015780632b20e39714610123575b600080fd5b3480156100d857600080fd5b506100ec6100e73660046122df565b61035e565b60405190151581526020015b60405180910390f35b34801561010d57600080fd5b506101166103f7565b6040516100f8919061234d565b34801561012f57600080fd5b506101577f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f8565b34801561018857600080fd5b5061019c6101973660046123c3565b610485565b005b3480156101aa57600080fd5b5061019c6101b936600461240d565b6107f3565b3480156101ca57600080fd5b5061023e6101d936600461240d565b60036020908152600092835260408084209091529082529020805460019091015473ffffffffffffffffffffffffffffffffffffffff808316927401000000000000000000000000000000000000000090046bffffffffffffffffffffffff16911683565b6040805173ffffffffffffffffffffffffffffffffffffffff94851681526bffffffffffffffffffffffff90931660208401529216918101919091526060016100f8565b34801561028e57600080fd5b506101577f000000000000000000000000000000000000000000000000000000000000000081565b6102c96102c43660046123c3565b610ac4565b6040519081526020016100f8565b3480156102e357600080fd5b5061019c6102f23660046123c3565b610d69565b34801561030357600080fd5b5061019c610312366004612439565b61100c565b61019c6103253660046123c3565b6111ce565b34801561033657600080fd5b506101577f000000000000000000000000000000000000000000000000000000000000000081565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f014777080000000000000000000000000000000000000000000000000000000014806103f157507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6002805461040490612456565b80601f016020809104026020016040519081016040528092919081815260200182805461043090612456565b801561047d5780601f106104525761010080835404028352916020019161047d565b820191906000526020600020905b81548152906001019060200180831161046057829003601f168201915b505050505081565b6000546001146104f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600260009081556040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff861690636352211e90602401602060405180830381865afa158015610568573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058c91906124aa565b90503373ffffffffffffffffffffffffffffffffffffffff8216148061064357506040517fe985e9c500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015233602483015286169063e985e9c590604401602060405180830381865afa15801561061f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064391906124c7565b6106a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4f4e4c595f544f4b454e5f4f574e45525f4f525f4f50455241544f520000000060448201526064016104ed565b6bffffffffffffffffffffffff83111561071f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f494e56414c49445f41534b5f505249434500000000000000000000000000000060448201526064016104ed565b73ffffffffffffffffffffffffffffffffffffffff858116600081815260036020908152604080832089845290915290819020848416740100000000000000000000000000000000000000006bffffffffffffffffffffffff8916021781556001810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016948716949094179093555186927fa5bd647f34fcbc80ec242a9c943441939ba9c241c90515e6c49bd8c3207a3147916107df91906124e9565b60405180910390a350506001600055505050565b60005460011461085f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016104ed565b6002600090815573ffffffffffffffffffffffffffffffffffffffff838116825260036020908152604080842085855282529283902083516060810185528154808516808352740100000000000000000000000000000000000000009091046bffffffffffffffffffffffff169382019390935260019091015490921692820192909252903314806109aa57506040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff841690636352211e90602401602060405180830381865afa158015610957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097b91906124aa565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610a10576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4f4e4c595f53454c4c45525f4f525f544f4b454e5f4f574e455200000000000060448201526064016104ed565b818373ffffffffffffffffffffffffffffffffffffffff167ffa3f57ecc148dff66af5b7988fd23bb7d42b7c6cf1ac1f4c611980667d88800783604051610a579190612524565b60405180910390a35073ffffffffffffffffffffffffffffffffffffffff9091166000908152600360209081526040808320938352929052908120818155600190810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690559055565b6000333014610b55576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f5f68616e646c65526f79616c7479456e67696e655061796f7574206f6e6c792060448201527f73656c662063616c6c61626c650000000000000000000000000000000000000060648201526084016104ed565b6001546040517ff533b80200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301526024820187905260448201869052600092839291169063f533b802906064016000604051808303816000875af1158015610bd9573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610c1f919081019061267a565b8151919350915080610c3657859350505050610d61565b85600080805b84811015610d5757868181518110610c5657610c5661273f565b60200260200101519250858181518110610c7257610c7261273f565b6020026020010151915081841015610ce6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f696e736f6c76656e74000000000000000000000000000000000000000000000060448201526064016104ed565b610cf483838b61c3506115d5565b6040805173ffffffffffffffffffffffffffffffffffffffff8581168252602082018590528d92908f16917f866e6ef8682ddf5f1025e64dfdb45527077f7be70fa9ef680b7ffd8cf4ab9c50910160405180910390a39281900392600101610c3c565b5091955050505050505b949350505050565b600054600114610dd5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016104ed565b6002600090815573ffffffffffffffffffffffffffffffffffffffff858116825260036020908152604080842087855290915290912080549091163314610e78576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4f4e4c595f53454c4c455200000000000000000000000000000000000000000060448201526064016104ed565b80547401000000000000000000000000000000000000000090046bffffffffffffffffffffffff168314610f5e576bffffffffffffffffffffffff831115610f1c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f494e56414c49445f41534b5f505249434500000000000000000000000000000060448201526064016104ed565b805473ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000006bffffffffffffffffffffffff8516021781555b600181015473ffffffffffffffffffffffffffffffffffffffff838116911614610fc5576001810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84161790555b838573ffffffffffffffffffffffffffffffffffffffff167f0c294c0a739f71ec000739c4763bc46f863f09ca23f26cd9b293094e13e1be1e836040516107df91906124e9565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146110d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f736574526f79616c7479456e67696e6541646472657373206f6e6c792072656760448201527f697374726172000000000000000000000000000000000000000000000000000060648201526084016104ed565b6110fb817fcb23f81600000000000000000000000000000000000000000000000000000000611825565b611187576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f736574526f79616c7479456e67696e6541646472657373206d757374206d617460448201527f63682049526f79616c7479456e67696e65563120696e7465726661636500000060648201526084016104ed565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005460011461123a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016104ed565b6002600090815573ffffffffffffffffffffffffffffffffffffffff858116825260036020908152604080842087855282529283902083516060810185528154808516808352740100000000000000000000000000000000000000009091046bffffffffffffffffffffffff1693820193909352600190910154909216928201929092529080611326576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f494e4143544956455f41534b000000000000000000000000000000000000000060448201526064016104ed565b60208201516bffffffffffffffffffffffff168481146113a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f4d5553545f4d415443485f50524943450000000000000000000000000000000060448201526064016104ed565b604083015173ffffffffffffffffffffffffffffffffffffffff85811690821614611429576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4d5553545f4d415443485f43555252454e43590000000000000000000000000060448201526064016104ed565b6114338282611848565b600061144589898585620493e0611b9b565b5090506114528183611ca1565b905061146284828461c3506115d5565b6040517f15dacbea00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a811660048301528581166024830152336044830152606482018a90527f000000000000000000000000000000000000000000000000000000000000000016906315dacbea90608401600060405180830381600087803b15801561150057600080fd5b505af1158015611514573d6000803e3d6000fd5b50505050878973ffffffffffffffffffffffffffffffffffffffff167f4f241d819b27a0bbc6cc9667ecdfc0bb171d27659515e844c3442b203848d142338860405161156192919061276e565b60405180910390a350505073ffffffffffffffffffffffffffffffffffffffff9095166000908152600360209081526040808320968352959052938420848155600190810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590935550505050565b8215806115f6575073ffffffffffffffffffffffffffffffffffffffff8416155b156116005761181f565b73ffffffffffffffffffffffffffffffffffffffff82166117fe57824710156116ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5f68616e646c654f7574676f696e675472616e7366657220696e736f6c76656e60448201527f740000000000000000000000000000000000000000000000000000000000000060648201526084016104ed565b60008115806116b957505a82115b6116c357816116c5565b5a5b905060008573ffffffffffffffffffffffffffffffffffffffff16858390604051600060405180830381858888f193505050503d8060008114611724576040519150601f19603f3d011682016040523d82523d6000602084013e611729565b606091505b50509050806117f7577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0866040518263ffffffff1660e01b81526004016000604051808303818588803b15801561179a57600080fd5b505af11580156117ae573d6000803e3d6000fd5b506117f793505073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016915088905087611e3f565b505061181f565b61181f73ffffffffffffffffffffffffffffffffffffffff83168585611e3f565b50505050565b600061183083611ed1565b801561184157506118418383611f35565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff81166118f757813410156118f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f5f68616e646c65496e636f6d696e675472616e73666572206d73672076616c7560448201527f65206c657373207468616e20657870656374656420616d6f756e74000000000060648201526084016104ed565b5050565b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152819060009073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015611966573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061198a91906127d3565b6040517fd9fc4b6100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152336024830152306044830152606482018790529192507f00000000000000000000000000000000000000000000000000000000000000009091169063d9fc4b6190608401600060405180830381600087803b158015611a2b57600080fd5b505af1158015611a3f573d6000803e3d6000fd5b50506040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000925073ffffffffffffffffffffffffffffffffffffffff851691506370a0823190602401602060405180830381865afa158015611ab0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad491906127d3565b905080611ae1868461281b565b14611b94576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604c60248201527f5f68616e646c65496e636f6d696e675472616e7366657220746f6b656e20747260448201527f616e736665722063616c6c20646964206e6f74207472616e736665722065787060648201527f656374656420616d6f756e740000000000000000000000000000000000000000608482015260a4016104ed565b5050505050565b60008080831580611bab57505a84115b611bb55783611bb7565b5a5b6040517f9128c22c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808b166004830152602482018a905260448201899052871660648201529091503090639128c22c90839060840160206040518083038160008887f193505050508015611c79575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252611c76918101906127d3565b60015b611c8a578560009250925050611c97565b925060019150611c979050565b9550959350505050565b6040517f61b485f600000000000000000000000000000000000000000000000000000000815230600482015260248101839052600090819073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906361b485f690604401602060405180830381865afa158015611d37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d5b91906127d3565b905080611d6b57839150506103f1565b6040517f86ab6fb90000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906386ab6fb9906024016040805180830381865afa158015611df7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e1b9190612833565b915050611e2c81838661c3506115d5565b611e368286612874565b95945050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052611ecc908490612071565b505050565b6000611efd827f01ffc9a700000000000000000000000000000000000000000000000000000000611f35565b80156103f15750611f2e827fffffffff00000000000000000000000000000000000000000000000000000000611f35565b1592915050565b604080517fffffffff00000000000000000000000000000000000000000000000000000000831660248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f01ffc9a7000000000000000000000000000000000000000000000000000000001790529051600091908290819073ffffffffffffffffffffffffffffffffffffffff87169061753090611fef90869061288b565b6000604051808303818686fa925050503d806000811461202b576040519150601f19603f3d011682016040523d82523d6000602084013e612030565b606091505b509150915060208151101561204b57600093505050506103f1565b81801561206757508080602001905181019061206791906124c7565b9695505050505050565b60006120d3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661217d9092919063ffffffff16565b805190915015611ecc57808060200190518101906120f191906124c7565b611ecc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016104ed565b6060610d6184846000858573ffffffffffffffffffffffffffffffffffffffff85163b612206576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104ed565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161222f919061288b565b60006040518083038185875af1925050503d806000811461226c576040519150601f19603f3d011682016040523d82523d6000602084013e612271565b606091505b509150915061228182828661228c565b979650505050505050565b6060831561229b575081611841565b8251156122ab5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ed919061234d565b6000602082840312156122f157600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461184157600080fd5b60005b8381101561233c578181015183820152602001612324565b8381111561181f5750506000910152565b602081526000825180602084015261236c816040850160208701612321565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b73ffffffffffffffffffffffffffffffffffffffff811681146123c057600080fd5b50565b600080600080608085870312156123d957600080fd5b84356123e48161239e565b9350602085013592506040850135915060608501356124028161239e565b939692955090935050565b6000806040838503121561242057600080fd5b823561242b8161239e565b946020939093013593505050565b60006020828403121561244b57600080fd5b81356118418161239e565b600181811c9082168061246a57607f821691505b602082108114156124a4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000602082840312156124bc57600080fd5b81516118418161239e565b6000602082840312156124d957600080fd5b8151801515811461184157600080fd5b815473ffffffffffffffffffffffffffffffffffffffff808216835260a09190911c60208301526001830154166040820152606081016103f1565b606081016103f18284805173ffffffffffffffffffffffffffffffffffffffff90811683526020808301516bffffffffffffffffffffffff169084015260409182015116910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156125e3576125e361256d565b604052919050565b600067ffffffffffffffff8211156126055761260561256d565b5060051b60200190565b600082601f83011261262057600080fd5b81516020612635612630836125eb565b61259c565b82815260059290921b8401810191818101908684111561265457600080fd5b8286015b8481101561266f5780518352918301918301612658565b509695505050505050565b6000806040838503121561268d57600080fd5b825167ffffffffffffffff808211156126a557600080fd5b818501915085601f8301126126b957600080fd5b815160206126c9612630836125eb565b82815260059290921b840181019181810190898411156126e857600080fd5b948201945b8386101561270f5785516127008161239e565b825294820194908201906126ed565b9188015191965090935050508082111561272857600080fd5b506127358582860161260f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff83168152608081016118416020830184805173ffffffffffffffffffffffffffffffffffffffff90811683526020808301516bffffffffffffffffffffffff169084015260409182015116910152565b6000602082840312156127e557600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561282e5761282e6127ec565b500190565b6000806040838503121561284657600080fd5b825161ffff8116811461285857600080fd5b60208401519092506128698161239e565b809150509250929050565b600082821015612886576128866127ec565b500390565b6000825161289d818460208701612321565b919091019291505056fea2646970667358221220c528a3dccc5ed0ea3b74715fb3fe7ea698b4454c485197c91c8b84f16f18bf7664736f6c634300080a0033";

type AsksCoreErc20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AsksCoreErc20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AsksCoreErc20__factory extends ContractFactory {
  constructor(...args: AsksCoreErc20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _erc20TransferHelper: PromiseOrValue<string>,
    _erc721TransferHelper: PromiseOrValue<string>,
    _royaltyEngine: PromiseOrValue<string>,
    _protocolFeeSettings: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AsksCoreErc20> {
    return super.deploy(
      _erc20TransferHelper,
      _erc721TransferHelper,
      _royaltyEngine,
      _protocolFeeSettings,
      _weth,
      overrides || {}
    ) as Promise<AsksCoreErc20>;
  }
  override getDeployTransaction(
    _erc20TransferHelper: PromiseOrValue<string>,
    _erc721TransferHelper: PromiseOrValue<string>,
    _royaltyEngine: PromiseOrValue<string>,
    _protocolFeeSettings: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _erc20TransferHelper,
      _erc721TransferHelper,
      _royaltyEngine,
      _protocolFeeSettings,
      _weth,
      overrides || {}
    );
  }
  override attach(address: string): AsksCoreErc20 {
    return super.attach(address) as AsksCoreErc20;
  }
  override connect(signer: Signer): AsksCoreErc20__factory {
    return super.connect(signer) as AsksCoreErc20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AsksCoreErc20Interface {
    return new utils.Interface(_abi) as AsksCoreErc20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AsksCoreErc20 {
    return new Contract(address, _abi, signerOrProvider) as AsksCoreErc20;
  }
}
