/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  FeePayoutSupportV1,
  FeePayoutSupportV1Interface,
} from "../FeePayoutSupportV1";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_royaltyEngine",
        type: "address",
      },
      {
        internalType: "address",
        name: "_protocolFeeSettings",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wethAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_registrarAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RoyaltyPayout",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_payoutCurrency",
        type: "address",
      },
    ],
    name: "_handleRoyaltyEnginePayout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "registrar",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_royaltyEngine",
        type: "address",
      },
    ],
    name: "setRoyaltyEngineAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b50604051620011863803806200118683398101604081905261003191610082565b6001600160a01b03918216608052600080546001600160a01b0319169483169490941790935590811660c0521660a0526100d6565b80516001600160a01b038116811461007d57600080fd5b919050565b6000806000806080858703121561009857600080fd5b6100a185610066565b93506100af60208601610066565b92506100bd60408601610066565b91506100cb60608601610066565b905092959194509250565b60805160a05160c051611076620001106000396000505060008181604b01526103990152600081816106a2015261073a01526110766000f3fe6080604052600436106100345760003560e01c80632b20e397146100395780639128c22c14610097578063b249bb30146100b8575b600080fd5b34801561004557600080fd5b5061006d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100aa6100a5366004610d1d565b6100da565b60405190815260200161008e565b3480156100c457600080fd5b506100d86100d3366004610d67565b610381565b005b6000333014610170576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f5f68616e646c65526f79616c7479456e67696e655061796f7574206f6e6c792060448201527f73656c662063616c6c61626c650000000000000000000000000000000000000060648201526084015b60405180910390fd5b600080546040517ff533b80200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff888116600483015260248201889052604482018790528392169063f533b802906064016000604051808303816000875af11580156101f1573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526102379190810190610e91565b815191935091508061024e57859350505050610379565b85600080805b8481101561036f5786818151811061026e5761026e610f56565b6020026020010151925085818151811061028a5761028a610f56565b60200260200101519150818410156102fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f696e736f6c76656e7400000000000000000000000000000000000000000000006044820152606401610167565b61030c83838b61c350610543565b6040805173ffffffffffffffffffffffffffffffffffffffff8581168252602082018590528d92908f16917f866e6ef8682ddf5f1025e64dfdb45527077f7be70fa9ef680b7ffd8cf4ab9c50910160405180910390a39281900392600101610254565b5091955050505050505b949350505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610446576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f736574526f79616c7479456e67696e6541646472657373206f6e6c792072656760448201527f69737472617200000000000000000000000000000000000000000000000000006064820152608401610167565b610470817fcb23f81600000000000000000000000000000000000000000000000000000000610793565b6104fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f736574526f79616c7479456e67696e6541646472657373206d757374206d617460448201527f63682049526f79616c7479456e67696e65563120696e746572666163650000006064820152608401610167565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b821580610564575073ffffffffffffffffffffffffffffffffffffffff8416155b1561056e5761078d565b73ffffffffffffffffffffffffffffffffffffffff821661076c5782471015610619576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5f68616e646c654f7574676f696e675472616e7366657220696e736f6c76656e60448201527f74000000000000000000000000000000000000000000000000000000000000006064820152608401610167565b600081158061062757505a82115b6106315781610633565b5a5b905060008573ffffffffffffffffffffffffffffffffffffffff16858390604051600060405180830381858888f193505050503d8060008114610692576040519150601f19603f3d011682016040523d82523d6000602084013e610697565b606091505b5050905080610765577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0866040518263ffffffff1660e01b81526004016000604051808303818588803b15801561070857600080fd5b505af115801561071c573d6000803e3d6000fd5b5061076593505073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169150889050876107b8565b505061078d565b61078d73ffffffffffffffffffffffffffffffffffffffff831685856107b8565b50505050565b600061079e8361084a565b80156107af57506107af83836108ae565b90505b92915050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526108459084906109ea565b505050565b6000610876827f01ffc9a7000000000000000000000000000000000000000000000000000000006108ae565b80156107b257506108a7827fffffffff000000000000000000000000000000000000000000000000000000006108ae565b1592915050565b604080517fffffffff00000000000000000000000000000000000000000000000000000000831660248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f01ffc9a7000000000000000000000000000000000000000000000000000000001790529051600091908290819073ffffffffffffffffffffffffffffffffffffffff87169061753090610968908690610fb1565b6000604051808303818686fa925050503d80600081146109a4576040519150601f19603f3d011682016040523d82523d6000602084013e6109a9565b606091505b50915091506020815110156109c457600093505050506107b2565b8180156109e05750808060200190518101906109e09190610fcd565b9695505050505050565b6000610a4c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610af69092919063ffffffff16565b8051909150156108455780806020019051810190610a6a9190610fcd565b610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610167565b6060610b058484600085610b0f565b90505b9392505050565b606082471015610ba1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610167565b73ffffffffffffffffffffffffffffffffffffffff85163b610c1f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610167565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610c489190610fb1565b60006040518083038185875af1925050503d8060008114610c85576040519150601f19603f3d011682016040523d82523d6000602084013e610c8a565b606091505b5091509150610c9a828286610ca5565b979650505050505050565b60608315610cb4575081610b08565b825115610cc45782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101679190610fef565b73ffffffffffffffffffffffffffffffffffffffff81168114610d1a57600080fd5b50565b60008060008060808587031215610d3357600080fd5b8435610d3e81610cf8565b935060208501359250604085013591506060850135610d5c81610cf8565b939692955090935050565b600060208284031215610d7957600080fd5b8135610b0881610cf8565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610dfa57610dfa610d84565b604052919050565b600067ffffffffffffffff821115610e1c57610e1c610d84565b5060051b60200190565b600082601f830112610e3757600080fd5b81516020610e4c610e4783610e02565b610db3565b82815260059290921b84018101918181019086841115610e6b57600080fd5b8286015b84811015610e865780518352918301918301610e6f565b509695505050505050565b60008060408385031215610ea457600080fd5b825167ffffffffffffffff80821115610ebc57600080fd5b818501915085601f830112610ed057600080fd5b81516020610ee0610e4783610e02565b82815260059290921b84018101918181019089841115610eff57600080fd5b948201945b83861015610f26578551610f1781610cf8565b82529482019490820190610f04565b91880151919650909350505080821115610f3f57600080fd5b50610f4c85828601610e26565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60005b83811015610fa0578181015183820152602001610f88565b8381111561078d5750506000910152565b60008251610fc3818460208701610f85565b9190910192915050565b600060208284031215610fdf57600080fd5b81518015158114610b0857600080fd5b602081526000825180602084015261100e816040850160208701610f85565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea2646970667358221220cad865aa5889fb89d2d52d222f843fe764defdc6b4123cce3a694e2180acbd8c64736f6c634300080a0033";

type FeePayoutSupportV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeePayoutSupportV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeePayoutSupportV1__factory extends ContractFactory {
  constructor(...args: FeePayoutSupportV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _royaltyEngine: PromiseOrValue<string>,
    _protocolFeeSettings: PromiseOrValue<string>,
    _wethAddress: PromiseOrValue<string>,
    _registrarAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FeePayoutSupportV1> {
    return super.deploy(
      _royaltyEngine,
      _protocolFeeSettings,
      _wethAddress,
      _registrarAddress,
      overrides || {}
    ) as Promise<FeePayoutSupportV1>;
  }
  override getDeployTransaction(
    _royaltyEngine: PromiseOrValue<string>,
    _protocolFeeSettings: PromiseOrValue<string>,
    _wethAddress: PromiseOrValue<string>,
    _registrarAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _royaltyEngine,
      _protocolFeeSettings,
      _wethAddress,
      _registrarAddress,
      overrides || {}
    );
  }
  override attach(address: string): FeePayoutSupportV1 {
    return super.attach(address) as FeePayoutSupportV1;
  }
  override connect(signer: Signer): FeePayoutSupportV1__factory {
    return super.connect(signer) as FeePayoutSupportV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeePayoutSupportV1Interface {
    return new utils.Interface(_abi) as FeePayoutSupportV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeePayoutSupportV1 {
    return new Contract(address, _abi, signerOrProvider) as FeePayoutSupportV1;
  }
}
