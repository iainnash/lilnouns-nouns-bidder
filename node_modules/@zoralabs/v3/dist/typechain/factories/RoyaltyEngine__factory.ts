/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { RoyaltyEngine, RoyaltyEngineInterface } from "../RoyaltyEngine";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_royaltyRecipient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "RoyaltyView",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "getRoyalty",
    outputs: [
      {
        internalType: "address payable[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "recipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516103a43803806103a483398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610311806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806366d003ac1461003b578063f533b80214610085575b600080fd5b60005461005b9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100986100933660046101cd565b6100a6565b60405161007c92919061021b565b604080516001808252818301909252606091829160009160208083019080368337505060008054835193945073ffffffffffffffffffffffffffffffffffffffff16928492506100f8576100f86102ac565b73ffffffffffffffffffffffffffffffffffffffff929092166020928302919091019091015260408051600180825281830190925260009181602001602082028036833701905050905066b1a2bc2ec500008160008151811061015d5761015d6102ac565b6020908102919091018101919091526040805173ffffffffffffffffffffffffffffffffffffffff8a16815291820188905281018690527fc82531004abb0c877ef2767b4d215410f88587a6e55e7ea915b54b01944df81f9060600160405180910390a190969095509350505050565b6000806000606084860312156101e257600080fd5b833573ffffffffffffffffffffffffffffffffffffffff8116811461020657600080fd5b95602085013595506040909401359392505050565b604080825283519082018190526000906020906060840190828701845b8281101561026a57815173ffffffffffffffffffffffffffffffffffffffff1684529284019290840190600101610238565b5050508381038285015284518082528583019183019060005b8181101561029f57835183529284019291840191600101610283565b5090979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212204423d07ec00c316145cc7e61d46b65aa078c49c5501615778283f301cc4f0d6264736f6c634300080a0033";

type RoyaltyEngineConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoyaltyEngineConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RoyaltyEngine__factory extends ContractFactory {
  constructor(...args: RoyaltyEngineConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _royaltyRecipient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RoyaltyEngine> {
    return super.deploy(
      _royaltyRecipient,
      overrides || {}
    ) as Promise<RoyaltyEngine>;
  }
  override getDeployTransaction(
    _royaltyRecipient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_royaltyRecipient, overrides || {});
  }
  override attach(address: string): RoyaltyEngine {
    return super.attach(address) as RoyaltyEngine;
  }
  override connect(signer: Signer): RoyaltyEngine__factory {
    return super.connect(signer) as RoyaltyEngine__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoyaltyEngineInterface {
    return new utils.Interface(_abi) as RoyaltyEngineInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RoyaltyEngine {
    return new Contract(address, _abi, signerOrProvider) as RoyaltyEngine;
  }
}
